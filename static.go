// Code generated by go-bindata.
// sources:
// tmpl/clan-errors.html
// tmpl/clan-info.html
// tmpl/test.html
// tmpl/test.txt
// bower_components/font-roboto/.bower.json
// bower_components/font-roboto/README.md
// bower_components/font-roboto/bower.json
// bower_components/font-roboto/roboto.html
// bower_components/iron-a11y-announcer/.bower.json
// bower_components/iron-a11y-announcer/.github/ISSUE_TEMPLATE.md
// bower_components/iron-a11y-announcer/.gitignore
// bower_components/iron-a11y-announcer/.travis.yml
// bower_components/iron-a11y-announcer/CONTRIBUTING.md
// bower_components/iron-a11y-announcer/README.md
// bower_components/iron-a11y-announcer/bower.json
// bower_components/iron-a11y-announcer/demo/index.html
// bower_components/iron-a11y-announcer/demo/x-announces.html
// bower_components/iron-a11y-announcer/index.html
// bower_components/iron-a11y-announcer/iron-a11y-announcer.html
// bower_components/iron-a11y-announcer/test/index.html
// bower_components/iron-a11y-announcer/test/iron-a11y-announcer.html
// bower_components/iron-a11y-keys-behavior/.bower.json
// bower_components/iron-a11y-keys-behavior/.gitignore
// bower_components/iron-a11y-keys-behavior/.travis.yml
// bower_components/iron-a11y-keys-behavior/CONTRIBUTING.md
// bower_components/iron-a11y-keys-behavior/README.md
// bower_components/iron-a11y-keys-behavior/bower.json
// bower_components/iron-a11y-keys-behavior/demo/index.html
// bower_components/iron-a11y-keys-behavior/demo/x-key-aware.html
// bower_components/iron-a11y-keys-behavior/index.html
// bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html
// bower_components/iron-a11y-keys-behavior/test/basic-test.html
// bower_components/iron-a11y-keys-behavior/test/index.html
// bower_components/iron-ajax/.bower.json
// bower_components/iron-ajax/.github/ISSUE_TEMPLATE.md
// bower_components/iron-ajax/.gitignore
// bower_components/iron-ajax/.travis.yml
// bower_components/iron-ajax/CONTRIBUTING.md
// bower_components/iron-ajax/README.md
// bower_components/iron-ajax/bower.json
// bower_components/iron-ajax/demo/index.html
// bower_components/iron-ajax/hero.svg
// bower_components/iron-ajax/index.html
// bower_components/iron-ajax/iron-ajax.html
// bower_components/iron-ajax/iron-request.html
// bower_components/iron-ajax/test/index.html
// bower_components/iron-ajax/test/iron-ajax.html
// bower_components/iron-ajax/test/iron-request.html
// bower_components/iron-autogrow-textarea/.bower.json
// bower_components/iron-autogrow-textarea/.github/ISSUE_TEMPLATE.md
// bower_components/iron-autogrow-textarea/.gitignore
// bower_components/iron-autogrow-textarea/.travis.yml
// bower_components/iron-autogrow-textarea/CONTRIBUTING.md
// bower_components/iron-autogrow-textarea/README.md
// bower_components/iron-autogrow-textarea/bower.json
// bower_components/iron-autogrow-textarea/demo/index.html
// bower_components/iron-autogrow-textarea/hero.svg
// bower_components/iron-autogrow-textarea/index.html
// bower_components/iron-autogrow-textarea/iron-autogrow-textarea.html
// bower_components/iron-autogrow-textarea/test/basic.html
// bower_components/iron-autogrow-textarea/test/index.html
// bower_components/iron-behaviors/.bower.json
// bower_components/iron-behaviors/.gitignore
// bower_components/iron-behaviors/.travis.yml
// bower_components/iron-behaviors/CONTRIBUTING.md
// bower_components/iron-behaviors/README.md
// bower_components/iron-behaviors/bower.json
// bower_components/iron-behaviors/demo/index.html
// bower_components/iron-behaviors/demo/simple-button.html
// bower_components/iron-behaviors/index.html
// bower_components/iron-behaviors/iron-button-state.html
// bower_components/iron-behaviors/iron-control-state.html
// bower_components/iron-behaviors/test/active-state.html
// bower_components/iron-behaviors/test/disabled-state.html
// bower_components/iron-behaviors/test/focused-state.html
// bower_components/iron-behaviors/test/index.html
// bower_components/iron-behaviors/test/test-elements.html
// bower_components/iron-checked-element-behavior/.bower.json
// bower_components/iron-checked-element-behavior/.gitignore
// bower_components/iron-checked-element-behavior/.travis.yml
// bower_components/iron-checked-element-behavior/CONTRIBUTING.md
// bower_components/iron-checked-element-behavior/README.md
// bower_components/iron-checked-element-behavior/bower.json
// bower_components/iron-checked-element-behavior/demo/index.html
// bower_components/iron-checked-element-behavior/demo/simple-checkbox.html
// bower_components/iron-checked-element-behavior/index.html
// bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html
// bower_components/iron-checked-element-behavior/test/basic.html
// bower_components/iron-checked-element-behavior/test/index.html
// bower_components/iron-checked-element-behavior/test/simple-checkbox.html
// bower_components/iron-dropdown/.bower.json
// bower_components/iron-dropdown/.github/ISSUE_TEMPLATE.md
// bower_components/iron-dropdown/.gitignore
// bower_components/iron-dropdown/.travis.yml
// bower_components/iron-dropdown/CONTRIBUTING.md
// bower_components/iron-dropdown/README.md
// bower_components/iron-dropdown/bower.json
// bower_components/iron-dropdown/demo/grow-height-animation.html
// bower_components/iron-dropdown/demo/index.html
// bower_components/iron-dropdown/demo/x-select.html
// bower_components/iron-dropdown/index.html
// bower_components/iron-dropdown/iron-dropdown-scroll-manager.html
// bower_components/iron-dropdown/iron-dropdown.html
// bower_components/iron-dropdown/test/index.html
// bower_components/iron-dropdown/test/iron-dropdown-scroll-manager.html
// bower_components/iron-dropdown/test/iron-dropdown.html
// bower_components/iron-dropdown/test/x-scrollable-element.html
// bower_components/iron-fit-behavior/.bower.json
// bower_components/iron-fit-behavior/.github/ISSUE_TEMPLATE.md
// bower_components/iron-fit-behavior/.gitignore
// bower_components/iron-fit-behavior/.travis.yml
// bower_components/iron-fit-behavior/CONTRIBUTING.md
// bower_components/iron-fit-behavior/README.md
// bower_components/iron-fit-behavior/bower.json
// bower_components/iron-fit-behavior/demo/index.html
// bower_components/iron-fit-behavior/demo/simple-fit.html
// bower_components/iron-fit-behavior/index.html
// bower_components/iron-fit-behavior/iron-fit-behavior.html
// bower_components/iron-fit-behavior/test/index.html
// bower_components/iron-fit-behavior/test/iron-fit-behavior.html
// bower_components/iron-fit-behavior/test/test-fit.html
// bower_components/iron-flex-layout/.bower.json
// bower_components/iron-flex-layout/.gitignore
// bower_components/iron-flex-layout/.travis.yml
// bower_components/iron-flex-layout/CONTRIBUTING.md
// bower_components/iron-flex-layout/README.md
// bower_components/iron-flex-layout/bower.json
// bower_components/iron-flex-layout/classes/iron-flex-layout.html
// bower_components/iron-flex-layout/classes/iron-shadow-flex-layout.html
// bower_components/iron-flex-layout/demo/index.html
// bower_components/iron-flex-layout/index.html
// bower_components/iron-flex-layout/iron-flex-layout-classes.html
// bower_components/iron-flex-layout/iron-flex-layout.html
// bower_components/iron-flex-layout/test/index.html
// bower_components/iron-flex-layout/test/iron-flex-layout-classes.html
// bower_components/iron-flex-layout/test/iron-flex-layout.html
// bower_components/iron-form-element-behavior/.bower.json
// bower_components/iron-form-element-behavior/.gitignore
// bower_components/iron-form-element-behavior/.travis.yml
// bower_components/iron-form-element-behavior/CONTRIBUTING.md
// bower_components/iron-form-element-behavior/README.md
// bower_components/iron-form-element-behavior/bower.json
// bower_components/iron-form-element-behavior/demo/index.html
// bower_components/iron-form-element-behavior/demo/simple-element.html
// bower_components/iron-form-element-behavior/demo/simple-form.html
// bower_components/iron-form-element-behavior/index.html
// bower_components/iron-form-element-behavior/iron-form-element-behavior.html
// bower_components/iron-form-element-behavior/test/basic.html
// bower_components/iron-form-element-behavior/test/index.html
// bower_components/iron-form-element-behavior/test/simple-element.html
// bower_components/iron-form-element-behavior/test/simple-form.html
// bower_components/iron-icon/.bower.json
// bower_components/iron-icon/.gitignore
// bower_components/iron-icon/README.md
// bower_components/iron-icon/bower.json
// bower_components/iron-icon/demo/async.html
// bower_components/iron-icon/demo/index.html
// bower_components/iron-icon/demo/location.png
// bower_components/iron-icon/hero.svg
// bower_components/iron-icon/index.html
// bower_components/iron-icon/iron-icon.html
// bower_components/iron-icon/test/index.html
// bower_components/iron-icon/test/iron-icon.html
// bower_components/iron-icons/.bower.json
// bower_components/iron-icons/.gitignore
// bower_components/iron-icons/.travis.yml
// bower_components/iron-icons/CONTRIBUTING.md
// bower_components/iron-icons/README.md
// bower_components/iron-icons/av-icons.html
// bower_components/iron-icons/bower.json
// bower_components/iron-icons/communication-icons.html
// bower_components/iron-icons/demo/index.html
// bower_components/iron-icons/device-icons.html
// bower_components/iron-icons/editor-icons.html
// bower_components/iron-icons/hardware-icons.html
// bower_components/iron-icons/hero.svg
// bower_components/iron-icons/image-icons.html
// bower_components/iron-icons/index.html
// bower_components/iron-icons/iron-icons.html
// bower_components/iron-icons/maps-icons.html
// bower_components/iron-icons/notification-icons.html
// bower_components/iron-icons/places-icons.html
// bower_components/iron-icons/social-icons.html
// bower_components/iron-iconset-svg/.bower.json
// bower_components/iron-iconset-svg/.gitignore
// bower_components/iron-iconset-svg/.travis.yml
// bower_components/iron-iconset-svg/CONTRIBUTING.md
// bower_components/iron-iconset-svg/README.md
// bower_components/iron-iconset-svg/bower.json
// bower_components/iron-iconset-svg/demo/index.html
// bower_components/iron-iconset-svg/demo/svg-sample-icons.html
// bower_components/iron-iconset-svg/index.html
// bower_components/iron-iconset-svg/iron-iconset-svg.html
// bower_components/iron-iconset-svg/test/index.html
// bower_components/iron-iconset-svg/test/iron-iconset-svg.html
// bower_components/iron-image/.bower.json
// bower_components/iron-image/.gitignore
// bower_components/iron-image/.travis.yml
// bower_components/iron-image/CONTRIBUTING.md
// bower_components/iron-image/README.md
// bower_components/iron-image/bower.json
// bower_components/iron-image/demo/index.html
// bower_components/iron-image/demo/loading.png
// bower_components/iron-image/demo/polymer.svg
// bower_components/iron-image/index.html
// bower_components/iron-image/iron-image.html
// bower_components/iron-image/test/index.html
// bower_components/iron-image/test/iron-image.html
// bower_components/iron-input/.bower.json
// bower_components/iron-input/.github/ISSUE_TEMPLATE.md
// bower_components/iron-input/.gitignore
// bower_components/iron-input/.travis.yml
// bower_components/iron-input/CONTRIBUTING.md
// bower_components/iron-input/README.md
// bower_components/iron-input/bower.json
// bower_components/iron-input/demo/index.html
// bower_components/iron-input/hero.svg
// bower_components/iron-input/index.html
// bower_components/iron-input/iron-input.html
// bower_components/iron-input/test/disabled-input.html
// bower_components/iron-input/test/index.html
// bower_components/iron-input/test/iron-input.html
// bower_components/iron-input/test/letters-only.html
// bower_components/iron-media-query/.bower.json
// bower_components/iron-media-query/.gitignore
// bower_components/iron-media-query/.travis.yml
// bower_components/iron-media-query/CONTRIBUTING.md
// bower_components/iron-media-query/README.md
// bower_components/iron-media-query/bower.json
// bower_components/iron-media-query/demo/index.html
// bower_components/iron-media-query/hero.svg
// bower_components/iron-media-query/index.html
// bower_components/iron-media-query/iron-media-query.html
// bower_components/iron-media-query/test/basic.html
// bower_components/iron-media-query/test/index.html
// bower_components/iron-menu-behavior/.bower.json
// bower_components/iron-menu-behavior/.gitignore
// bower_components/iron-menu-behavior/.travis.yml
// bower_components/iron-menu-behavior/CONTRIBUTING.md
// bower_components/iron-menu-behavior/README.md
// bower_components/iron-menu-behavior/bower.json
// bower_components/iron-menu-behavior/demo/index.html
// bower_components/iron-menu-behavior/demo/simple-menu.html
// bower_components/iron-menu-behavior/demo/simple-menubar.html
// bower_components/iron-menu-behavior/index.html
// bower_components/iron-menu-behavior/iron-menu-behavior.html
// bower_components/iron-menu-behavior/iron-menubar-behavior.html
// bower_components/iron-menu-behavior/test/index.html
// bower_components/iron-menu-behavior/test/iron-menu-behavior.html
// bower_components/iron-menu-behavior/test/iron-menubar-behavior.html
// bower_components/iron-menu-behavior/test/test-menu.html
// bower_components/iron-menu-behavior/test/test-menubar.html
// bower_components/iron-meta/.bower.json
// bower_components/iron-meta/.gitignore
// bower_components/iron-meta/.travis.yml
// bower_components/iron-meta/CONTRIBUTING.md
// bower_components/iron-meta/README.md
// bower_components/iron-meta/bower.json
// bower_components/iron-meta/demo/index.html
// bower_components/iron-meta/hero.svg
// bower_components/iron-meta/index.html
// bower_components/iron-meta/iron-meta.html
// bower_components/iron-meta/test/basic.html
// bower_components/iron-meta/test/index.html
// bower_components/iron-meta/test/iron-meta.html
// bower_components/iron-overlay-behavior/.bower.json
// bower_components/iron-overlay-behavior/.github/ISSUE_TEMPLATE.md
// bower_components/iron-overlay-behavior/.gitignore
// bower_components/iron-overlay-behavior/.travis.yml
// bower_components/iron-overlay-behavior/CONTRIBUTING.md
// bower_components/iron-overlay-behavior/README.md
// bower_components/iron-overlay-behavior/bower.json
// bower_components/iron-overlay-behavior/demo/index.html
// bower_components/iron-overlay-behavior/demo/simple-overlay.html
// bower_components/iron-overlay-behavior/index.html
// bower_components/iron-overlay-behavior/iron-focusables-helper.html
// bower_components/iron-overlay-behavior/iron-overlay-backdrop.html
// bower_components/iron-overlay-behavior/iron-overlay-behavior.html
// bower_components/iron-overlay-behavior/iron-overlay-manager.html
// bower_components/iron-overlay-behavior/test/index.html
// bower_components/iron-overlay-behavior/test/iron-focusables-helper.html
// bower_components/iron-overlay-behavior/test/iron-overlay-backdrop.html
// bower_components/iron-overlay-behavior/test/iron-overlay-behavior.html
// bower_components/iron-overlay-behavior/test/test-buttons-wrapper.html
// bower_components/iron-overlay-behavior/test/test-buttons.html
// bower_components/iron-overlay-behavior/test/test-menu-button.html
// bower_components/iron-overlay-behavior/test/test-overlay.html
// bower_components/iron-overlay-behavior/test/test-overlay2.html
// bower_components/iron-resizable-behavior/.bower.json
// bower_components/iron-resizable-behavior/.gitignore
// bower_components/iron-resizable-behavior/.travis.yml
// bower_components/iron-resizable-behavior/CONTRIBUTING.md
// bower_components/iron-resizable-behavior/README.md
// bower_components/iron-resizable-behavior/bower.json
// bower_components/iron-resizable-behavior/demo/index.html
// bower_components/iron-resizable-behavior/demo/src/x-app.html
// bower_components/iron-resizable-behavior/index.html
// bower_components/iron-resizable-behavior/iron-resizable-behavior.html
// bower_components/iron-resizable-behavior/test/basic.html
// bower_components/iron-resizable-behavior/test/index.html
// bower_components/iron-resizable-behavior/test/iron-resizable-behavior.html
// bower_components/iron-resizable-behavior/test/test-elements.html
// bower_components/iron-selector/.bower.json
// bower_components/iron-selector/.gitignore
// bower_components/iron-selector/.travis.yml
// bower_components/iron-selector/CONTRIBUTING.md
// bower_components/iron-selector/README.md
// bower_components/iron-selector/bower.json
// bower_components/iron-selector/demo/index.html
// bower_components/iron-selector/index.html
// bower_components/iron-selector/iron-multi-selectable.html
// bower_components/iron-selector/iron-selectable.html
// bower_components/iron-selector/iron-selection.html
// bower_components/iron-selector/iron-selector.html
// bower_components/iron-selector/test/activate-event.html
// bower_components/iron-selector/test/basic.html
// bower_components/iron-selector/test/content-element.html
// bower_components/iron-selector/test/content.html
// bower_components/iron-selector/test/excluded-local-names.html
// bower_components/iron-selector/test/index.html
// bower_components/iron-selector/test/multi.html
// bower_components/iron-selector/test/next-previous.html
// bower_components/iron-selector/test/numeric-ids.html
// bower_components/iron-selector/test/selected-attribute.html
// bower_components/iron-selector/test/template-repeat.html
// bower_components/iron-validatable-behavior/.bower.json
// bower_components/iron-validatable-behavior/.gitignore
// bower_components/iron-validatable-behavior/README.md
// bower_components/iron-validatable-behavior/bower.json
// bower_components/iron-validatable-behavior/demo/cats-only.html
// bower_components/iron-validatable-behavior/demo/index.html
// bower_components/iron-validatable-behavior/demo/validatable-input.html
// bower_components/iron-validatable-behavior/index.html
// bower_components/iron-validatable-behavior/iron-validatable-behavior.html
// bower_components/iron-validatable-behavior/test/index.html
// bower_components/iron-validatable-behavior/test/iron-validatable-behavior.html
// bower_components/iron-validatable-behavior/test/test-validatable.html
// bower_components/neon-animation/.bower.json
// bower_components/neon-animation/.github/ISSUE_TEMPLATE.md
// bower_components/neon-animation/.gitignore
// bower_components/neon-animation/.travis.yml
// bower_components/neon-animation/CONTRIBUTING.md
// bower_components/neon-animation/README.md
// bower_components/neon-animation/animations/cascaded-animation.html
// bower_components/neon-animation/animations/fade-in-animation.html
// bower_components/neon-animation/animations/fade-out-animation.html
// bower_components/neon-animation/animations/hero-animation.html
// bower_components/neon-animation/animations/opaque-animation.html
// bower_components/neon-animation/animations/reverse-ripple-animation.html
// bower_components/neon-animation/animations/ripple-animation.html
// bower_components/neon-animation/animations/scale-down-animation.html
// bower_components/neon-animation/animations/scale-up-animation.html
// bower_components/neon-animation/animations/slide-down-animation.html
// bower_components/neon-animation/animations/slide-from-bottom-animation.html
// bower_components/neon-animation/animations/slide-from-left-animation.html
// bower_components/neon-animation/animations/slide-from-right-animation.html
// bower_components/neon-animation/animations/slide-from-top-animation.html
// bower_components/neon-animation/animations/slide-left-animation.html
// bower_components/neon-animation/animations/slide-right-animation.html
// bower_components/neon-animation/animations/slide-up-animation.html
// bower_components/neon-animation/animations/transform-animation.html
// bower_components/neon-animation/bower.json
// bower_components/neon-animation/demo/card/index.html
// bower_components/neon-animation/demo/card/x-card.html
// bower_components/neon-animation/demo/card/x-cards-list.html
// bower_components/neon-animation/demo/declarative/index.html
// bower_components/neon-animation/demo/doc/index.html
// bower_components/neon-animation/demo/doc/my-animatable.html
// bower_components/neon-animation/demo/doc/my-dialog.html
// bower_components/neon-animation/demo/dropdown/animated-dropdown.html
// bower_components/neon-animation/demo/dropdown/index.html
// bower_components/neon-animation/demo/grid/animated-grid.html
// bower_components/neon-animation/demo/grid/fullsize-page-with-card.html
// bower_components/neon-animation/demo/grid/index.html
// bower_components/neon-animation/demo/index.html
// bower_components/neon-animation/demo/list/full-view.html
// bower_components/neon-animation/demo/list/index.html
// bower_components/neon-animation/demo/list/list-demo.html
// bower_components/neon-animation/demo/list/list-view.html
// bower_components/neon-animation/demo/load/animated-grid.html
// bower_components/neon-animation/demo/load/full-page.html
// bower_components/neon-animation/demo/load/index.html
// bower_components/neon-animation/demo/reprojection/animated-grid.html
// bower_components/neon-animation/demo/reprojection/fullsize-page-with-card.html
// bower_components/neon-animation/demo/reprojection/index.html
// bower_components/neon-animation/demo/reprojection/reprojected-pages.html
// bower_components/neon-animation/demo/shared-styles.html
// bower_components/neon-animation/demo/tiles/circles-page.html
// bower_components/neon-animation/demo/tiles/index.html
// bower_components/neon-animation/demo/tiles/squares-page.html
// bower_components/neon-animation/guides/neon-animation.md
// bower_components/neon-animation/index.html
// bower_components/neon-animation/neon-animatable-behavior.html
// bower_components/neon-animation/neon-animatable.html
// bower_components/neon-animation/neon-animated-pages.html
// bower_components/neon-animation/neon-animation-behavior.html
// bower_components/neon-animation/neon-animation-runner-behavior.html
// bower_components/neon-animation/neon-animation.html
// bower_components/neon-animation/neon-animations.html
// bower_components/neon-animation/neon-shared-element-animatable-behavior.html
// bower_components/neon-animation/neon-shared-element-animation-behavior.html
// bower_components/neon-animation/test/index.html
// bower_components/neon-animation/test/neon-animated-pages-descendant-selection.html
// bower_components/neon-animation/test/neon-animated-pages-lazy.html
// bower_components/neon-animation/test/neon-animated-pages.html
// bower_components/neon-animation/test/test-resizable-pages.html
// bower_components/neon-animation/web-animations.html
// bower_components/paper-behaviors/.bower.json
// bower_components/paper-behaviors/.gitignore
// bower_components/paper-behaviors/.travis.yml
// bower_components/paper-behaviors/CONTRIBUTING.md
// bower_components/paper-behaviors/README.md
// bower_components/paper-behaviors/bower.json
// bower_components/paper-behaviors/demo/index.html
// bower_components/paper-behaviors/demo/paper-button.html
// bower_components/paper-behaviors/demo/paper-radio-button.html
// bower_components/paper-behaviors/index.html
// bower_components/paper-behaviors/paper-button-behavior.html
// bower_components/paper-behaviors/paper-checked-element-behavior.html
// bower_components/paper-behaviors/paper-inky-focus-behavior.html
// bower_components/paper-behaviors/paper-ripple-behavior.html
// bower_components/paper-behaviors/test/index.html
// bower_components/paper-behaviors/test/paper-button-behavior.html
// bower_components/paper-behaviors/test/paper-checked-element-behavior.html
// bower_components/paper-behaviors/test/paper-radio-button-behavior.html
// bower_components/paper-behaviors/test/paper-ripple-behavior.html
// bower_components/paper-behaviors/test/shadowed-ripple.html
// bower_components/paper-behaviors/test/test-button.html
// bower_components/paper-behaviors/test/test-radio-button.html
// bower_components/paper-button/.bower.json
// bower_components/paper-button/.github/ISSUE_TEMPLATE.md
// bower_components/paper-button/.gitignore
// bower_components/paper-button/.travis.yml
// bower_components/paper-button/CONTRIBUTING.md
// bower_components/paper-button/README.md
// bower_components/paper-button/bower.json
// bower_components/paper-button/demo/index.html
// bower_components/paper-button/index.html
// bower_components/paper-button/paper-button.html
// bower_components/paper-button/test/index.html
// bower_components/paper-button/test/paper-button.html
// bower_components/paper-card/.bower.json
// bower_components/paper-card/.gitignore
// bower_components/paper-card/.travis.yml
// bower_components/paper-card/CONTRIBUTING.md
// bower_components/paper-card/README.md
// bower_components/paper-card/bower.json
// bower_components/paper-card/demo/cafe.png
// bower_components/paper-card/demo/donuts.png
// bower_components/paper-card/demo/house.png
// bower_components/paper-card/demo/index.html
// bower_components/paper-card/demo/travel.png
// bower_components/paper-card/demo/trip.png
// bower_components/paper-card/index.html
// bower_components/paper-card/paper-card.html
// bower_components/paper-card/test/basic.html
// bower_components/paper-card/test/index.html
// bower_components/paper-drawer-panel/.bower.json
// bower_components/paper-drawer-panel/.gitignore
// bower_components/paper-drawer-panel/.travis.yml
// bower_components/paper-drawer-panel/CONTRIBUTING.md
// bower_components/paper-drawer-panel/README.md
// bower_components/paper-drawer-panel/bower.json
// bower_components/paper-drawer-panel/demo/index.html
// bower_components/paper-drawer-panel/hero.svg
// bower_components/paper-drawer-panel/index.html
// bower_components/paper-drawer-panel/paper-drawer-panel.html
// bower_components/paper-drawer-panel/test/index.html
// bower_components/paper-drawer-panel/test/positioning.html
// bower_components/paper-drawer-panel/test/small-devices.html
// bower_components/paper-dropdown-menu/.bower.json
// bower_components/paper-dropdown-menu/.github/ISSUE_TEMPLATE.md
// bower_components/paper-dropdown-menu/.gitignore
// bower_components/paper-dropdown-menu/.travis.yml
// bower_components/paper-dropdown-menu/CONTRIBUTING.md
// bower_components/paper-dropdown-menu/README.md
// bower_components/paper-dropdown-menu/bower.json
// bower_components/paper-dropdown-menu/demo/index.html
// bower_components/paper-dropdown-menu/index.html
// bower_components/paper-dropdown-menu/paper-dropdown-menu-icons.html
// bower_components/paper-dropdown-menu/paper-dropdown-menu-light.html
// bower_components/paper-dropdown-menu/paper-dropdown-menu-shared-styles.html
// bower_components/paper-dropdown-menu/paper-dropdown-menu.html
// bower_components/paper-dropdown-menu/test/index.html
// bower_components/paper-dropdown-menu/test/paper-dropdown-menu-light.html
// bower_components/paper-dropdown-menu/test/paper-dropdown-menu.html
// bower_components/paper-header-panel/.bower.json
// bower_components/paper-header-panel/.gitignore
// bower_components/paper-header-panel/.travis.yml
// bower_components/paper-header-panel/CONTRIBUTING.md
// bower_components/paper-header-panel/README.md
// bower_components/paper-header-panel/bower.json
// bower_components/paper-header-panel/demo/index.html
// bower_components/paper-header-panel/hero.svg
// bower_components/paper-header-panel/index.html
// bower_components/paper-header-panel/paper-header-panel.html
// bower_components/paper-header-panel/test/basic.html
// bower_components/paper-header-panel/test/index.html
// bower_components/paper-icon-button/.bower.json
// bower_components/paper-icon-button/.gitignore
// bower_components/paper-icon-button/.travis.yml
// bower_components/paper-icon-button/CONTRIBUTING.md
// bower_components/paper-icon-button/README.md
// bower_components/paper-icon-button/bower.json
// bower_components/paper-icon-button/demo/index.html
// bower_components/paper-icon-button/index.html
// bower_components/paper-icon-button/paper-icon-button.html
// bower_components/paper-icon-button/test/a11y.html
// bower_components/paper-icon-button/test/basic.html
// bower_components/paper-icon-button/test/index.html
// bower_components/paper-input/.bower.json
// bower_components/paper-input/.github/ISSUE_TEMPLATE.md
// bower_components/paper-input/.gitignore
// bower_components/paper-input/.travis.yml
// bower_components/paper-input/CONTRIBUTING.md
// bower_components/paper-input/README.md
// bower_components/paper-input/all-imports.html
// bower_components/paper-input/bower.json
// bower_components/paper-input/demo/index.html
// bower_components/paper-input/demo/ssn-input.html
// bower_components/paper-input/demo/ssn-validator.html
// bower_components/paper-input/hero.svg
// bower_components/paper-input/index.html
// bower_components/paper-input/paper-input-addon-behavior.html
// bower_components/paper-input/paper-input-behavior.html
// bower_components/paper-input/paper-input-char-counter.html
// bower_components/paper-input/paper-input-container.html
// bower_components/paper-input/paper-input-error.html
// bower_components/paper-input/paper-input.html
// bower_components/paper-input/paper-textarea.html
// bower_components/paper-input/test/index.html
// bower_components/paper-input/test/letters-only.html
// bower_components/paper-input/test/paper-input-char-counter.html
// bower_components/paper-input/test/paper-input-container.html
// bower_components/paper-input/test/paper-input-error.html
// bower_components/paper-input/test/paper-input.html
// bower_components/paper-input/test/paper-textarea.html
// bower_components/paper-item/.bower.json
// bower_components/paper-item/.gitignore
// bower_components/paper-item/.travis.yml
// bower_components/paper-item/CONTRIBUTING.md
// bower_components/paper-item/README.md
// bower_components/paper-item/all-imports.html
// bower_components/paper-item/bower.json
// bower_components/paper-item/demo/index.html
// bower_components/paper-item/index.html
// bower_components/paper-item/paper-icon-item.html
// bower_components/paper-item/paper-item-behavior.html
// bower_components/paper-item/paper-item-body.html
// bower_components/paper-item/paper-item-shared-styles.html
// bower_components/paper-item/paper-item.html
// bower_components/paper-item/test/index.html
// bower_components/paper-item/test/paper-item.html
// bower_components/paper-material/.bower.json
// bower_components/paper-material/.gitignore
// bower_components/paper-material/.travis.yml
// bower_components/paper-material/CONTRIBUTING.md
// bower_components/paper-material/README.md
// bower_components/paper-material/bower.json
// bower_components/paper-material/demo/index.html
// bower_components/paper-material/index.html
// bower_components/paper-material/paper-material-shared-styles.html
// bower_components/paper-material/paper-material.html
// bower_components/paper-material/test/index.html
// bower_components/paper-material/test/paper-material.html
// bower_components/paper-menu-button/.bower.json
// bower_components/paper-menu-button/.github/ISSUE_TEMPLATE.md
// bower_components/paper-menu-button/.gitignore
// bower_components/paper-menu-button/.travis.yml
// bower_components/paper-menu-button/CONTRIBUTING.md
// bower_components/paper-menu-button/README.md
// bower_components/paper-menu-button/bower.json
// bower_components/paper-menu-button/demo/index.html
// bower_components/paper-menu-button/hero.svg
// bower_components/paper-menu-button/index.html
// bower_components/paper-menu-button/paper-menu-button-animations.html
// bower_components/paper-menu-button/paper-menu-button.html
// bower_components/paper-menu-button/test/index.html
// bower_components/paper-menu-button/test/paper-menu-button.html
// bower_components/paper-ripple/.bower.json
// bower_components/paper-ripple/.gitignore
// bower_components/paper-ripple/.travis.yml
// bower_components/paper-ripple/CONTRIBUTING.md
// bower_components/paper-ripple/README.md
// bower_components/paper-ripple/bower.json
// bower_components/paper-ripple/demo/index.html
// bower_components/paper-ripple/hero.svg
// bower_components/paper-ripple/index.html
// bower_components/paper-ripple/paper-ripple.html
// bower_components/paper-ripple/test/index.html
// bower_components/paper-ripple/test/paper-ripple.html
// bower_components/paper-styles/.bower.json
// bower_components/paper-styles/CONTRIBUTING.md
// bower_components/paper-styles/README.md
// bower_components/paper-styles/bower.json
// bower_components/paper-styles/classes/global.html
// bower_components/paper-styles/classes/shadow-layout.html
// bower_components/paper-styles/classes/shadow.html
// bower_components/paper-styles/classes/typography.html
// bower_components/paper-styles/color.html
// bower_components/paper-styles/default-theme.html
// bower_components/paper-styles/demo/index.html
// bower_components/paper-styles/demo-pages.html
// bower_components/paper-styles/demo.css
// bower_components/paper-styles/index.html
// bower_components/paper-styles/paper-styles-classes.html
// bower_components/paper-styles/paper-styles.html
// bower_components/paper-styles/shadow.html
// bower_components/paper-styles/typography.html
// bower_components/paper-tabs/.bower.json
// bower_components/paper-tabs/.gitignore
// bower_components/paper-tabs/.travis.yml
// bower_components/paper-tabs/CONTRIBUTING.md
// bower_components/paper-tabs/README.md
// bower_components/paper-tabs/bower.json
// bower_components/paper-tabs/demo/index.html
// bower_components/paper-tabs/hero.svg
// bower_components/paper-tabs/index.html
// bower_components/paper-tabs/paper-tab.html
// bower_components/paper-tabs/paper-tabs-icons.html
// bower_components/paper-tabs/paper-tabs.html
// bower_components/paper-tabs/test/attr-for-selected.html
// bower_components/paper-tabs/test/basic.html
// bower_components/paper-tabs/test/index.html
// bower_components/paper-toolbar/.bower.json
// bower_components/paper-toolbar/.gitignore
// bower_components/paper-toolbar/.travis.yml
// bower_components/paper-toolbar/CONTRIBUTING.md
// bower_components/paper-toolbar/README.md
// bower_components/paper-toolbar/bower.json
// bower_components/paper-toolbar/demo/index.html
// bower_components/paper-toolbar/index.html
// bower_components/paper-toolbar/paper-toolbar.html
// bower_components/paper-toolbar/test/index.html
// bower_components/paper-toolbar/test/paper-toolbar.html
// bower_components/polymer/.bower.json
// bower_components/polymer/LICENSE.txt
// bower_components/polymer/bower.json
// bower_components/polymer/build.log
// bower_components/polymer/polymer-micro.html
// bower_components/polymer/polymer-mini.html
// bower_components/polymer/polymer.html
// bower_components/promise-polyfill/.bower.json
// bower_components/promise-polyfill/Gruntfile.js
// bower_components/promise-polyfill/LICENSE
// bower_components/promise-polyfill/Promise-Statics.js
// bower_components/promise-polyfill/Promise.js
// bower_components/promise-polyfill/Promise.min.js
// bower_components/promise-polyfill/README.md
// bower_components/promise-polyfill/bower.json
// bower_components/promise-polyfill/package.json
// bower_components/promise-polyfill/promise-polyfill-lite.html
// bower_components/promise-polyfill/promise-polyfill.html
// bower_components/web-animations-js/.bower.json
// bower_components/web-animations-js/CONTRIBUTING.md
// bower_components/web-animations-js/COPYING
// bower_components/web-animations-js/History.md
// bower_components/web-animations-js/README.md
// bower_components/web-animations-js/bower.json
// bower_components/web-animations-js/web-animations-next-lite.min.js
// bower_components/web-animations-js/web-animations-next-lite.min.js.map
// bower_components/web-animations-js/web-animations-next.min.js
// bower_components/web-animations-js/web-animations-next.min.js.map
// bower_components/web-animations-js/web-animations.html
// bower_components/web-animations-js/web-animations.min.js
// bower_components/web-animations-js/web-animations.min.js.map
// bower_components/webcomponentsjs/.bower.json
// bower_components/webcomponentsjs/CustomElements.js
// bower_components/webcomponentsjs/CustomElements.min.js
// bower_components/webcomponentsjs/HTMLImports.js
// bower_components/webcomponentsjs/HTMLImports.min.js
// bower_components/webcomponentsjs/MutationObserver.js
// bower_components/webcomponentsjs/MutationObserver.min.js
// bower_components/webcomponentsjs/README.md
// bower_components/webcomponentsjs/ShadowDOM.js
// bower_components/webcomponentsjs/ShadowDOM.min.js
// bower_components/webcomponentsjs/bower.json
// bower_components/webcomponentsjs/build.log
// bower_components/webcomponentsjs/package.json
// bower_components/webcomponentsjs/webcomponents-lite.js
// bower_components/webcomponentsjs/webcomponents-lite.min.js
// bower_components/webcomponentsjs/webcomponents.js
// bower_components/webcomponentsjs/webcomponents.min.js
// pages/alert.html
// pages/index.html
// DO NOT EDIT!

package main

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
)

// bindataRead reads the given file from disk. It returns an error on failure.
func bindataRead(path, name string) ([]byte, error) {
	buf, err := ioutil.ReadFile(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset %s at %s: %v", name, path, err)
	}
	return buf, err
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

// tmplClanErrorsHtml reads file data from disk. It returns an error on failure.
func tmplClanErrorsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/tmpl/clan-errors.html"
	name := "tmpl/clan-errors.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// tmplClanInfoHtml reads file data from disk. It returns an error on failure.
func tmplClanInfoHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/tmpl/clan-info.html"
	name := "tmpl/clan-info.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// tmplTestHtml reads file data from disk. It returns an error on failure.
func tmplTestHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/tmpl/test.html"
	name := "tmpl/test.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// tmplTestTxt reads file data from disk. It returns an error on failure.
func tmplTestTxt() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/tmpl/test.txt"
	name := "tmpl/test.txt"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsFontRobotoBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsFontRobotoBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/font-roboto/.bower.json"
	name := "bower_components/font-roboto/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsFontRobotoReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsFontRobotoReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/font-roboto/README.md"
	name := "bower_components/font-roboto/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsFontRobotoBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsFontRobotoBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/font-roboto/bower.json"
	name := "bower_components/font-roboto/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsFontRobotoRobotoHtml reads file data from disk. It returns an error on failure.
func bower_componentsFontRobotoRobotoHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/font-roboto/roboto.html"
	name := "bower_components/font-roboto/roboto.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yAnnouncerBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yAnnouncerBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-announcer/.bower.json"
	name := "bower_components/iron-a11y-announcer/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yAnnouncerGithubIssue_templateMd reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yAnnouncerGithubIssue_templateMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-announcer/.github/ISSUE_TEMPLATE.md"
	name := "bower_components/iron-a11y-announcer/.github/ISSUE_TEMPLATE.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yAnnouncerGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yAnnouncerGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-announcer/.gitignore"
	name := "bower_components/iron-a11y-announcer/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yAnnouncerTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yAnnouncerTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-announcer/.travis.yml"
	name := "bower_components/iron-a11y-announcer/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yAnnouncerContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yAnnouncerContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-announcer/CONTRIBUTING.md"
	name := "bower_components/iron-a11y-announcer/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yAnnouncerReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yAnnouncerReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-announcer/README.md"
	name := "bower_components/iron-a11y-announcer/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yAnnouncerBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yAnnouncerBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-announcer/bower.json"
	name := "bower_components/iron-a11y-announcer/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yAnnouncerDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yAnnouncerDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-announcer/demo/index.html"
	name := "bower_components/iron-a11y-announcer/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yAnnouncerDemoXAnnouncesHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yAnnouncerDemoXAnnouncesHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-announcer/demo/x-announces.html"
	name := "bower_components/iron-a11y-announcer/demo/x-announces.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yAnnouncerIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yAnnouncerIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-announcer/index.html"
	name := "bower_components/iron-a11y-announcer/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yAnnouncerIronA11yAnnouncerHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yAnnouncerIronA11yAnnouncerHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-announcer/iron-a11y-announcer.html"
	name := "bower_components/iron-a11y-announcer/iron-a11y-announcer.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yAnnouncerTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yAnnouncerTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-announcer/test/index.html"
	name := "bower_components/iron-a11y-announcer/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yAnnouncerTestIronA11yAnnouncerHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yAnnouncerTestIronA11yAnnouncerHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-announcer/test/iron-a11y-announcer.html"
	name := "bower_components/iron-a11y-announcer/test/iron-a11y-announcer.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yKeysBehaviorBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yKeysBehaviorBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-keys-behavior/.bower.json"
	name := "bower_components/iron-a11y-keys-behavior/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yKeysBehaviorGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yKeysBehaviorGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-keys-behavior/.gitignore"
	name := "bower_components/iron-a11y-keys-behavior/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yKeysBehaviorTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yKeysBehaviorTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-keys-behavior/.travis.yml"
	name := "bower_components/iron-a11y-keys-behavior/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yKeysBehaviorContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yKeysBehaviorContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-keys-behavior/CONTRIBUTING.md"
	name := "bower_components/iron-a11y-keys-behavior/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yKeysBehaviorReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yKeysBehaviorReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-keys-behavior/README.md"
	name := "bower_components/iron-a11y-keys-behavior/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yKeysBehaviorBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yKeysBehaviorBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-keys-behavior/bower.json"
	name := "bower_components/iron-a11y-keys-behavior/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yKeysBehaviorDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yKeysBehaviorDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-keys-behavior/demo/index.html"
	name := "bower_components/iron-a11y-keys-behavior/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yKeysBehaviorDemoXKeyAwareHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yKeysBehaviorDemoXKeyAwareHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-keys-behavior/demo/x-key-aware.html"
	name := "bower_components/iron-a11y-keys-behavior/demo/x-key-aware.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yKeysBehaviorIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yKeysBehaviorIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-keys-behavior/index.html"
	name := "bower_components/iron-a11y-keys-behavior/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yKeysBehaviorIronA11yKeysBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yKeysBehaviorIronA11yKeysBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html"
	name := "bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yKeysBehaviorTestBasicTestHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yKeysBehaviorTestBasicTestHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-keys-behavior/test/basic-test.html"
	name := "bower_components/iron-a11y-keys-behavior/test/basic-test.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronA11yKeysBehaviorTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronA11yKeysBehaviorTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-a11y-keys-behavior/test/index.html"
	name := "bower_components/iron-a11y-keys-behavior/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAjaxBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronAjaxBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-ajax/.bower.json"
	name := "bower_components/iron-ajax/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAjaxGithubIssue_templateMd reads file data from disk. It returns an error on failure.
func bower_componentsIronAjaxGithubIssue_templateMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-ajax/.github/ISSUE_TEMPLATE.md"
	name := "bower_components/iron-ajax/.github/ISSUE_TEMPLATE.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAjaxGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronAjaxGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-ajax/.gitignore"
	name := "bower_components/iron-ajax/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAjaxTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronAjaxTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-ajax/.travis.yml"
	name := "bower_components/iron-ajax/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAjaxContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronAjaxContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-ajax/CONTRIBUTING.md"
	name := "bower_components/iron-ajax/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAjaxReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronAjaxReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-ajax/README.md"
	name := "bower_components/iron-ajax/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAjaxBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronAjaxBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-ajax/bower.json"
	name := "bower_components/iron-ajax/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAjaxDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronAjaxDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-ajax/demo/index.html"
	name := "bower_components/iron-ajax/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAjaxHeroSvg reads file data from disk. It returns an error on failure.
func bower_componentsIronAjaxHeroSvg() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-ajax/hero.svg"
	name := "bower_components/iron-ajax/hero.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAjaxIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronAjaxIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-ajax/index.html"
	name := "bower_components/iron-ajax/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAjaxIronAjaxHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronAjaxIronAjaxHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-ajax/iron-ajax.html"
	name := "bower_components/iron-ajax/iron-ajax.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAjaxIronRequestHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronAjaxIronRequestHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-ajax/iron-request.html"
	name := "bower_components/iron-ajax/iron-request.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAjaxTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronAjaxTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-ajax/test/index.html"
	name := "bower_components/iron-ajax/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAjaxTestIronAjaxHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronAjaxTestIronAjaxHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-ajax/test/iron-ajax.html"
	name := "bower_components/iron-ajax/test/iron-ajax.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAjaxTestIronRequestHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronAjaxTestIronRequestHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-ajax/test/iron-request.html"
	name := "bower_components/iron-ajax/test/iron-request.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAutogrowTextareaBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronAutogrowTextareaBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-autogrow-textarea/.bower.json"
	name := "bower_components/iron-autogrow-textarea/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAutogrowTextareaGithubIssue_templateMd reads file data from disk. It returns an error on failure.
func bower_componentsIronAutogrowTextareaGithubIssue_templateMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-autogrow-textarea/.github/ISSUE_TEMPLATE.md"
	name := "bower_components/iron-autogrow-textarea/.github/ISSUE_TEMPLATE.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAutogrowTextareaGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronAutogrowTextareaGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-autogrow-textarea/.gitignore"
	name := "bower_components/iron-autogrow-textarea/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAutogrowTextareaTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronAutogrowTextareaTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-autogrow-textarea/.travis.yml"
	name := "bower_components/iron-autogrow-textarea/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAutogrowTextareaContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronAutogrowTextareaContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-autogrow-textarea/CONTRIBUTING.md"
	name := "bower_components/iron-autogrow-textarea/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAutogrowTextareaReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronAutogrowTextareaReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-autogrow-textarea/README.md"
	name := "bower_components/iron-autogrow-textarea/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAutogrowTextareaBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronAutogrowTextareaBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-autogrow-textarea/bower.json"
	name := "bower_components/iron-autogrow-textarea/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAutogrowTextareaDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronAutogrowTextareaDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-autogrow-textarea/demo/index.html"
	name := "bower_components/iron-autogrow-textarea/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAutogrowTextareaHeroSvg reads file data from disk. It returns an error on failure.
func bower_componentsIronAutogrowTextareaHeroSvg() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-autogrow-textarea/hero.svg"
	name := "bower_components/iron-autogrow-textarea/hero.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAutogrowTextareaIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronAutogrowTextareaIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-autogrow-textarea/index.html"
	name := "bower_components/iron-autogrow-textarea/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAutogrowTextareaIronAutogrowTextareaHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronAutogrowTextareaIronAutogrowTextareaHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-autogrow-textarea/iron-autogrow-textarea.html"
	name := "bower_components/iron-autogrow-textarea/iron-autogrow-textarea.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAutogrowTextareaTestBasicHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronAutogrowTextareaTestBasicHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-autogrow-textarea/test/basic.html"
	name := "bower_components/iron-autogrow-textarea/test/basic.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronAutogrowTextareaTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronAutogrowTextareaTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-autogrow-textarea/test/index.html"
	name := "bower_components/iron-autogrow-textarea/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronBehaviorsBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronBehaviorsBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-behaviors/.bower.json"
	name := "bower_components/iron-behaviors/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronBehaviorsGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronBehaviorsGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-behaviors/.gitignore"
	name := "bower_components/iron-behaviors/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronBehaviorsTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronBehaviorsTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-behaviors/.travis.yml"
	name := "bower_components/iron-behaviors/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronBehaviorsContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronBehaviorsContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-behaviors/CONTRIBUTING.md"
	name := "bower_components/iron-behaviors/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronBehaviorsReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronBehaviorsReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-behaviors/README.md"
	name := "bower_components/iron-behaviors/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronBehaviorsBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronBehaviorsBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-behaviors/bower.json"
	name := "bower_components/iron-behaviors/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronBehaviorsDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronBehaviorsDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-behaviors/demo/index.html"
	name := "bower_components/iron-behaviors/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronBehaviorsDemoSimpleButtonHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronBehaviorsDemoSimpleButtonHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-behaviors/demo/simple-button.html"
	name := "bower_components/iron-behaviors/demo/simple-button.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronBehaviorsIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronBehaviorsIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-behaviors/index.html"
	name := "bower_components/iron-behaviors/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronBehaviorsIronButtonStateHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronBehaviorsIronButtonStateHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-behaviors/iron-button-state.html"
	name := "bower_components/iron-behaviors/iron-button-state.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronBehaviorsIronControlStateHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronBehaviorsIronControlStateHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-behaviors/iron-control-state.html"
	name := "bower_components/iron-behaviors/iron-control-state.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronBehaviorsTestActiveStateHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronBehaviorsTestActiveStateHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-behaviors/test/active-state.html"
	name := "bower_components/iron-behaviors/test/active-state.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronBehaviorsTestDisabledStateHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronBehaviorsTestDisabledStateHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-behaviors/test/disabled-state.html"
	name := "bower_components/iron-behaviors/test/disabled-state.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronBehaviorsTestFocusedStateHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronBehaviorsTestFocusedStateHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-behaviors/test/focused-state.html"
	name := "bower_components/iron-behaviors/test/focused-state.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronBehaviorsTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronBehaviorsTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-behaviors/test/index.html"
	name := "bower_components/iron-behaviors/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronBehaviorsTestTestElementsHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronBehaviorsTestTestElementsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-behaviors/test/test-elements.html"
	name := "bower_components/iron-behaviors/test/test-elements.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronCheckedElementBehaviorBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronCheckedElementBehaviorBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-checked-element-behavior/.bower.json"
	name := "bower_components/iron-checked-element-behavior/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronCheckedElementBehaviorGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronCheckedElementBehaviorGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-checked-element-behavior/.gitignore"
	name := "bower_components/iron-checked-element-behavior/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronCheckedElementBehaviorTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronCheckedElementBehaviorTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-checked-element-behavior/.travis.yml"
	name := "bower_components/iron-checked-element-behavior/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronCheckedElementBehaviorContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronCheckedElementBehaviorContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-checked-element-behavior/CONTRIBUTING.md"
	name := "bower_components/iron-checked-element-behavior/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronCheckedElementBehaviorReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronCheckedElementBehaviorReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-checked-element-behavior/README.md"
	name := "bower_components/iron-checked-element-behavior/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronCheckedElementBehaviorBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronCheckedElementBehaviorBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-checked-element-behavior/bower.json"
	name := "bower_components/iron-checked-element-behavior/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronCheckedElementBehaviorDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronCheckedElementBehaviorDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-checked-element-behavior/demo/index.html"
	name := "bower_components/iron-checked-element-behavior/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronCheckedElementBehaviorDemoSimpleCheckboxHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronCheckedElementBehaviorDemoSimpleCheckboxHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-checked-element-behavior/demo/simple-checkbox.html"
	name := "bower_components/iron-checked-element-behavior/demo/simple-checkbox.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronCheckedElementBehaviorIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronCheckedElementBehaviorIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-checked-element-behavior/index.html"
	name := "bower_components/iron-checked-element-behavior/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronCheckedElementBehaviorIronCheckedElementBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronCheckedElementBehaviorIronCheckedElementBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html"
	name := "bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronCheckedElementBehaviorTestBasicHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronCheckedElementBehaviorTestBasicHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-checked-element-behavior/test/basic.html"
	name := "bower_components/iron-checked-element-behavior/test/basic.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronCheckedElementBehaviorTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronCheckedElementBehaviorTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-checked-element-behavior/test/index.html"
	name := "bower_components/iron-checked-element-behavior/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronCheckedElementBehaviorTestSimpleCheckboxHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronCheckedElementBehaviorTestSimpleCheckboxHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-checked-element-behavior/test/simple-checkbox.html"
	name := "bower_components/iron-checked-element-behavior/test/simple-checkbox.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronDropdownBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronDropdownBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-dropdown/.bower.json"
	name := "bower_components/iron-dropdown/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronDropdownGithubIssue_templateMd reads file data from disk. It returns an error on failure.
func bower_componentsIronDropdownGithubIssue_templateMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-dropdown/.github/ISSUE_TEMPLATE.md"
	name := "bower_components/iron-dropdown/.github/ISSUE_TEMPLATE.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronDropdownGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronDropdownGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-dropdown/.gitignore"
	name := "bower_components/iron-dropdown/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronDropdownTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronDropdownTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-dropdown/.travis.yml"
	name := "bower_components/iron-dropdown/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronDropdownContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronDropdownContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-dropdown/CONTRIBUTING.md"
	name := "bower_components/iron-dropdown/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronDropdownReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronDropdownReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-dropdown/README.md"
	name := "bower_components/iron-dropdown/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronDropdownBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronDropdownBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-dropdown/bower.json"
	name := "bower_components/iron-dropdown/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronDropdownDemoGrowHeightAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronDropdownDemoGrowHeightAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-dropdown/demo/grow-height-animation.html"
	name := "bower_components/iron-dropdown/demo/grow-height-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronDropdownDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronDropdownDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-dropdown/demo/index.html"
	name := "bower_components/iron-dropdown/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronDropdownDemoXSelectHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronDropdownDemoXSelectHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-dropdown/demo/x-select.html"
	name := "bower_components/iron-dropdown/demo/x-select.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronDropdownIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronDropdownIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-dropdown/index.html"
	name := "bower_components/iron-dropdown/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronDropdownIronDropdownScrollManagerHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronDropdownIronDropdownScrollManagerHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-dropdown/iron-dropdown-scroll-manager.html"
	name := "bower_components/iron-dropdown/iron-dropdown-scroll-manager.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronDropdownIronDropdownHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronDropdownIronDropdownHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-dropdown/iron-dropdown.html"
	name := "bower_components/iron-dropdown/iron-dropdown.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronDropdownTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronDropdownTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-dropdown/test/index.html"
	name := "bower_components/iron-dropdown/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronDropdownTestIronDropdownScrollManagerHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronDropdownTestIronDropdownScrollManagerHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-dropdown/test/iron-dropdown-scroll-manager.html"
	name := "bower_components/iron-dropdown/test/iron-dropdown-scroll-manager.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronDropdownTestIronDropdownHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronDropdownTestIronDropdownHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-dropdown/test/iron-dropdown.html"
	name := "bower_components/iron-dropdown/test/iron-dropdown.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronDropdownTestXScrollableElementHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronDropdownTestXScrollableElementHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-dropdown/test/x-scrollable-element.html"
	name := "bower_components/iron-dropdown/test/x-scrollable-element.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFitBehaviorBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronFitBehaviorBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-fit-behavior/.bower.json"
	name := "bower_components/iron-fit-behavior/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFitBehaviorGithubIssue_templateMd reads file data from disk. It returns an error on failure.
func bower_componentsIronFitBehaviorGithubIssue_templateMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-fit-behavior/.github/ISSUE_TEMPLATE.md"
	name := "bower_components/iron-fit-behavior/.github/ISSUE_TEMPLATE.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFitBehaviorGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronFitBehaviorGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-fit-behavior/.gitignore"
	name := "bower_components/iron-fit-behavior/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFitBehaviorTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronFitBehaviorTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-fit-behavior/.travis.yml"
	name := "bower_components/iron-fit-behavior/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFitBehaviorContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronFitBehaviorContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-fit-behavior/CONTRIBUTING.md"
	name := "bower_components/iron-fit-behavior/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFitBehaviorReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronFitBehaviorReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-fit-behavior/README.md"
	name := "bower_components/iron-fit-behavior/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFitBehaviorBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronFitBehaviorBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-fit-behavior/bower.json"
	name := "bower_components/iron-fit-behavior/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFitBehaviorDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFitBehaviorDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-fit-behavior/demo/index.html"
	name := "bower_components/iron-fit-behavior/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFitBehaviorDemoSimpleFitHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFitBehaviorDemoSimpleFitHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-fit-behavior/demo/simple-fit.html"
	name := "bower_components/iron-fit-behavior/demo/simple-fit.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFitBehaviorIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFitBehaviorIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-fit-behavior/index.html"
	name := "bower_components/iron-fit-behavior/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFitBehaviorIronFitBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFitBehaviorIronFitBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-fit-behavior/iron-fit-behavior.html"
	name := "bower_components/iron-fit-behavior/iron-fit-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFitBehaviorTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFitBehaviorTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-fit-behavior/test/index.html"
	name := "bower_components/iron-fit-behavior/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFitBehaviorTestIronFitBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFitBehaviorTestIronFitBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-fit-behavior/test/iron-fit-behavior.html"
	name := "bower_components/iron-fit-behavior/test/iron-fit-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFitBehaviorTestTestFitHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFitBehaviorTestTestFitHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-fit-behavior/test/test-fit.html"
	name := "bower_components/iron-fit-behavior/test/test-fit.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFlexLayoutBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronFlexLayoutBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-flex-layout/.bower.json"
	name := "bower_components/iron-flex-layout/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFlexLayoutGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronFlexLayoutGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-flex-layout/.gitignore"
	name := "bower_components/iron-flex-layout/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFlexLayoutTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronFlexLayoutTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-flex-layout/.travis.yml"
	name := "bower_components/iron-flex-layout/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFlexLayoutContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronFlexLayoutContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-flex-layout/CONTRIBUTING.md"
	name := "bower_components/iron-flex-layout/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFlexLayoutReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronFlexLayoutReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-flex-layout/README.md"
	name := "bower_components/iron-flex-layout/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFlexLayoutBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronFlexLayoutBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-flex-layout/bower.json"
	name := "bower_components/iron-flex-layout/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFlexLayoutClassesIronFlexLayoutHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFlexLayoutClassesIronFlexLayoutHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-flex-layout/classes/iron-flex-layout.html"
	name := "bower_components/iron-flex-layout/classes/iron-flex-layout.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFlexLayoutClassesIronShadowFlexLayoutHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFlexLayoutClassesIronShadowFlexLayoutHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-flex-layout/classes/iron-shadow-flex-layout.html"
	name := "bower_components/iron-flex-layout/classes/iron-shadow-flex-layout.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFlexLayoutDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFlexLayoutDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-flex-layout/demo/index.html"
	name := "bower_components/iron-flex-layout/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFlexLayoutIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFlexLayoutIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-flex-layout/index.html"
	name := "bower_components/iron-flex-layout/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFlexLayoutIronFlexLayoutClassesHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFlexLayoutIronFlexLayoutClassesHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-flex-layout/iron-flex-layout-classes.html"
	name := "bower_components/iron-flex-layout/iron-flex-layout-classes.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFlexLayoutIronFlexLayoutHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFlexLayoutIronFlexLayoutHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-flex-layout/iron-flex-layout.html"
	name := "bower_components/iron-flex-layout/iron-flex-layout.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFlexLayoutTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFlexLayoutTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-flex-layout/test/index.html"
	name := "bower_components/iron-flex-layout/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFlexLayoutTestIronFlexLayoutClassesHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFlexLayoutTestIronFlexLayoutClassesHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-flex-layout/test/iron-flex-layout-classes.html"
	name := "bower_components/iron-flex-layout/test/iron-flex-layout-classes.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFlexLayoutTestIronFlexLayoutHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFlexLayoutTestIronFlexLayoutHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-flex-layout/test/iron-flex-layout.html"
	name := "bower_components/iron-flex-layout/test/iron-flex-layout.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFormElementBehaviorBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronFormElementBehaviorBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-form-element-behavior/.bower.json"
	name := "bower_components/iron-form-element-behavior/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFormElementBehaviorGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronFormElementBehaviorGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-form-element-behavior/.gitignore"
	name := "bower_components/iron-form-element-behavior/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFormElementBehaviorTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronFormElementBehaviorTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-form-element-behavior/.travis.yml"
	name := "bower_components/iron-form-element-behavior/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFormElementBehaviorContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronFormElementBehaviorContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-form-element-behavior/CONTRIBUTING.md"
	name := "bower_components/iron-form-element-behavior/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFormElementBehaviorReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronFormElementBehaviorReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-form-element-behavior/README.md"
	name := "bower_components/iron-form-element-behavior/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFormElementBehaviorBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronFormElementBehaviorBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-form-element-behavior/bower.json"
	name := "bower_components/iron-form-element-behavior/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFormElementBehaviorDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFormElementBehaviorDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-form-element-behavior/demo/index.html"
	name := "bower_components/iron-form-element-behavior/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFormElementBehaviorDemoSimpleElementHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFormElementBehaviorDemoSimpleElementHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-form-element-behavior/demo/simple-element.html"
	name := "bower_components/iron-form-element-behavior/demo/simple-element.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFormElementBehaviorDemoSimpleFormHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFormElementBehaviorDemoSimpleFormHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-form-element-behavior/demo/simple-form.html"
	name := "bower_components/iron-form-element-behavior/demo/simple-form.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFormElementBehaviorIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFormElementBehaviorIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-form-element-behavior/index.html"
	name := "bower_components/iron-form-element-behavior/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFormElementBehaviorIronFormElementBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFormElementBehaviorIronFormElementBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-form-element-behavior/iron-form-element-behavior.html"
	name := "bower_components/iron-form-element-behavior/iron-form-element-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFormElementBehaviorTestBasicHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFormElementBehaviorTestBasicHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-form-element-behavior/test/basic.html"
	name := "bower_components/iron-form-element-behavior/test/basic.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFormElementBehaviorTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFormElementBehaviorTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-form-element-behavior/test/index.html"
	name := "bower_components/iron-form-element-behavior/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFormElementBehaviorTestSimpleElementHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFormElementBehaviorTestSimpleElementHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-form-element-behavior/test/simple-element.html"
	name := "bower_components/iron-form-element-behavior/test/simple-element.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronFormElementBehaviorTestSimpleFormHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronFormElementBehaviorTestSimpleFormHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-form-element-behavior/test/simple-form.html"
	name := "bower_components/iron-form-element-behavior/test/simple-form.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronIconBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icon/.bower.json"
	name := "bower_components/iron-icon/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronIconGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icon/.gitignore"
	name := "bower_components/iron-icon/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronIconReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icon/README.md"
	name := "bower_components/iron-icon/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronIconBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icon/bower.json"
	name := "bower_components/iron-icon/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconDemoAsyncHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconDemoAsyncHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icon/demo/async.html"
	name := "bower_components/iron-icon/demo/async.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icon/demo/index.html"
	name := "bower_components/iron-icon/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconDemoLocationPng reads file data from disk. It returns an error on failure.
func bower_componentsIronIconDemoLocationPng() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icon/demo/location.png"
	name := "bower_components/iron-icon/demo/location.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconHeroSvg reads file data from disk. It returns an error on failure.
func bower_componentsIronIconHeroSvg() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icon/hero.svg"
	name := "bower_components/iron-icon/hero.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icon/index.html"
	name := "bower_components/iron-icon/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconIronIconHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconIronIconHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icon/iron-icon.html"
	name := "bower_components/iron-icon/iron-icon.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icon/test/index.html"
	name := "bower_components/iron-icon/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconTestIronIconHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconTestIronIconHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icon/test/iron-icon.html"
	name := "bower_components/iron-icon/test/iron-icon.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/.bower.json"
	name := "bower_components/iron-icons/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/.gitignore"
	name := "bower_components/iron-icons/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/.travis.yml"
	name := "bower_components/iron-icons/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/CONTRIBUTING.md"
	name := "bower_components/iron-icons/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/README.md"
	name := "bower_components/iron-icons/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsAvIconsHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsAvIconsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/av-icons.html"
	name := "bower_components/iron-icons/av-icons.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/bower.json"
	name := "bower_components/iron-icons/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsCommunicationIconsHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsCommunicationIconsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/communication-icons.html"
	name := "bower_components/iron-icons/communication-icons.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/demo/index.html"
	name := "bower_components/iron-icons/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsDeviceIconsHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsDeviceIconsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/device-icons.html"
	name := "bower_components/iron-icons/device-icons.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsEditorIconsHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsEditorIconsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/editor-icons.html"
	name := "bower_components/iron-icons/editor-icons.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsHardwareIconsHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsHardwareIconsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/hardware-icons.html"
	name := "bower_components/iron-icons/hardware-icons.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsHeroSvg reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsHeroSvg() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/hero.svg"
	name := "bower_components/iron-icons/hero.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsImageIconsHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsImageIconsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/image-icons.html"
	name := "bower_components/iron-icons/image-icons.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/index.html"
	name := "bower_components/iron-icons/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsIronIconsHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsIronIconsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/iron-icons.html"
	name := "bower_components/iron-icons/iron-icons.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsMapsIconsHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsMapsIconsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/maps-icons.html"
	name := "bower_components/iron-icons/maps-icons.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsNotificationIconsHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsNotificationIconsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/notification-icons.html"
	name := "bower_components/iron-icons/notification-icons.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsPlacesIconsHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsPlacesIconsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/places-icons.html"
	name := "bower_components/iron-icons/places-icons.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsSocialIconsHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsSocialIconsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-icons/social-icons.html"
	name := "bower_components/iron-icons/social-icons.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsetSvgBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsetSvgBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-iconset-svg/.bower.json"
	name := "bower_components/iron-iconset-svg/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsetSvgGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsetSvgGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-iconset-svg/.gitignore"
	name := "bower_components/iron-iconset-svg/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsetSvgTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsetSvgTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-iconset-svg/.travis.yml"
	name := "bower_components/iron-iconset-svg/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsetSvgContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsetSvgContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-iconset-svg/CONTRIBUTING.md"
	name := "bower_components/iron-iconset-svg/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsetSvgReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsetSvgReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-iconset-svg/README.md"
	name := "bower_components/iron-iconset-svg/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsetSvgBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsetSvgBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-iconset-svg/bower.json"
	name := "bower_components/iron-iconset-svg/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsetSvgDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsetSvgDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-iconset-svg/demo/index.html"
	name := "bower_components/iron-iconset-svg/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsetSvgDemoSvgSampleIconsHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsetSvgDemoSvgSampleIconsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-iconset-svg/demo/svg-sample-icons.html"
	name := "bower_components/iron-iconset-svg/demo/svg-sample-icons.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsetSvgIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsetSvgIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-iconset-svg/index.html"
	name := "bower_components/iron-iconset-svg/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsetSvgIronIconsetSvgHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsetSvgIronIconsetSvgHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-iconset-svg/iron-iconset-svg.html"
	name := "bower_components/iron-iconset-svg/iron-iconset-svg.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsetSvgTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsetSvgTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-iconset-svg/test/index.html"
	name := "bower_components/iron-iconset-svg/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronIconsetSvgTestIronIconsetSvgHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronIconsetSvgTestIronIconsetSvgHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-iconset-svg/test/iron-iconset-svg.html"
	name := "bower_components/iron-iconset-svg/test/iron-iconset-svg.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronImageBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronImageBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-image/.bower.json"
	name := "bower_components/iron-image/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronImageGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronImageGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-image/.gitignore"
	name := "bower_components/iron-image/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronImageTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronImageTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-image/.travis.yml"
	name := "bower_components/iron-image/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronImageContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronImageContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-image/CONTRIBUTING.md"
	name := "bower_components/iron-image/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronImageReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronImageReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-image/README.md"
	name := "bower_components/iron-image/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronImageBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronImageBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-image/bower.json"
	name := "bower_components/iron-image/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronImageDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronImageDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-image/demo/index.html"
	name := "bower_components/iron-image/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronImageDemoLoadingPng reads file data from disk. It returns an error on failure.
func bower_componentsIronImageDemoLoadingPng() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-image/demo/loading.png"
	name := "bower_components/iron-image/demo/loading.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronImageDemoPolymerSvg reads file data from disk. It returns an error on failure.
func bower_componentsIronImageDemoPolymerSvg() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-image/demo/polymer.svg"
	name := "bower_components/iron-image/demo/polymer.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronImageIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronImageIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-image/index.html"
	name := "bower_components/iron-image/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronImageIronImageHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronImageIronImageHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-image/iron-image.html"
	name := "bower_components/iron-image/iron-image.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronImageTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronImageTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-image/test/index.html"
	name := "bower_components/iron-image/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronImageTestIronImageHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronImageTestIronImageHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-image/test/iron-image.html"
	name := "bower_components/iron-image/test/iron-image.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronInputBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronInputBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-input/.bower.json"
	name := "bower_components/iron-input/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronInputGithubIssue_templateMd reads file data from disk. It returns an error on failure.
func bower_componentsIronInputGithubIssue_templateMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-input/.github/ISSUE_TEMPLATE.md"
	name := "bower_components/iron-input/.github/ISSUE_TEMPLATE.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronInputGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronInputGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-input/.gitignore"
	name := "bower_components/iron-input/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronInputTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronInputTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-input/.travis.yml"
	name := "bower_components/iron-input/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronInputContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronInputContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-input/CONTRIBUTING.md"
	name := "bower_components/iron-input/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronInputReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronInputReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-input/README.md"
	name := "bower_components/iron-input/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronInputBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronInputBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-input/bower.json"
	name := "bower_components/iron-input/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronInputDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronInputDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-input/demo/index.html"
	name := "bower_components/iron-input/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronInputHeroSvg reads file data from disk. It returns an error on failure.
func bower_componentsIronInputHeroSvg() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-input/hero.svg"
	name := "bower_components/iron-input/hero.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronInputIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronInputIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-input/index.html"
	name := "bower_components/iron-input/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronInputIronInputHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronInputIronInputHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-input/iron-input.html"
	name := "bower_components/iron-input/iron-input.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronInputTestDisabledInputHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronInputTestDisabledInputHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-input/test/disabled-input.html"
	name := "bower_components/iron-input/test/disabled-input.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronInputTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronInputTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-input/test/index.html"
	name := "bower_components/iron-input/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronInputTestIronInputHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronInputTestIronInputHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-input/test/iron-input.html"
	name := "bower_components/iron-input/test/iron-input.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronInputTestLettersOnlyHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronInputTestLettersOnlyHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-input/test/letters-only.html"
	name := "bower_components/iron-input/test/letters-only.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMediaQueryBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronMediaQueryBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-media-query/.bower.json"
	name := "bower_components/iron-media-query/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMediaQueryGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronMediaQueryGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-media-query/.gitignore"
	name := "bower_components/iron-media-query/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMediaQueryTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronMediaQueryTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-media-query/.travis.yml"
	name := "bower_components/iron-media-query/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMediaQueryContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronMediaQueryContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-media-query/CONTRIBUTING.md"
	name := "bower_components/iron-media-query/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMediaQueryReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronMediaQueryReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-media-query/README.md"
	name := "bower_components/iron-media-query/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMediaQueryBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronMediaQueryBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-media-query/bower.json"
	name := "bower_components/iron-media-query/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMediaQueryDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMediaQueryDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-media-query/demo/index.html"
	name := "bower_components/iron-media-query/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMediaQueryHeroSvg reads file data from disk. It returns an error on failure.
func bower_componentsIronMediaQueryHeroSvg() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-media-query/hero.svg"
	name := "bower_components/iron-media-query/hero.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMediaQueryIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMediaQueryIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-media-query/index.html"
	name := "bower_components/iron-media-query/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMediaQueryIronMediaQueryHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMediaQueryIronMediaQueryHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-media-query/iron-media-query.html"
	name := "bower_components/iron-media-query/iron-media-query.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMediaQueryTestBasicHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMediaQueryTestBasicHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-media-query/test/basic.html"
	name := "bower_components/iron-media-query/test/basic.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMediaQueryTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMediaQueryTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-media-query/test/index.html"
	name := "bower_components/iron-media-query/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMenuBehaviorBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronMenuBehaviorBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-menu-behavior/.bower.json"
	name := "bower_components/iron-menu-behavior/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMenuBehaviorGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronMenuBehaviorGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-menu-behavior/.gitignore"
	name := "bower_components/iron-menu-behavior/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMenuBehaviorTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronMenuBehaviorTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-menu-behavior/.travis.yml"
	name := "bower_components/iron-menu-behavior/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMenuBehaviorContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronMenuBehaviorContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-menu-behavior/CONTRIBUTING.md"
	name := "bower_components/iron-menu-behavior/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMenuBehaviorReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronMenuBehaviorReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-menu-behavior/README.md"
	name := "bower_components/iron-menu-behavior/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMenuBehaviorBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronMenuBehaviorBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-menu-behavior/bower.json"
	name := "bower_components/iron-menu-behavior/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMenuBehaviorDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMenuBehaviorDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-menu-behavior/demo/index.html"
	name := "bower_components/iron-menu-behavior/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMenuBehaviorDemoSimpleMenuHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMenuBehaviorDemoSimpleMenuHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-menu-behavior/demo/simple-menu.html"
	name := "bower_components/iron-menu-behavior/demo/simple-menu.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMenuBehaviorDemoSimpleMenubarHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMenuBehaviorDemoSimpleMenubarHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-menu-behavior/demo/simple-menubar.html"
	name := "bower_components/iron-menu-behavior/demo/simple-menubar.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMenuBehaviorIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMenuBehaviorIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-menu-behavior/index.html"
	name := "bower_components/iron-menu-behavior/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMenuBehaviorIronMenuBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMenuBehaviorIronMenuBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-menu-behavior/iron-menu-behavior.html"
	name := "bower_components/iron-menu-behavior/iron-menu-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMenuBehaviorIronMenubarBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMenuBehaviorIronMenubarBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-menu-behavior/iron-menubar-behavior.html"
	name := "bower_components/iron-menu-behavior/iron-menubar-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMenuBehaviorTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMenuBehaviorTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-menu-behavior/test/index.html"
	name := "bower_components/iron-menu-behavior/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMenuBehaviorTestIronMenuBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMenuBehaviorTestIronMenuBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-menu-behavior/test/iron-menu-behavior.html"
	name := "bower_components/iron-menu-behavior/test/iron-menu-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMenuBehaviorTestIronMenubarBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMenuBehaviorTestIronMenubarBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-menu-behavior/test/iron-menubar-behavior.html"
	name := "bower_components/iron-menu-behavior/test/iron-menubar-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMenuBehaviorTestTestMenuHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMenuBehaviorTestTestMenuHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-menu-behavior/test/test-menu.html"
	name := "bower_components/iron-menu-behavior/test/test-menu.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMenuBehaviorTestTestMenubarHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMenuBehaviorTestTestMenubarHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-menu-behavior/test/test-menubar.html"
	name := "bower_components/iron-menu-behavior/test/test-menubar.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMetaBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronMetaBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-meta/.bower.json"
	name := "bower_components/iron-meta/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMetaGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronMetaGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-meta/.gitignore"
	name := "bower_components/iron-meta/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMetaTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronMetaTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-meta/.travis.yml"
	name := "bower_components/iron-meta/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMetaContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronMetaContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-meta/CONTRIBUTING.md"
	name := "bower_components/iron-meta/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMetaReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronMetaReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-meta/README.md"
	name := "bower_components/iron-meta/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMetaBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronMetaBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-meta/bower.json"
	name := "bower_components/iron-meta/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMetaDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMetaDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-meta/demo/index.html"
	name := "bower_components/iron-meta/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMetaHeroSvg reads file data from disk. It returns an error on failure.
func bower_componentsIronMetaHeroSvg() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-meta/hero.svg"
	name := "bower_components/iron-meta/hero.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMetaIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMetaIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-meta/index.html"
	name := "bower_components/iron-meta/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMetaIronMetaHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMetaIronMetaHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-meta/iron-meta.html"
	name := "bower_components/iron-meta/iron-meta.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMetaTestBasicHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMetaTestBasicHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-meta/test/basic.html"
	name := "bower_components/iron-meta/test/basic.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMetaTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMetaTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-meta/test/index.html"
	name := "bower_components/iron-meta/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronMetaTestIronMetaHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronMetaTestIronMetaHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-meta/test/iron-meta.html"
	name := "bower_components/iron-meta/test/iron-meta.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/.bower.json"
	name := "bower_components/iron-overlay-behavior/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorGithubIssue_templateMd reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorGithubIssue_templateMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/.github/ISSUE_TEMPLATE.md"
	name := "bower_components/iron-overlay-behavior/.github/ISSUE_TEMPLATE.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/.gitignore"
	name := "bower_components/iron-overlay-behavior/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/.travis.yml"
	name := "bower_components/iron-overlay-behavior/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/CONTRIBUTING.md"
	name := "bower_components/iron-overlay-behavior/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/README.md"
	name := "bower_components/iron-overlay-behavior/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/bower.json"
	name := "bower_components/iron-overlay-behavior/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/demo/index.html"
	name := "bower_components/iron-overlay-behavior/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorDemoSimpleOverlayHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorDemoSimpleOverlayHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/demo/simple-overlay.html"
	name := "bower_components/iron-overlay-behavior/demo/simple-overlay.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/index.html"
	name := "bower_components/iron-overlay-behavior/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorIronFocusablesHelperHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorIronFocusablesHelperHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/iron-focusables-helper.html"
	name := "bower_components/iron-overlay-behavior/iron-focusables-helper.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorIronOverlayBackdropHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorIronOverlayBackdropHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/iron-overlay-backdrop.html"
	name := "bower_components/iron-overlay-behavior/iron-overlay-backdrop.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorIronOverlayBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorIronOverlayBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/iron-overlay-behavior.html"
	name := "bower_components/iron-overlay-behavior/iron-overlay-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorIronOverlayManagerHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorIronOverlayManagerHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/iron-overlay-manager.html"
	name := "bower_components/iron-overlay-behavior/iron-overlay-manager.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/test/index.html"
	name := "bower_components/iron-overlay-behavior/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorTestIronFocusablesHelperHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorTestIronFocusablesHelperHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/test/iron-focusables-helper.html"
	name := "bower_components/iron-overlay-behavior/test/iron-focusables-helper.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorTestIronOverlayBackdropHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorTestIronOverlayBackdropHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/test/iron-overlay-backdrop.html"
	name := "bower_components/iron-overlay-behavior/test/iron-overlay-backdrop.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorTestIronOverlayBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorTestIronOverlayBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/test/iron-overlay-behavior.html"
	name := "bower_components/iron-overlay-behavior/test/iron-overlay-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorTestTestButtonsWrapperHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorTestTestButtonsWrapperHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/test/test-buttons-wrapper.html"
	name := "bower_components/iron-overlay-behavior/test/test-buttons-wrapper.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorTestTestButtonsHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorTestTestButtonsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/test/test-buttons.html"
	name := "bower_components/iron-overlay-behavior/test/test-buttons.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorTestTestMenuButtonHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorTestTestMenuButtonHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/test/test-menu-button.html"
	name := "bower_components/iron-overlay-behavior/test/test-menu-button.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorTestTestOverlayHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorTestTestOverlayHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/test/test-overlay.html"
	name := "bower_components/iron-overlay-behavior/test/test-overlay.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronOverlayBehaviorTestTestOverlay2Html reads file data from disk. It returns an error on failure.
func bower_componentsIronOverlayBehaviorTestTestOverlay2Html() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-overlay-behavior/test/test-overlay2.html"
	name := "bower_components/iron-overlay-behavior/test/test-overlay2.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronResizableBehaviorBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronResizableBehaviorBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-resizable-behavior/.bower.json"
	name := "bower_components/iron-resizable-behavior/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronResizableBehaviorGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronResizableBehaviorGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-resizable-behavior/.gitignore"
	name := "bower_components/iron-resizable-behavior/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronResizableBehaviorTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronResizableBehaviorTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-resizable-behavior/.travis.yml"
	name := "bower_components/iron-resizable-behavior/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronResizableBehaviorContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronResizableBehaviorContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-resizable-behavior/CONTRIBUTING.md"
	name := "bower_components/iron-resizable-behavior/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronResizableBehaviorReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronResizableBehaviorReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-resizable-behavior/README.md"
	name := "bower_components/iron-resizable-behavior/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronResizableBehaviorBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronResizableBehaviorBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-resizable-behavior/bower.json"
	name := "bower_components/iron-resizable-behavior/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronResizableBehaviorDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronResizableBehaviorDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-resizable-behavior/demo/index.html"
	name := "bower_components/iron-resizable-behavior/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronResizableBehaviorDemoSrcXAppHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronResizableBehaviorDemoSrcXAppHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-resizable-behavior/demo/src/x-app.html"
	name := "bower_components/iron-resizable-behavior/demo/src/x-app.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronResizableBehaviorIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronResizableBehaviorIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-resizable-behavior/index.html"
	name := "bower_components/iron-resizable-behavior/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronResizableBehaviorIronResizableBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronResizableBehaviorIronResizableBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-resizable-behavior/iron-resizable-behavior.html"
	name := "bower_components/iron-resizable-behavior/iron-resizable-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronResizableBehaviorTestBasicHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronResizableBehaviorTestBasicHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-resizable-behavior/test/basic.html"
	name := "bower_components/iron-resizable-behavior/test/basic.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronResizableBehaviorTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronResizableBehaviorTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-resizable-behavior/test/index.html"
	name := "bower_components/iron-resizable-behavior/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronResizableBehaviorTestIronResizableBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronResizableBehaviorTestIronResizableBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-resizable-behavior/test/iron-resizable-behavior.html"
	name := "bower_components/iron-resizable-behavior/test/iron-resizable-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronResizableBehaviorTestTestElementsHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronResizableBehaviorTestTestElementsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-resizable-behavior/test/test-elements.html"
	name := "bower_components/iron-resizable-behavior/test/test-elements.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/.bower.json"
	name := "bower_components/iron-selector/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/.gitignore"
	name := "bower_components/iron-selector/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/.travis.yml"
	name := "bower_components/iron-selector/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/CONTRIBUTING.md"
	name := "bower_components/iron-selector/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/README.md"
	name := "bower_components/iron-selector/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/bower.json"
	name := "bower_components/iron-selector/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/demo/index.html"
	name := "bower_components/iron-selector/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/index.html"
	name := "bower_components/iron-selector/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorIronMultiSelectableHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorIronMultiSelectableHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/iron-multi-selectable.html"
	name := "bower_components/iron-selector/iron-multi-selectable.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorIronSelectableHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorIronSelectableHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/iron-selectable.html"
	name := "bower_components/iron-selector/iron-selectable.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorIronSelectionHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorIronSelectionHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/iron-selection.html"
	name := "bower_components/iron-selector/iron-selection.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorIronSelectorHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorIronSelectorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/iron-selector.html"
	name := "bower_components/iron-selector/iron-selector.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorTestActivateEventHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorTestActivateEventHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/test/activate-event.html"
	name := "bower_components/iron-selector/test/activate-event.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorTestBasicHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorTestBasicHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/test/basic.html"
	name := "bower_components/iron-selector/test/basic.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorTestContentElementHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorTestContentElementHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/test/content-element.html"
	name := "bower_components/iron-selector/test/content-element.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorTestContentHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorTestContentHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/test/content.html"
	name := "bower_components/iron-selector/test/content.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorTestExcludedLocalNamesHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorTestExcludedLocalNamesHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/test/excluded-local-names.html"
	name := "bower_components/iron-selector/test/excluded-local-names.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/test/index.html"
	name := "bower_components/iron-selector/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorTestMultiHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorTestMultiHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/test/multi.html"
	name := "bower_components/iron-selector/test/multi.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorTestNextPreviousHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorTestNextPreviousHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/test/next-previous.html"
	name := "bower_components/iron-selector/test/next-previous.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorTestNumericIdsHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorTestNumericIdsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/test/numeric-ids.html"
	name := "bower_components/iron-selector/test/numeric-ids.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorTestSelectedAttributeHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorTestSelectedAttributeHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/test/selected-attribute.html"
	name := "bower_components/iron-selector/test/selected-attribute.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronSelectorTestTemplateRepeatHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronSelectorTestTemplateRepeatHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-selector/test/template-repeat.html"
	name := "bower_components/iron-selector/test/template-repeat.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronValidatableBehaviorBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsIronValidatableBehaviorBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-validatable-behavior/.bower.json"
	name := "bower_components/iron-validatable-behavior/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronValidatableBehaviorGitignore reads file data from disk. It returns an error on failure.
func bower_componentsIronValidatableBehaviorGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-validatable-behavior/.gitignore"
	name := "bower_components/iron-validatable-behavior/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronValidatableBehaviorReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsIronValidatableBehaviorReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-validatable-behavior/README.md"
	name := "bower_components/iron-validatable-behavior/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronValidatableBehaviorBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsIronValidatableBehaviorBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-validatable-behavior/bower.json"
	name := "bower_components/iron-validatable-behavior/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronValidatableBehaviorDemoCatsOnlyHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronValidatableBehaviorDemoCatsOnlyHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-validatable-behavior/demo/cats-only.html"
	name := "bower_components/iron-validatable-behavior/demo/cats-only.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronValidatableBehaviorDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronValidatableBehaviorDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-validatable-behavior/demo/index.html"
	name := "bower_components/iron-validatable-behavior/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronValidatableBehaviorDemoValidatableInputHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronValidatableBehaviorDemoValidatableInputHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-validatable-behavior/demo/validatable-input.html"
	name := "bower_components/iron-validatable-behavior/demo/validatable-input.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronValidatableBehaviorIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronValidatableBehaviorIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-validatable-behavior/index.html"
	name := "bower_components/iron-validatable-behavior/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronValidatableBehaviorIronValidatableBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronValidatableBehaviorIronValidatableBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-validatable-behavior/iron-validatable-behavior.html"
	name := "bower_components/iron-validatable-behavior/iron-validatable-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronValidatableBehaviorTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronValidatableBehaviorTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-validatable-behavior/test/index.html"
	name := "bower_components/iron-validatable-behavior/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronValidatableBehaviorTestIronValidatableBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronValidatableBehaviorTestIronValidatableBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-validatable-behavior/test/iron-validatable-behavior.html"
	name := "bower_components/iron-validatable-behavior/test/iron-validatable-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsIronValidatableBehaviorTestTestValidatableHtml reads file data from disk. It returns an error on failure.
func bower_componentsIronValidatableBehaviorTestTestValidatableHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/iron-validatable-behavior/test/test-validatable.html"
	name := "bower_components/iron-validatable-behavior/test/test-validatable.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/.bower.json"
	name := "bower_components/neon-animation/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationGithubIssue_templateMd reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationGithubIssue_templateMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/.github/ISSUE_TEMPLATE.md"
	name := "bower_components/neon-animation/.github/ISSUE_TEMPLATE.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationGitignore reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/.gitignore"
	name := "bower_components/neon-animation/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/.travis.yml"
	name := "bower_components/neon-animation/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/CONTRIBUTING.md"
	name := "bower_components/neon-animation/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/README.md"
	name := "bower_components/neon-animation/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsCascadedAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsCascadedAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/cascaded-animation.html"
	name := "bower_components/neon-animation/animations/cascaded-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsFadeInAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsFadeInAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/fade-in-animation.html"
	name := "bower_components/neon-animation/animations/fade-in-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsFadeOutAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsFadeOutAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/fade-out-animation.html"
	name := "bower_components/neon-animation/animations/fade-out-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsHeroAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsHeroAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/hero-animation.html"
	name := "bower_components/neon-animation/animations/hero-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsOpaqueAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsOpaqueAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/opaque-animation.html"
	name := "bower_components/neon-animation/animations/opaque-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsReverseRippleAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsReverseRippleAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/reverse-ripple-animation.html"
	name := "bower_components/neon-animation/animations/reverse-ripple-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsRippleAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsRippleAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/ripple-animation.html"
	name := "bower_components/neon-animation/animations/ripple-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsScaleDownAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsScaleDownAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/scale-down-animation.html"
	name := "bower_components/neon-animation/animations/scale-down-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsScaleUpAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsScaleUpAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/scale-up-animation.html"
	name := "bower_components/neon-animation/animations/scale-up-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsSlideDownAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsSlideDownAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/slide-down-animation.html"
	name := "bower_components/neon-animation/animations/slide-down-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsSlideFromBottomAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsSlideFromBottomAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/slide-from-bottom-animation.html"
	name := "bower_components/neon-animation/animations/slide-from-bottom-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsSlideFromLeftAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsSlideFromLeftAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/slide-from-left-animation.html"
	name := "bower_components/neon-animation/animations/slide-from-left-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsSlideFromRightAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsSlideFromRightAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/slide-from-right-animation.html"
	name := "bower_components/neon-animation/animations/slide-from-right-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsSlideFromTopAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsSlideFromTopAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/slide-from-top-animation.html"
	name := "bower_components/neon-animation/animations/slide-from-top-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsSlideLeftAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsSlideLeftAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/slide-left-animation.html"
	name := "bower_components/neon-animation/animations/slide-left-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsSlideRightAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsSlideRightAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/slide-right-animation.html"
	name := "bower_components/neon-animation/animations/slide-right-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsSlideUpAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsSlideUpAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/slide-up-animation.html"
	name := "bower_components/neon-animation/animations/slide-up-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationAnimationsTransformAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationAnimationsTransformAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/animations/transform-animation.html"
	name := "bower_components/neon-animation/animations/transform-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/bower.json"
	name := "bower_components/neon-animation/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoCardIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoCardIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/card/index.html"
	name := "bower_components/neon-animation/demo/card/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoCardXCardHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoCardXCardHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/card/x-card.html"
	name := "bower_components/neon-animation/demo/card/x-card.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoCardXCardsListHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoCardXCardsListHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/card/x-cards-list.html"
	name := "bower_components/neon-animation/demo/card/x-cards-list.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoDeclarativeIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoDeclarativeIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/declarative/index.html"
	name := "bower_components/neon-animation/demo/declarative/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoDocIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoDocIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/doc/index.html"
	name := "bower_components/neon-animation/demo/doc/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoDocMyAnimatableHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoDocMyAnimatableHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/doc/my-animatable.html"
	name := "bower_components/neon-animation/demo/doc/my-animatable.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoDocMyDialogHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoDocMyDialogHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/doc/my-dialog.html"
	name := "bower_components/neon-animation/demo/doc/my-dialog.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoDropdownAnimatedDropdownHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoDropdownAnimatedDropdownHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/dropdown/animated-dropdown.html"
	name := "bower_components/neon-animation/demo/dropdown/animated-dropdown.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoDropdownIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoDropdownIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/dropdown/index.html"
	name := "bower_components/neon-animation/demo/dropdown/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoGridAnimatedGridHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoGridAnimatedGridHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/grid/animated-grid.html"
	name := "bower_components/neon-animation/demo/grid/animated-grid.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoGridFullsizePageWithCardHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoGridFullsizePageWithCardHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/grid/fullsize-page-with-card.html"
	name := "bower_components/neon-animation/demo/grid/fullsize-page-with-card.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoGridIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoGridIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/grid/index.html"
	name := "bower_components/neon-animation/demo/grid/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/index.html"
	name := "bower_components/neon-animation/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoListFullViewHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoListFullViewHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/list/full-view.html"
	name := "bower_components/neon-animation/demo/list/full-view.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoListIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoListIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/list/index.html"
	name := "bower_components/neon-animation/demo/list/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoListListDemoHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoListListDemoHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/list/list-demo.html"
	name := "bower_components/neon-animation/demo/list/list-demo.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoListListViewHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoListListViewHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/list/list-view.html"
	name := "bower_components/neon-animation/demo/list/list-view.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoLoadAnimatedGridHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoLoadAnimatedGridHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/load/animated-grid.html"
	name := "bower_components/neon-animation/demo/load/animated-grid.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoLoadFullPageHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoLoadFullPageHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/load/full-page.html"
	name := "bower_components/neon-animation/demo/load/full-page.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoLoadIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoLoadIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/load/index.html"
	name := "bower_components/neon-animation/demo/load/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoReprojectionAnimatedGridHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoReprojectionAnimatedGridHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/reprojection/animated-grid.html"
	name := "bower_components/neon-animation/demo/reprojection/animated-grid.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoReprojectionFullsizePageWithCardHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoReprojectionFullsizePageWithCardHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/reprojection/fullsize-page-with-card.html"
	name := "bower_components/neon-animation/demo/reprojection/fullsize-page-with-card.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoReprojectionIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoReprojectionIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/reprojection/index.html"
	name := "bower_components/neon-animation/demo/reprojection/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoReprojectionReprojectedPagesHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoReprojectionReprojectedPagesHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/reprojection/reprojected-pages.html"
	name := "bower_components/neon-animation/demo/reprojection/reprojected-pages.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoSharedStylesHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoSharedStylesHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/shared-styles.html"
	name := "bower_components/neon-animation/demo/shared-styles.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoTilesCirclesPageHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoTilesCirclesPageHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/tiles/circles-page.html"
	name := "bower_components/neon-animation/demo/tiles/circles-page.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoTilesIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoTilesIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/tiles/index.html"
	name := "bower_components/neon-animation/demo/tiles/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationDemoTilesSquaresPageHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationDemoTilesSquaresPageHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/demo/tiles/squares-page.html"
	name := "bower_components/neon-animation/demo/tiles/squares-page.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationGuidesNeonAnimationMd reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationGuidesNeonAnimationMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/guides/neon-animation.md"
	name := "bower_components/neon-animation/guides/neon-animation.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/index.html"
	name := "bower_components/neon-animation/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationNeonAnimatableBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationNeonAnimatableBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/neon-animatable-behavior.html"
	name := "bower_components/neon-animation/neon-animatable-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationNeonAnimatableHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationNeonAnimatableHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/neon-animatable.html"
	name := "bower_components/neon-animation/neon-animatable.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationNeonAnimatedPagesHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationNeonAnimatedPagesHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/neon-animated-pages.html"
	name := "bower_components/neon-animation/neon-animated-pages.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationNeonAnimationBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationNeonAnimationBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/neon-animation-behavior.html"
	name := "bower_components/neon-animation/neon-animation-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationNeonAnimationRunnerBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationNeonAnimationRunnerBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/neon-animation-runner-behavior.html"
	name := "bower_components/neon-animation/neon-animation-runner-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationNeonAnimationHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationNeonAnimationHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/neon-animation.html"
	name := "bower_components/neon-animation/neon-animation.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationNeonAnimationsHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationNeonAnimationsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/neon-animations.html"
	name := "bower_components/neon-animation/neon-animations.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationNeonSharedElementAnimatableBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationNeonSharedElementAnimatableBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/neon-shared-element-animatable-behavior.html"
	name := "bower_components/neon-animation/neon-shared-element-animatable-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationNeonSharedElementAnimationBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationNeonSharedElementAnimationBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/neon-shared-element-animation-behavior.html"
	name := "bower_components/neon-animation/neon-shared-element-animation-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/test/index.html"
	name := "bower_components/neon-animation/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationTestNeonAnimatedPagesDescendantSelectionHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationTestNeonAnimatedPagesDescendantSelectionHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/test/neon-animated-pages-descendant-selection.html"
	name := "bower_components/neon-animation/test/neon-animated-pages-descendant-selection.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationTestNeonAnimatedPagesLazyHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationTestNeonAnimatedPagesLazyHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/test/neon-animated-pages-lazy.html"
	name := "bower_components/neon-animation/test/neon-animated-pages-lazy.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationTestNeonAnimatedPagesHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationTestNeonAnimatedPagesHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/test/neon-animated-pages.html"
	name := "bower_components/neon-animation/test/neon-animated-pages.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationTestTestResizablePagesHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationTestTestResizablePagesHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/test/test-resizable-pages.html"
	name := "bower_components/neon-animation/test/test-resizable-pages.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsNeonAnimationWebAnimationsHtml reads file data from disk. It returns an error on failure.
func bower_componentsNeonAnimationWebAnimationsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/neon-animation/web-animations.html"
	name := "bower_components/neon-animation/web-animations.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/.bower.json"
	name := "bower_components/paper-behaviors/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsGitignore reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/.gitignore"
	name := "bower_components/paper-behaviors/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/.travis.yml"
	name := "bower_components/paper-behaviors/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/CONTRIBUTING.md"
	name := "bower_components/paper-behaviors/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/README.md"
	name := "bower_components/paper-behaviors/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/bower.json"
	name := "bower_components/paper-behaviors/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/demo/index.html"
	name := "bower_components/paper-behaviors/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsDemoPaperButtonHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsDemoPaperButtonHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/demo/paper-button.html"
	name := "bower_components/paper-behaviors/demo/paper-button.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsDemoPaperRadioButtonHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsDemoPaperRadioButtonHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/demo/paper-radio-button.html"
	name := "bower_components/paper-behaviors/demo/paper-radio-button.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/index.html"
	name := "bower_components/paper-behaviors/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsPaperButtonBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsPaperButtonBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/paper-button-behavior.html"
	name := "bower_components/paper-behaviors/paper-button-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsPaperCheckedElementBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsPaperCheckedElementBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/paper-checked-element-behavior.html"
	name := "bower_components/paper-behaviors/paper-checked-element-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsPaperInkyFocusBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsPaperInkyFocusBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/paper-inky-focus-behavior.html"
	name := "bower_components/paper-behaviors/paper-inky-focus-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsPaperRippleBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsPaperRippleBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/paper-ripple-behavior.html"
	name := "bower_components/paper-behaviors/paper-ripple-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/test/index.html"
	name := "bower_components/paper-behaviors/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsTestPaperButtonBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsTestPaperButtonBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/test/paper-button-behavior.html"
	name := "bower_components/paper-behaviors/test/paper-button-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsTestPaperCheckedElementBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsTestPaperCheckedElementBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/test/paper-checked-element-behavior.html"
	name := "bower_components/paper-behaviors/test/paper-checked-element-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsTestPaperRadioButtonBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsTestPaperRadioButtonBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/test/paper-radio-button-behavior.html"
	name := "bower_components/paper-behaviors/test/paper-radio-button-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsTestPaperRippleBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsTestPaperRippleBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/test/paper-ripple-behavior.html"
	name := "bower_components/paper-behaviors/test/paper-ripple-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsTestShadowedRippleHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsTestShadowedRippleHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/test/shadowed-ripple.html"
	name := "bower_components/paper-behaviors/test/shadowed-ripple.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsTestTestButtonHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsTestTestButtonHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/test/test-button.html"
	name := "bower_components/paper-behaviors/test/test-button.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperBehaviorsTestTestRadioButtonHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperBehaviorsTestTestRadioButtonHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-behaviors/test/test-radio-button.html"
	name := "bower_components/paper-behaviors/test/test-radio-button.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperButtonBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsPaperButtonBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-button/.bower.json"
	name := "bower_components/paper-button/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperButtonGithubIssue_templateMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperButtonGithubIssue_templateMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-button/.github/ISSUE_TEMPLATE.md"
	name := "bower_components/paper-button/.github/ISSUE_TEMPLATE.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperButtonGitignore reads file data from disk. It returns an error on failure.
func bower_componentsPaperButtonGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-button/.gitignore"
	name := "bower_components/paper-button/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperButtonTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsPaperButtonTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-button/.travis.yml"
	name := "bower_components/paper-button/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperButtonContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperButtonContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-button/CONTRIBUTING.md"
	name := "bower_components/paper-button/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperButtonReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperButtonReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-button/README.md"
	name := "bower_components/paper-button/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperButtonBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsPaperButtonBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-button/bower.json"
	name := "bower_components/paper-button/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperButtonDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperButtonDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-button/demo/index.html"
	name := "bower_components/paper-button/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperButtonIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperButtonIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-button/index.html"
	name := "bower_components/paper-button/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperButtonPaperButtonHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperButtonPaperButtonHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-button/paper-button.html"
	name := "bower_components/paper-button/paper-button.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperButtonTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperButtonTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-button/test/index.html"
	name := "bower_components/paper-button/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperButtonTestPaperButtonHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperButtonTestPaperButtonHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-button/test/paper-button.html"
	name := "bower_components/paper-button/test/paper-button.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperCardBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsPaperCardBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-card/.bower.json"
	name := "bower_components/paper-card/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperCardGitignore reads file data from disk. It returns an error on failure.
func bower_componentsPaperCardGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-card/.gitignore"
	name := "bower_components/paper-card/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperCardTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsPaperCardTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-card/.travis.yml"
	name := "bower_components/paper-card/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperCardContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperCardContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-card/CONTRIBUTING.md"
	name := "bower_components/paper-card/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperCardReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperCardReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-card/README.md"
	name := "bower_components/paper-card/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperCardBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsPaperCardBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-card/bower.json"
	name := "bower_components/paper-card/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperCardDemoCafePng reads file data from disk. It returns an error on failure.
func bower_componentsPaperCardDemoCafePng() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-card/demo/cafe.png"
	name := "bower_components/paper-card/demo/cafe.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperCardDemoDonutsPng reads file data from disk. It returns an error on failure.
func bower_componentsPaperCardDemoDonutsPng() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-card/demo/donuts.png"
	name := "bower_components/paper-card/demo/donuts.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperCardDemoHousePng reads file data from disk. It returns an error on failure.
func bower_componentsPaperCardDemoHousePng() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-card/demo/house.png"
	name := "bower_components/paper-card/demo/house.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperCardDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperCardDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-card/demo/index.html"
	name := "bower_components/paper-card/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperCardDemoTravelPng reads file data from disk. It returns an error on failure.
func bower_componentsPaperCardDemoTravelPng() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-card/demo/travel.png"
	name := "bower_components/paper-card/demo/travel.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperCardDemoTripPng reads file data from disk. It returns an error on failure.
func bower_componentsPaperCardDemoTripPng() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-card/demo/trip.png"
	name := "bower_components/paper-card/demo/trip.png"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperCardIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperCardIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-card/index.html"
	name := "bower_components/paper-card/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperCardPaperCardHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperCardPaperCardHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-card/paper-card.html"
	name := "bower_components/paper-card/paper-card.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperCardTestBasicHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperCardTestBasicHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-card/test/basic.html"
	name := "bower_components/paper-card/test/basic.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperCardTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperCardTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-card/test/index.html"
	name := "bower_components/paper-card/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDrawerPanelBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsPaperDrawerPanelBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-drawer-panel/.bower.json"
	name := "bower_components/paper-drawer-panel/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDrawerPanelGitignore reads file data from disk. It returns an error on failure.
func bower_componentsPaperDrawerPanelGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-drawer-panel/.gitignore"
	name := "bower_components/paper-drawer-panel/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDrawerPanelTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsPaperDrawerPanelTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-drawer-panel/.travis.yml"
	name := "bower_components/paper-drawer-panel/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDrawerPanelContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperDrawerPanelContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-drawer-panel/CONTRIBUTING.md"
	name := "bower_components/paper-drawer-panel/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDrawerPanelReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperDrawerPanelReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-drawer-panel/README.md"
	name := "bower_components/paper-drawer-panel/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDrawerPanelBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsPaperDrawerPanelBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-drawer-panel/bower.json"
	name := "bower_components/paper-drawer-panel/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDrawerPanelDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperDrawerPanelDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-drawer-panel/demo/index.html"
	name := "bower_components/paper-drawer-panel/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDrawerPanelHeroSvg reads file data from disk. It returns an error on failure.
func bower_componentsPaperDrawerPanelHeroSvg() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-drawer-panel/hero.svg"
	name := "bower_components/paper-drawer-panel/hero.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDrawerPanelIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperDrawerPanelIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-drawer-panel/index.html"
	name := "bower_components/paper-drawer-panel/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDrawerPanelPaperDrawerPanelHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperDrawerPanelPaperDrawerPanelHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-drawer-panel/paper-drawer-panel.html"
	name := "bower_components/paper-drawer-panel/paper-drawer-panel.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDrawerPanelTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperDrawerPanelTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-drawer-panel/test/index.html"
	name := "bower_components/paper-drawer-panel/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDrawerPanelTestPositioningHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperDrawerPanelTestPositioningHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-drawer-panel/test/positioning.html"
	name := "bower_components/paper-drawer-panel/test/positioning.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDrawerPanelTestSmallDevicesHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperDrawerPanelTestSmallDevicesHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-drawer-panel/test/small-devices.html"
	name := "bower_components/paper-drawer-panel/test/small-devices.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDropdownMenuBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsPaperDropdownMenuBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-dropdown-menu/.bower.json"
	name := "bower_components/paper-dropdown-menu/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDropdownMenuGithubIssue_templateMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperDropdownMenuGithubIssue_templateMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-dropdown-menu/.github/ISSUE_TEMPLATE.md"
	name := "bower_components/paper-dropdown-menu/.github/ISSUE_TEMPLATE.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDropdownMenuGitignore reads file data from disk. It returns an error on failure.
func bower_componentsPaperDropdownMenuGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-dropdown-menu/.gitignore"
	name := "bower_components/paper-dropdown-menu/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDropdownMenuTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsPaperDropdownMenuTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-dropdown-menu/.travis.yml"
	name := "bower_components/paper-dropdown-menu/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDropdownMenuContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperDropdownMenuContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-dropdown-menu/CONTRIBUTING.md"
	name := "bower_components/paper-dropdown-menu/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDropdownMenuReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperDropdownMenuReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-dropdown-menu/README.md"
	name := "bower_components/paper-dropdown-menu/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDropdownMenuBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsPaperDropdownMenuBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-dropdown-menu/bower.json"
	name := "bower_components/paper-dropdown-menu/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDropdownMenuDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperDropdownMenuDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-dropdown-menu/demo/index.html"
	name := "bower_components/paper-dropdown-menu/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDropdownMenuIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperDropdownMenuIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-dropdown-menu/index.html"
	name := "bower_components/paper-dropdown-menu/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDropdownMenuPaperDropdownMenuIconsHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperDropdownMenuPaperDropdownMenuIconsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-dropdown-menu/paper-dropdown-menu-icons.html"
	name := "bower_components/paper-dropdown-menu/paper-dropdown-menu-icons.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDropdownMenuPaperDropdownMenuLightHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperDropdownMenuPaperDropdownMenuLightHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-dropdown-menu/paper-dropdown-menu-light.html"
	name := "bower_components/paper-dropdown-menu/paper-dropdown-menu-light.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDropdownMenuPaperDropdownMenuSharedStylesHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperDropdownMenuPaperDropdownMenuSharedStylesHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-dropdown-menu/paper-dropdown-menu-shared-styles.html"
	name := "bower_components/paper-dropdown-menu/paper-dropdown-menu-shared-styles.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDropdownMenuPaperDropdownMenuHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperDropdownMenuPaperDropdownMenuHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-dropdown-menu/paper-dropdown-menu.html"
	name := "bower_components/paper-dropdown-menu/paper-dropdown-menu.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDropdownMenuTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperDropdownMenuTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-dropdown-menu/test/index.html"
	name := "bower_components/paper-dropdown-menu/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDropdownMenuTestPaperDropdownMenuLightHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperDropdownMenuTestPaperDropdownMenuLightHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-dropdown-menu/test/paper-dropdown-menu-light.html"
	name := "bower_components/paper-dropdown-menu/test/paper-dropdown-menu-light.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperDropdownMenuTestPaperDropdownMenuHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperDropdownMenuTestPaperDropdownMenuHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-dropdown-menu/test/paper-dropdown-menu.html"
	name := "bower_components/paper-dropdown-menu/test/paper-dropdown-menu.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperHeaderPanelBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsPaperHeaderPanelBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-header-panel/.bower.json"
	name := "bower_components/paper-header-panel/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperHeaderPanelGitignore reads file data from disk. It returns an error on failure.
func bower_componentsPaperHeaderPanelGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-header-panel/.gitignore"
	name := "bower_components/paper-header-panel/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperHeaderPanelTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsPaperHeaderPanelTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-header-panel/.travis.yml"
	name := "bower_components/paper-header-panel/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperHeaderPanelContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperHeaderPanelContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-header-panel/CONTRIBUTING.md"
	name := "bower_components/paper-header-panel/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperHeaderPanelReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperHeaderPanelReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-header-panel/README.md"
	name := "bower_components/paper-header-panel/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperHeaderPanelBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsPaperHeaderPanelBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-header-panel/bower.json"
	name := "bower_components/paper-header-panel/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperHeaderPanelDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperHeaderPanelDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-header-panel/demo/index.html"
	name := "bower_components/paper-header-panel/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperHeaderPanelHeroSvg reads file data from disk. It returns an error on failure.
func bower_componentsPaperHeaderPanelHeroSvg() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-header-panel/hero.svg"
	name := "bower_components/paper-header-panel/hero.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperHeaderPanelIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperHeaderPanelIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-header-panel/index.html"
	name := "bower_components/paper-header-panel/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperHeaderPanelPaperHeaderPanelHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperHeaderPanelPaperHeaderPanelHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-header-panel/paper-header-panel.html"
	name := "bower_components/paper-header-panel/paper-header-panel.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperHeaderPanelTestBasicHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperHeaderPanelTestBasicHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-header-panel/test/basic.html"
	name := "bower_components/paper-header-panel/test/basic.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperHeaderPanelTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperHeaderPanelTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-header-panel/test/index.html"
	name := "bower_components/paper-header-panel/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperIconButtonBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsPaperIconButtonBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-icon-button/.bower.json"
	name := "bower_components/paper-icon-button/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperIconButtonGitignore reads file data from disk. It returns an error on failure.
func bower_componentsPaperIconButtonGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-icon-button/.gitignore"
	name := "bower_components/paper-icon-button/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperIconButtonTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsPaperIconButtonTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-icon-button/.travis.yml"
	name := "bower_components/paper-icon-button/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperIconButtonContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperIconButtonContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-icon-button/CONTRIBUTING.md"
	name := "bower_components/paper-icon-button/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperIconButtonReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperIconButtonReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-icon-button/README.md"
	name := "bower_components/paper-icon-button/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperIconButtonBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsPaperIconButtonBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-icon-button/bower.json"
	name := "bower_components/paper-icon-button/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperIconButtonDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperIconButtonDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-icon-button/demo/index.html"
	name := "bower_components/paper-icon-button/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperIconButtonIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperIconButtonIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-icon-button/index.html"
	name := "bower_components/paper-icon-button/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperIconButtonPaperIconButtonHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperIconButtonPaperIconButtonHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-icon-button/paper-icon-button.html"
	name := "bower_components/paper-icon-button/paper-icon-button.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperIconButtonTestA11yHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperIconButtonTestA11yHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-icon-button/test/a11y.html"
	name := "bower_components/paper-icon-button/test/a11y.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperIconButtonTestBasicHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperIconButtonTestBasicHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-icon-button/test/basic.html"
	name := "bower_components/paper-icon-button/test/basic.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperIconButtonTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperIconButtonTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-icon-button/test/index.html"
	name := "bower_components/paper-icon-button/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/.bower.json"
	name := "bower_components/paper-input/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputGithubIssue_templateMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputGithubIssue_templateMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/.github/ISSUE_TEMPLATE.md"
	name := "bower_components/paper-input/.github/ISSUE_TEMPLATE.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputGitignore reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/.gitignore"
	name := "bower_components/paper-input/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/.travis.yml"
	name := "bower_components/paper-input/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/CONTRIBUTING.md"
	name := "bower_components/paper-input/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/README.md"
	name := "bower_components/paper-input/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputAllImportsHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputAllImportsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/all-imports.html"
	name := "bower_components/paper-input/all-imports.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/bower.json"
	name := "bower_components/paper-input/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/demo/index.html"
	name := "bower_components/paper-input/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputDemoSsnInputHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputDemoSsnInputHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/demo/ssn-input.html"
	name := "bower_components/paper-input/demo/ssn-input.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputDemoSsnValidatorHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputDemoSsnValidatorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/demo/ssn-validator.html"
	name := "bower_components/paper-input/demo/ssn-validator.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputHeroSvg reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputHeroSvg() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/hero.svg"
	name := "bower_components/paper-input/hero.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/index.html"
	name := "bower_components/paper-input/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputPaperInputAddonBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputPaperInputAddonBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/paper-input-addon-behavior.html"
	name := "bower_components/paper-input/paper-input-addon-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputPaperInputBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputPaperInputBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/paper-input-behavior.html"
	name := "bower_components/paper-input/paper-input-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputPaperInputCharCounterHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputPaperInputCharCounterHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/paper-input-char-counter.html"
	name := "bower_components/paper-input/paper-input-char-counter.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputPaperInputContainerHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputPaperInputContainerHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/paper-input-container.html"
	name := "bower_components/paper-input/paper-input-container.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputPaperInputErrorHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputPaperInputErrorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/paper-input-error.html"
	name := "bower_components/paper-input/paper-input-error.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputPaperInputHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputPaperInputHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/paper-input.html"
	name := "bower_components/paper-input/paper-input.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputPaperTextareaHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputPaperTextareaHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/paper-textarea.html"
	name := "bower_components/paper-input/paper-textarea.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/test/index.html"
	name := "bower_components/paper-input/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputTestLettersOnlyHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputTestLettersOnlyHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/test/letters-only.html"
	name := "bower_components/paper-input/test/letters-only.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputTestPaperInputCharCounterHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputTestPaperInputCharCounterHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/test/paper-input-char-counter.html"
	name := "bower_components/paper-input/test/paper-input-char-counter.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputTestPaperInputContainerHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputTestPaperInputContainerHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/test/paper-input-container.html"
	name := "bower_components/paper-input/test/paper-input-container.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputTestPaperInputErrorHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputTestPaperInputErrorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/test/paper-input-error.html"
	name := "bower_components/paper-input/test/paper-input-error.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputTestPaperInputHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputTestPaperInputHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/test/paper-input.html"
	name := "bower_components/paper-input/test/paper-input.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperInputTestPaperTextareaHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperInputTestPaperTextareaHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-input/test/paper-textarea.html"
	name := "bower_components/paper-input/test/paper-textarea.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperItemBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsPaperItemBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-item/.bower.json"
	name := "bower_components/paper-item/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperItemGitignore reads file data from disk. It returns an error on failure.
func bower_componentsPaperItemGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-item/.gitignore"
	name := "bower_components/paper-item/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperItemTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsPaperItemTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-item/.travis.yml"
	name := "bower_components/paper-item/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperItemContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperItemContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-item/CONTRIBUTING.md"
	name := "bower_components/paper-item/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperItemReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperItemReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-item/README.md"
	name := "bower_components/paper-item/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperItemAllImportsHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperItemAllImportsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-item/all-imports.html"
	name := "bower_components/paper-item/all-imports.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperItemBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsPaperItemBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-item/bower.json"
	name := "bower_components/paper-item/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperItemDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperItemDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-item/demo/index.html"
	name := "bower_components/paper-item/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperItemIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperItemIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-item/index.html"
	name := "bower_components/paper-item/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperItemPaperIconItemHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperItemPaperIconItemHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-item/paper-icon-item.html"
	name := "bower_components/paper-item/paper-icon-item.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperItemPaperItemBehaviorHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperItemPaperItemBehaviorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-item/paper-item-behavior.html"
	name := "bower_components/paper-item/paper-item-behavior.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperItemPaperItemBodyHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperItemPaperItemBodyHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-item/paper-item-body.html"
	name := "bower_components/paper-item/paper-item-body.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperItemPaperItemSharedStylesHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperItemPaperItemSharedStylesHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-item/paper-item-shared-styles.html"
	name := "bower_components/paper-item/paper-item-shared-styles.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperItemPaperItemHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperItemPaperItemHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-item/paper-item.html"
	name := "bower_components/paper-item/paper-item.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperItemTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperItemTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-item/test/index.html"
	name := "bower_components/paper-item/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperItemTestPaperItemHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperItemTestPaperItemHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-item/test/paper-item.html"
	name := "bower_components/paper-item/test/paper-item.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMaterialBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsPaperMaterialBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-material/.bower.json"
	name := "bower_components/paper-material/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMaterialGitignore reads file data from disk. It returns an error on failure.
func bower_componentsPaperMaterialGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-material/.gitignore"
	name := "bower_components/paper-material/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMaterialTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsPaperMaterialTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-material/.travis.yml"
	name := "bower_components/paper-material/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMaterialContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperMaterialContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-material/CONTRIBUTING.md"
	name := "bower_components/paper-material/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMaterialReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperMaterialReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-material/README.md"
	name := "bower_components/paper-material/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMaterialBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsPaperMaterialBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-material/bower.json"
	name := "bower_components/paper-material/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMaterialDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperMaterialDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-material/demo/index.html"
	name := "bower_components/paper-material/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMaterialIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperMaterialIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-material/index.html"
	name := "bower_components/paper-material/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMaterialPaperMaterialSharedStylesHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperMaterialPaperMaterialSharedStylesHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-material/paper-material-shared-styles.html"
	name := "bower_components/paper-material/paper-material-shared-styles.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMaterialPaperMaterialHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperMaterialPaperMaterialHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-material/paper-material.html"
	name := "bower_components/paper-material/paper-material.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMaterialTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperMaterialTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-material/test/index.html"
	name := "bower_components/paper-material/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMaterialTestPaperMaterialHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperMaterialTestPaperMaterialHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-material/test/paper-material.html"
	name := "bower_components/paper-material/test/paper-material.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMenuButtonBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsPaperMenuButtonBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-menu-button/.bower.json"
	name := "bower_components/paper-menu-button/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMenuButtonGithubIssue_templateMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperMenuButtonGithubIssue_templateMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-menu-button/.github/ISSUE_TEMPLATE.md"
	name := "bower_components/paper-menu-button/.github/ISSUE_TEMPLATE.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMenuButtonGitignore reads file data from disk. It returns an error on failure.
func bower_componentsPaperMenuButtonGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-menu-button/.gitignore"
	name := "bower_components/paper-menu-button/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMenuButtonTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsPaperMenuButtonTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-menu-button/.travis.yml"
	name := "bower_components/paper-menu-button/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMenuButtonContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperMenuButtonContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-menu-button/CONTRIBUTING.md"
	name := "bower_components/paper-menu-button/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMenuButtonReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperMenuButtonReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-menu-button/README.md"
	name := "bower_components/paper-menu-button/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMenuButtonBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsPaperMenuButtonBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-menu-button/bower.json"
	name := "bower_components/paper-menu-button/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMenuButtonDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperMenuButtonDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-menu-button/demo/index.html"
	name := "bower_components/paper-menu-button/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMenuButtonHeroSvg reads file data from disk. It returns an error on failure.
func bower_componentsPaperMenuButtonHeroSvg() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-menu-button/hero.svg"
	name := "bower_components/paper-menu-button/hero.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMenuButtonIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperMenuButtonIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-menu-button/index.html"
	name := "bower_components/paper-menu-button/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMenuButtonPaperMenuButtonAnimationsHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperMenuButtonPaperMenuButtonAnimationsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-menu-button/paper-menu-button-animations.html"
	name := "bower_components/paper-menu-button/paper-menu-button-animations.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMenuButtonPaperMenuButtonHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperMenuButtonPaperMenuButtonHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-menu-button/paper-menu-button.html"
	name := "bower_components/paper-menu-button/paper-menu-button.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMenuButtonTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperMenuButtonTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-menu-button/test/index.html"
	name := "bower_components/paper-menu-button/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperMenuButtonTestPaperMenuButtonHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperMenuButtonTestPaperMenuButtonHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-menu-button/test/paper-menu-button.html"
	name := "bower_components/paper-menu-button/test/paper-menu-button.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperRippleBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsPaperRippleBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-ripple/.bower.json"
	name := "bower_components/paper-ripple/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperRippleGitignore reads file data from disk. It returns an error on failure.
func bower_componentsPaperRippleGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-ripple/.gitignore"
	name := "bower_components/paper-ripple/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperRippleTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsPaperRippleTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-ripple/.travis.yml"
	name := "bower_components/paper-ripple/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperRippleContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperRippleContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-ripple/CONTRIBUTING.md"
	name := "bower_components/paper-ripple/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperRippleReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperRippleReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-ripple/README.md"
	name := "bower_components/paper-ripple/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperRippleBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsPaperRippleBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-ripple/bower.json"
	name := "bower_components/paper-ripple/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperRippleDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperRippleDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-ripple/demo/index.html"
	name := "bower_components/paper-ripple/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperRippleHeroSvg reads file data from disk. It returns an error on failure.
func bower_componentsPaperRippleHeroSvg() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-ripple/hero.svg"
	name := "bower_components/paper-ripple/hero.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperRippleIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperRippleIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-ripple/index.html"
	name := "bower_components/paper-ripple/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperRipplePaperRippleHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperRipplePaperRippleHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-ripple/paper-ripple.html"
	name := "bower_components/paper-ripple/paper-ripple.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperRippleTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperRippleTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-ripple/test/index.html"
	name := "bower_components/paper-ripple/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperRippleTestPaperRippleHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperRippleTestPaperRippleHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-ripple/test/paper-ripple.html"
	name := "bower_components/paper-ripple/test/paper-ripple.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/.bower.json"
	name := "bower_components/paper-styles/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/CONTRIBUTING.md"
	name := "bower_components/paper-styles/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/README.md"
	name := "bower_components/paper-styles/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/bower.json"
	name := "bower_components/paper-styles/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesClassesGlobalHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesClassesGlobalHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/classes/global.html"
	name := "bower_components/paper-styles/classes/global.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesClassesShadowLayoutHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesClassesShadowLayoutHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/classes/shadow-layout.html"
	name := "bower_components/paper-styles/classes/shadow-layout.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesClassesShadowHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesClassesShadowHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/classes/shadow.html"
	name := "bower_components/paper-styles/classes/shadow.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesClassesTypographyHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesClassesTypographyHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/classes/typography.html"
	name := "bower_components/paper-styles/classes/typography.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesColorHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesColorHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/color.html"
	name := "bower_components/paper-styles/color.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesDefaultThemeHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesDefaultThemeHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/default-theme.html"
	name := "bower_components/paper-styles/default-theme.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/demo/index.html"
	name := "bower_components/paper-styles/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesDemoPagesHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesDemoPagesHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/demo-pages.html"
	name := "bower_components/paper-styles/demo-pages.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesDemoCss reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesDemoCss() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/demo.css"
	name := "bower_components/paper-styles/demo.css"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/index.html"
	name := "bower_components/paper-styles/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesPaperStylesClassesHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesPaperStylesClassesHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/paper-styles-classes.html"
	name := "bower_components/paper-styles/paper-styles-classes.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesPaperStylesHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesPaperStylesHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/paper-styles.html"
	name := "bower_components/paper-styles/paper-styles.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesShadowHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesShadowHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/shadow.html"
	name := "bower_components/paper-styles/shadow.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperStylesTypographyHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperStylesTypographyHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-styles/typography.html"
	name := "bower_components/paper-styles/typography.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperTabsBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsPaperTabsBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-tabs/.bower.json"
	name := "bower_components/paper-tabs/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperTabsGitignore reads file data from disk. It returns an error on failure.
func bower_componentsPaperTabsGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-tabs/.gitignore"
	name := "bower_components/paper-tabs/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperTabsTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsPaperTabsTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-tabs/.travis.yml"
	name := "bower_components/paper-tabs/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperTabsContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperTabsContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-tabs/CONTRIBUTING.md"
	name := "bower_components/paper-tabs/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperTabsReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperTabsReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-tabs/README.md"
	name := "bower_components/paper-tabs/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperTabsBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsPaperTabsBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-tabs/bower.json"
	name := "bower_components/paper-tabs/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperTabsDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperTabsDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-tabs/demo/index.html"
	name := "bower_components/paper-tabs/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperTabsHeroSvg reads file data from disk. It returns an error on failure.
func bower_componentsPaperTabsHeroSvg() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-tabs/hero.svg"
	name := "bower_components/paper-tabs/hero.svg"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperTabsIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperTabsIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-tabs/index.html"
	name := "bower_components/paper-tabs/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperTabsPaperTabHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperTabsPaperTabHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-tabs/paper-tab.html"
	name := "bower_components/paper-tabs/paper-tab.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperTabsPaperTabsIconsHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperTabsPaperTabsIconsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-tabs/paper-tabs-icons.html"
	name := "bower_components/paper-tabs/paper-tabs-icons.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperTabsPaperTabsHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperTabsPaperTabsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-tabs/paper-tabs.html"
	name := "bower_components/paper-tabs/paper-tabs.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperTabsTestAttrForSelectedHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperTabsTestAttrForSelectedHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-tabs/test/attr-for-selected.html"
	name := "bower_components/paper-tabs/test/attr-for-selected.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperTabsTestBasicHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperTabsTestBasicHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-tabs/test/basic.html"
	name := "bower_components/paper-tabs/test/basic.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperTabsTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperTabsTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-tabs/test/index.html"
	name := "bower_components/paper-tabs/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperToolbarBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsPaperToolbarBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-toolbar/.bower.json"
	name := "bower_components/paper-toolbar/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperToolbarGitignore reads file data from disk. It returns an error on failure.
func bower_componentsPaperToolbarGitignore() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-toolbar/.gitignore"
	name := "bower_components/paper-toolbar/.gitignore"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperToolbarTravisYml reads file data from disk. It returns an error on failure.
func bower_componentsPaperToolbarTravisYml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-toolbar/.travis.yml"
	name := "bower_components/paper-toolbar/.travis.yml"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperToolbarContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperToolbarContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-toolbar/CONTRIBUTING.md"
	name := "bower_components/paper-toolbar/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperToolbarReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsPaperToolbarReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-toolbar/README.md"
	name := "bower_components/paper-toolbar/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperToolbarBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsPaperToolbarBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-toolbar/bower.json"
	name := "bower_components/paper-toolbar/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperToolbarDemoIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperToolbarDemoIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-toolbar/demo/index.html"
	name := "bower_components/paper-toolbar/demo/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperToolbarIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperToolbarIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-toolbar/index.html"
	name := "bower_components/paper-toolbar/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperToolbarPaperToolbarHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperToolbarPaperToolbarHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-toolbar/paper-toolbar.html"
	name := "bower_components/paper-toolbar/paper-toolbar.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperToolbarTestIndexHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperToolbarTestIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-toolbar/test/index.html"
	name := "bower_components/paper-toolbar/test/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPaperToolbarTestPaperToolbarHtml reads file data from disk. It returns an error on failure.
func bower_componentsPaperToolbarTestPaperToolbarHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/paper-toolbar/test/paper-toolbar.html"
	name := "bower_components/paper-toolbar/test/paper-toolbar.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPolymerBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsPolymerBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/polymer/.bower.json"
	name := "bower_components/polymer/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPolymerLicenseTxt reads file data from disk. It returns an error on failure.
func bower_componentsPolymerLicenseTxt() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/polymer/LICENSE.txt"
	name := "bower_components/polymer/LICENSE.txt"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPolymerBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsPolymerBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/polymer/bower.json"
	name := "bower_components/polymer/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPolymerBuildLog reads file data from disk. It returns an error on failure.
func bower_componentsPolymerBuildLog() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/polymer/build.log"
	name := "bower_components/polymer/build.log"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPolymerPolymerMicroHtml reads file data from disk. It returns an error on failure.
func bower_componentsPolymerPolymerMicroHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/polymer/polymer-micro.html"
	name := "bower_components/polymer/polymer-micro.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPolymerPolymerMiniHtml reads file data from disk. It returns an error on failure.
func bower_componentsPolymerPolymerMiniHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/polymer/polymer-mini.html"
	name := "bower_components/polymer/polymer-mini.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPolymerPolymerHtml reads file data from disk. It returns an error on failure.
func bower_componentsPolymerPolymerHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/polymer/polymer.html"
	name := "bower_components/polymer/polymer.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPromisePolyfillBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsPromisePolyfillBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/promise-polyfill/.bower.json"
	name := "bower_components/promise-polyfill/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPromisePolyfillGruntfileJs reads file data from disk. It returns an error on failure.
func bower_componentsPromisePolyfillGruntfileJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/promise-polyfill/Gruntfile.js"
	name := "bower_components/promise-polyfill/Gruntfile.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPromisePolyfillLicense reads file data from disk. It returns an error on failure.
func bower_componentsPromisePolyfillLicense() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/promise-polyfill/LICENSE"
	name := "bower_components/promise-polyfill/LICENSE"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPromisePolyfillPromiseStaticsJs reads file data from disk. It returns an error on failure.
func bower_componentsPromisePolyfillPromiseStaticsJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/promise-polyfill/Promise-Statics.js"
	name := "bower_components/promise-polyfill/Promise-Statics.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPromisePolyfillPromiseJs reads file data from disk. It returns an error on failure.
func bower_componentsPromisePolyfillPromiseJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/promise-polyfill/Promise.js"
	name := "bower_components/promise-polyfill/Promise.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPromisePolyfillPromiseMinJs reads file data from disk. It returns an error on failure.
func bower_componentsPromisePolyfillPromiseMinJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/promise-polyfill/Promise.min.js"
	name := "bower_components/promise-polyfill/Promise.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPromisePolyfillReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsPromisePolyfillReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/promise-polyfill/README.md"
	name := "bower_components/promise-polyfill/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPromisePolyfillBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsPromisePolyfillBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/promise-polyfill/bower.json"
	name := "bower_components/promise-polyfill/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPromisePolyfillPackageJson reads file data from disk. It returns an error on failure.
func bower_componentsPromisePolyfillPackageJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/promise-polyfill/package.json"
	name := "bower_components/promise-polyfill/package.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPromisePolyfillPromisePolyfillLiteHtml reads file data from disk. It returns an error on failure.
func bower_componentsPromisePolyfillPromisePolyfillLiteHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/promise-polyfill/promise-polyfill-lite.html"
	name := "bower_components/promise-polyfill/promise-polyfill-lite.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsPromisePolyfillPromisePolyfillHtml reads file data from disk. It returns an error on failure.
func bower_componentsPromisePolyfillPromisePolyfillHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/promise-polyfill/promise-polyfill.html"
	name := "bower_components/promise-polyfill/promise-polyfill.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebAnimationsJsBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsWebAnimationsJsBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/web-animations-js/.bower.json"
	name := "bower_components/web-animations-js/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebAnimationsJsContributingMd reads file data from disk. It returns an error on failure.
func bower_componentsWebAnimationsJsContributingMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/web-animations-js/CONTRIBUTING.md"
	name := "bower_components/web-animations-js/CONTRIBUTING.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebAnimationsJsCopying reads file data from disk. It returns an error on failure.
func bower_componentsWebAnimationsJsCopying() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/web-animations-js/COPYING"
	name := "bower_components/web-animations-js/COPYING"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebAnimationsJsHistoryMd reads file data from disk. It returns an error on failure.
func bower_componentsWebAnimationsJsHistoryMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/web-animations-js/History.md"
	name := "bower_components/web-animations-js/History.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebAnimationsJsReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsWebAnimationsJsReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/web-animations-js/README.md"
	name := "bower_components/web-animations-js/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebAnimationsJsBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsWebAnimationsJsBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/web-animations-js/bower.json"
	name := "bower_components/web-animations-js/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebAnimationsJsWebAnimationsNextLiteMinJs reads file data from disk. It returns an error on failure.
func bower_componentsWebAnimationsJsWebAnimationsNextLiteMinJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/web-animations-js/web-animations-next-lite.min.js"
	name := "bower_components/web-animations-js/web-animations-next-lite.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebAnimationsJsWebAnimationsNextLiteMinJsMap reads file data from disk. It returns an error on failure.
func bower_componentsWebAnimationsJsWebAnimationsNextLiteMinJsMap() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/web-animations-js/web-animations-next-lite.min.js.map"
	name := "bower_components/web-animations-js/web-animations-next-lite.min.js.map"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebAnimationsJsWebAnimationsNextMinJs reads file data from disk. It returns an error on failure.
func bower_componentsWebAnimationsJsWebAnimationsNextMinJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/web-animations-js/web-animations-next.min.js"
	name := "bower_components/web-animations-js/web-animations-next.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebAnimationsJsWebAnimationsNextMinJsMap reads file data from disk. It returns an error on failure.
func bower_componentsWebAnimationsJsWebAnimationsNextMinJsMap() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/web-animations-js/web-animations-next.min.js.map"
	name := "bower_components/web-animations-js/web-animations-next.min.js.map"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebAnimationsJsWebAnimationsHtml reads file data from disk. It returns an error on failure.
func bower_componentsWebAnimationsJsWebAnimationsHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/web-animations-js/web-animations.html"
	name := "bower_components/web-animations-js/web-animations.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebAnimationsJsWebAnimationsMinJs reads file data from disk. It returns an error on failure.
func bower_componentsWebAnimationsJsWebAnimationsMinJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/web-animations-js/web-animations.min.js"
	name := "bower_components/web-animations-js/web-animations.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebAnimationsJsWebAnimationsMinJsMap reads file data from disk. It returns an error on failure.
func bower_componentsWebAnimationsJsWebAnimationsMinJsMap() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/web-animations-js/web-animations.min.js.map"
	name := "bower_components/web-animations-js/web-animations.min.js.map"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebcomponentsjsBowerJson reads file data from disk. It returns an error on failure.
func bower_componentsWebcomponentsjsBowerJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/webcomponentsjs/.bower.json"
	name := "bower_components/webcomponentsjs/.bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebcomponentsjsCustomelementsJs reads file data from disk. It returns an error on failure.
func bower_componentsWebcomponentsjsCustomelementsJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/webcomponentsjs/CustomElements.js"
	name := "bower_components/webcomponentsjs/CustomElements.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebcomponentsjsCustomelementsMinJs reads file data from disk. It returns an error on failure.
func bower_componentsWebcomponentsjsCustomelementsMinJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/webcomponentsjs/CustomElements.min.js"
	name := "bower_components/webcomponentsjs/CustomElements.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebcomponentsjsHtmlimportsJs reads file data from disk. It returns an error on failure.
func bower_componentsWebcomponentsjsHtmlimportsJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/webcomponentsjs/HTMLImports.js"
	name := "bower_components/webcomponentsjs/HTMLImports.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebcomponentsjsHtmlimportsMinJs reads file data from disk. It returns an error on failure.
func bower_componentsWebcomponentsjsHtmlimportsMinJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/webcomponentsjs/HTMLImports.min.js"
	name := "bower_components/webcomponentsjs/HTMLImports.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebcomponentsjsMutationobserverJs reads file data from disk. It returns an error on failure.
func bower_componentsWebcomponentsjsMutationobserverJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/webcomponentsjs/MutationObserver.js"
	name := "bower_components/webcomponentsjs/MutationObserver.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebcomponentsjsMutationobserverMinJs reads file data from disk. It returns an error on failure.
func bower_componentsWebcomponentsjsMutationobserverMinJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/webcomponentsjs/MutationObserver.min.js"
	name := "bower_components/webcomponentsjs/MutationObserver.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebcomponentsjsReadmeMd reads file data from disk. It returns an error on failure.
func bower_componentsWebcomponentsjsReadmeMd() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/webcomponentsjs/README.md"
	name := "bower_components/webcomponentsjs/README.md"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebcomponentsjsShadowdomJs reads file data from disk. It returns an error on failure.
func bower_componentsWebcomponentsjsShadowdomJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/webcomponentsjs/ShadowDOM.js"
	name := "bower_components/webcomponentsjs/ShadowDOM.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebcomponentsjsShadowdomMinJs reads file data from disk. It returns an error on failure.
func bower_componentsWebcomponentsjsShadowdomMinJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/webcomponentsjs/ShadowDOM.min.js"
	name := "bower_components/webcomponentsjs/ShadowDOM.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebcomponentsjsBowerJson2 reads file data from disk. It returns an error on failure.
func bower_componentsWebcomponentsjsBowerJson2() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/webcomponentsjs/bower.json"
	name := "bower_components/webcomponentsjs/bower.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebcomponentsjsBuildLog reads file data from disk. It returns an error on failure.
func bower_componentsWebcomponentsjsBuildLog() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/webcomponentsjs/build.log"
	name := "bower_components/webcomponentsjs/build.log"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebcomponentsjsPackageJson reads file data from disk. It returns an error on failure.
func bower_componentsWebcomponentsjsPackageJson() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/webcomponentsjs/package.json"
	name := "bower_components/webcomponentsjs/package.json"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebcomponentsjsWebcomponentsLiteJs reads file data from disk. It returns an error on failure.
func bower_componentsWebcomponentsjsWebcomponentsLiteJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/webcomponentsjs/webcomponents-lite.js"
	name := "bower_components/webcomponentsjs/webcomponents-lite.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebcomponentsjsWebcomponentsLiteMinJs reads file data from disk. It returns an error on failure.
func bower_componentsWebcomponentsjsWebcomponentsLiteMinJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/webcomponentsjs/webcomponents-lite.min.js"
	name := "bower_components/webcomponentsjs/webcomponents-lite.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebcomponentsjsWebcomponentsJs reads file data from disk. It returns an error on failure.
func bower_componentsWebcomponentsjsWebcomponentsJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/webcomponentsjs/webcomponents.js"
	name := "bower_components/webcomponentsjs/webcomponents.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// bower_componentsWebcomponentsjsWebcomponentsMinJs reads file data from disk. It returns an error on failure.
func bower_componentsWebcomponentsjsWebcomponentsMinJs() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/bower_components/webcomponentsjs/webcomponents.min.js"
	name := "bower_components/webcomponentsjs/webcomponents.min.js"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// pagesAlertHtml reads file data from disk. It returns an error on failure.
func pagesAlertHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/pages/alert.html"
	name := "pages/alert.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// pagesIndexHtml reads file data from disk. It returns an error on failure.
func pagesIndexHtml() (*asset, error) {
	path := "/home/johan/go/src/github.com/johansundell/clashclient/pages/index.html"
	name := "pages/index.html"
	bytes, err := bindataRead(path, name)
	if err != nil {
		return nil, err
	}

	fi, err := os.Stat(path)
	if err != nil {
		err = fmt.Errorf("Error reading asset info %s at %s: %v", name, path, err)
	}

	a := &asset{bytes: bytes, info: fi}
	return a, err
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"tmpl/clan-errors.html": tmplClanErrorsHtml,
	"tmpl/clan-info.html": tmplClanInfoHtml,
	"tmpl/test.html": tmplTestHtml,
	"tmpl/test.txt": tmplTestTxt,
	"bower_components/font-roboto/.bower.json": bower_componentsFontRobotoBowerJson,
	"bower_components/font-roboto/README.md": bower_componentsFontRobotoReadmeMd,
	"bower_components/font-roboto/bower.json": bower_componentsFontRobotoBowerJson2,
	"bower_components/font-roboto/roboto.html": bower_componentsFontRobotoRobotoHtml,
	"bower_components/iron-a11y-announcer/.bower.json": bower_componentsIronA11yAnnouncerBowerJson,
	"bower_components/iron-a11y-announcer/.github/ISSUE_TEMPLATE.md": bower_componentsIronA11yAnnouncerGithubIssue_templateMd,
	"bower_components/iron-a11y-announcer/.gitignore": bower_componentsIronA11yAnnouncerGitignore,
	"bower_components/iron-a11y-announcer/.travis.yml": bower_componentsIronA11yAnnouncerTravisYml,
	"bower_components/iron-a11y-announcer/CONTRIBUTING.md": bower_componentsIronA11yAnnouncerContributingMd,
	"bower_components/iron-a11y-announcer/README.md": bower_componentsIronA11yAnnouncerReadmeMd,
	"bower_components/iron-a11y-announcer/bower.json": bower_componentsIronA11yAnnouncerBowerJson2,
	"bower_components/iron-a11y-announcer/demo/index.html": bower_componentsIronA11yAnnouncerDemoIndexHtml,
	"bower_components/iron-a11y-announcer/demo/x-announces.html": bower_componentsIronA11yAnnouncerDemoXAnnouncesHtml,
	"bower_components/iron-a11y-announcer/index.html": bower_componentsIronA11yAnnouncerIndexHtml,
	"bower_components/iron-a11y-announcer/iron-a11y-announcer.html": bower_componentsIronA11yAnnouncerIronA11yAnnouncerHtml,
	"bower_components/iron-a11y-announcer/test/index.html": bower_componentsIronA11yAnnouncerTestIndexHtml,
	"bower_components/iron-a11y-announcer/test/iron-a11y-announcer.html": bower_componentsIronA11yAnnouncerTestIronA11yAnnouncerHtml,
	"bower_components/iron-a11y-keys-behavior/.bower.json": bower_componentsIronA11yKeysBehaviorBowerJson,
	"bower_components/iron-a11y-keys-behavior/.gitignore": bower_componentsIronA11yKeysBehaviorGitignore,
	"bower_components/iron-a11y-keys-behavior/.travis.yml": bower_componentsIronA11yKeysBehaviorTravisYml,
	"bower_components/iron-a11y-keys-behavior/CONTRIBUTING.md": bower_componentsIronA11yKeysBehaviorContributingMd,
	"bower_components/iron-a11y-keys-behavior/README.md": bower_componentsIronA11yKeysBehaviorReadmeMd,
	"bower_components/iron-a11y-keys-behavior/bower.json": bower_componentsIronA11yKeysBehaviorBowerJson2,
	"bower_components/iron-a11y-keys-behavior/demo/index.html": bower_componentsIronA11yKeysBehaviorDemoIndexHtml,
	"bower_components/iron-a11y-keys-behavior/demo/x-key-aware.html": bower_componentsIronA11yKeysBehaviorDemoXKeyAwareHtml,
	"bower_components/iron-a11y-keys-behavior/index.html": bower_componentsIronA11yKeysBehaviorIndexHtml,
	"bower_components/iron-a11y-keys-behavior/iron-a11y-keys-behavior.html": bower_componentsIronA11yKeysBehaviorIronA11yKeysBehaviorHtml,
	"bower_components/iron-a11y-keys-behavior/test/basic-test.html": bower_componentsIronA11yKeysBehaviorTestBasicTestHtml,
	"bower_components/iron-a11y-keys-behavior/test/index.html": bower_componentsIronA11yKeysBehaviorTestIndexHtml,
	"bower_components/iron-ajax/.bower.json": bower_componentsIronAjaxBowerJson,
	"bower_components/iron-ajax/.github/ISSUE_TEMPLATE.md": bower_componentsIronAjaxGithubIssue_templateMd,
	"bower_components/iron-ajax/.gitignore": bower_componentsIronAjaxGitignore,
	"bower_components/iron-ajax/.travis.yml": bower_componentsIronAjaxTravisYml,
	"bower_components/iron-ajax/CONTRIBUTING.md": bower_componentsIronAjaxContributingMd,
	"bower_components/iron-ajax/README.md": bower_componentsIronAjaxReadmeMd,
	"bower_components/iron-ajax/bower.json": bower_componentsIronAjaxBowerJson2,
	"bower_components/iron-ajax/demo/index.html": bower_componentsIronAjaxDemoIndexHtml,
	"bower_components/iron-ajax/hero.svg": bower_componentsIronAjaxHeroSvg,
	"bower_components/iron-ajax/index.html": bower_componentsIronAjaxIndexHtml,
	"bower_components/iron-ajax/iron-ajax.html": bower_componentsIronAjaxIronAjaxHtml,
	"bower_components/iron-ajax/iron-request.html": bower_componentsIronAjaxIronRequestHtml,
	"bower_components/iron-ajax/test/index.html": bower_componentsIronAjaxTestIndexHtml,
	"bower_components/iron-ajax/test/iron-ajax.html": bower_componentsIronAjaxTestIronAjaxHtml,
	"bower_components/iron-ajax/test/iron-request.html": bower_componentsIronAjaxTestIronRequestHtml,
	"bower_components/iron-autogrow-textarea/.bower.json": bower_componentsIronAutogrowTextareaBowerJson,
	"bower_components/iron-autogrow-textarea/.github/ISSUE_TEMPLATE.md": bower_componentsIronAutogrowTextareaGithubIssue_templateMd,
	"bower_components/iron-autogrow-textarea/.gitignore": bower_componentsIronAutogrowTextareaGitignore,
	"bower_components/iron-autogrow-textarea/.travis.yml": bower_componentsIronAutogrowTextareaTravisYml,
	"bower_components/iron-autogrow-textarea/CONTRIBUTING.md": bower_componentsIronAutogrowTextareaContributingMd,
	"bower_components/iron-autogrow-textarea/README.md": bower_componentsIronAutogrowTextareaReadmeMd,
	"bower_components/iron-autogrow-textarea/bower.json": bower_componentsIronAutogrowTextareaBowerJson2,
	"bower_components/iron-autogrow-textarea/demo/index.html": bower_componentsIronAutogrowTextareaDemoIndexHtml,
	"bower_components/iron-autogrow-textarea/hero.svg": bower_componentsIronAutogrowTextareaHeroSvg,
	"bower_components/iron-autogrow-textarea/index.html": bower_componentsIronAutogrowTextareaIndexHtml,
	"bower_components/iron-autogrow-textarea/iron-autogrow-textarea.html": bower_componentsIronAutogrowTextareaIronAutogrowTextareaHtml,
	"bower_components/iron-autogrow-textarea/test/basic.html": bower_componentsIronAutogrowTextareaTestBasicHtml,
	"bower_components/iron-autogrow-textarea/test/index.html": bower_componentsIronAutogrowTextareaTestIndexHtml,
	"bower_components/iron-behaviors/.bower.json": bower_componentsIronBehaviorsBowerJson,
	"bower_components/iron-behaviors/.gitignore": bower_componentsIronBehaviorsGitignore,
	"bower_components/iron-behaviors/.travis.yml": bower_componentsIronBehaviorsTravisYml,
	"bower_components/iron-behaviors/CONTRIBUTING.md": bower_componentsIronBehaviorsContributingMd,
	"bower_components/iron-behaviors/README.md": bower_componentsIronBehaviorsReadmeMd,
	"bower_components/iron-behaviors/bower.json": bower_componentsIronBehaviorsBowerJson2,
	"bower_components/iron-behaviors/demo/index.html": bower_componentsIronBehaviorsDemoIndexHtml,
	"bower_components/iron-behaviors/demo/simple-button.html": bower_componentsIronBehaviorsDemoSimpleButtonHtml,
	"bower_components/iron-behaviors/index.html": bower_componentsIronBehaviorsIndexHtml,
	"bower_components/iron-behaviors/iron-button-state.html": bower_componentsIronBehaviorsIronButtonStateHtml,
	"bower_components/iron-behaviors/iron-control-state.html": bower_componentsIronBehaviorsIronControlStateHtml,
	"bower_components/iron-behaviors/test/active-state.html": bower_componentsIronBehaviorsTestActiveStateHtml,
	"bower_components/iron-behaviors/test/disabled-state.html": bower_componentsIronBehaviorsTestDisabledStateHtml,
	"bower_components/iron-behaviors/test/focused-state.html": bower_componentsIronBehaviorsTestFocusedStateHtml,
	"bower_components/iron-behaviors/test/index.html": bower_componentsIronBehaviorsTestIndexHtml,
	"bower_components/iron-behaviors/test/test-elements.html": bower_componentsIronBehaviorsTestTestElementsHtml,
	"bower_components/iron-checked-element-behavior/.bower.json": bower_componentsIronCheckedElementBehaviorBowerJson,
	"bower_components/iron-checked-element-behavior/.gitignore": bower_componentsIronCheckedElementBehaviorGitignore,
	"bower_components/iron-checked-element-behavior/.travis.yml": bower_componentsIronCheckedElementBehaviorTravisYml,
	"bower_components/iron-checked-element-behavior/CONTRIBUTING.md": bower_componentsIronCheckedElementBehaviorContributingMd,
	"bower_components/iron-checked-element-behavior/README.md": bower_componentsIronCheckedElementBehaviorReadmeMd,
	"bower_components/iron-checked-element-behavior/bower.json": bower_componentsIronCheckedElementBehaviorBowerJson2,
	"bower_components/iron-checked-element-behavior/demo/index.html": bower_componentsIronCheckedElementBehaviorDemoIndexHtml,
	"bower_components/iron-checked-element-behavior/demo/simple-checkbox.html": bower_componentsIronCheckedElementBehaviorDemoSimpleCheckboxHtml,
	"bower_components/iron-checked-element-behavior/index.html": bower_componentsIronCheckedElementBehaviorIndexHtml,
	"bower_components/iron-checked-element-behavior/iron-checked-element-behavior.html": bower_componentsIronCheckedElementBehaviorIronCheckedElementBehaviorHtml,
	"bower_components/iron-checked-element-behavior/test/basic.html": bower_componentsIronCheckedElementBehaviorTestBasicHtml,
	"bower_components/iron-checked-element-behavior/test/index.html": bower_componentsIronCheckedElementBehaviorTestIndexHtml,
	"bower_components/iron-checked-element-behavior/test/simple-checkbox.html": bower_componentsIronCheckedElementBehaviorTestSimpleCheckboxHtml,
	"bower_components/iron-dropdown/.bower.json": bower_componentsIronDropdownBowerJson,
	"bower_components/iron-dropdown/.github/ISSUE_TEMPLATE.md": bower_componentsIronDropdownGithubIssue_templateMd,
	"bower_components/iron-dropdown/.gitignore": bower_componentsIronDropdownGitignore,
	"bower_components/iron-dropdown/.travis.yml": bower_componentsIronDropdownTravisYml,
	"bower_components/iron-dropdown/CONTRIBUTING.md": bower_componentsIronDropdownContributingMd,
	"bower_components/iron-dropdown/README.md": bower_componentsIronDropdownReadmeMd,
	"bower_components/iron-dropdown/bower.json": bower_componentsIronDropdownBowerJson2,
	"bower_components/iron-dropdown/demo/grow-height-animation.html": bower_componentsIronDropdownDemoGrowHeightAnimationHtml,
	"bower_components/iron-dropdown/demo/index.html": bower_componentsIronDropdownDemoIndexHtml,
	"bower_components/iron-dropdown/demo/x-select.html": bower_componentsIronDropdownDemoXSelectHtml,
	"bower_components/iron-dropdown/index.html": bower_componentsIronDropdownIndexHtml,
	"bower_components/iron-dropdown/iron-dropdown-scroll-manager.html": bower_componentsIronDropdownIronDropdownScrollManagerHtml,
	"bower_components/iron-dropdown/iron-dropdown.html": bower_componentsIronDropdownIronDropdownHtml,
	"bower_components/iron-dropdown/test/index.html": bower_componentsIronDropdownTestIndexHtml,
	"bower_components/iron-dropdown/test/iron-dropdown-scroll-manager.html": bower_componentsIronDropdownTestIronDropdownScrollManagerHtml,
	"bower_components/iron-dropdown/test/iron-dropdown.html": bower_componentsIronDropdownTestIronDropdownHtml,
	"bower_components/iron-dropdown/test/x-scrollable-element.html": bower_componentsIronDropdownTestXScrollableElementHtml,
	"bower_components/iron-fit-behavior/.bower.json": bower_componentsIronFitBehaviorBowerJson,
	"bower_components/iron-fit-behavior/.github/ISSUE_TEMPLATE.md": bower_componentsIronFitBehaviorGithubIssue_templateMd,
	"bower_components/iron-fit-behavior/.gitignore": bower_componentsIronFitBehaviorGitignore,
	"bower_components/iron-fit-behavior/.travis.yml": bower_componentsIronFitBehaviorTravisYml,
	"bower_components/iron-fit-behavior/CONTRIBUTING.md": bower_componentsIronFitBehaviorContributingMd,
	"bower_components/iron-fit-behavior/README.md": bower_componentsIronFitBehaviorReadmeMd,
	"bower_components/iron-fit-behavior/bower.json": bower_componentsIronFitBehaviorBowerJson2,
	"bower_components/iron-fit-behavior/demo/index.html": bower_componentsIronFitBehaviorDemoIndexHtml,
	"bower_components/iron-fit-behavior/demo/simple-fit.html": bower_componentsIronFitBehaviorDemoSimpleFitHtml,
	"bower_components/iron-fit-behavior/index.html": bower_componentsIronFitBehaviorIndexHtml,
	"bower_components/iron-fit-behavior/iron-fit-behavior.html": bower_componentsIronFitBehaviorIronFitBehaviorHtml,
	"bower_components/iron-fit-behavior/test/index.html": bower_componentsIronFitBehaviorTestIndexHtml,
	"bower_components/iron-fit-behavior/test/iron-fit-behavior.html": bower_componentsIronFitBehaviorTestIronFitBehaviorHtml,
	"bower_components/iron-fit-behavior/test/test-fit.html": bower_componentsIronFitBehaviorTestTestFitHtml,
	"bower_components/iron-flex-layout/.bower.json": bower_componentsIronFlexLayoutBowerJson,
	"bower_components/iron-flex-layout/.gitignore": bower_componentsIronFlexLayoutGitignore,
	"bower_components/iron-flex-layout/.travis.yml": bower_componentsIronFlexLayoutTravisYml,
	"bower_components/iron-flex-layout/CONTRIBUTING.md": bower_componentsIronFlexLayoutContributingMd,
	"bower_components/iron-flex-layout/README.md": bower_componentsIronFlexLayoutReadmeMd,
	"bower_components/iron-flex-layout/bower.json": bower_componentsIronFlexLayoutBowerJson2,
	"bower_components/iron-flex-layout/classes/iron-flex-layout.html": bower_componentsIronFlexLayoutClassesIronFlexLayoutHtml,
	"bower_components/iron-flex-layout/classes/iron-shadow-flex-layout.html": bower_componentsIronFlexLayoutClassesIronShadowFlexLayoutHtml,
	"bower_components/iron-flex-layout/demo/index.html": bower_componentsIronFlexLayoutDemoIndexHtml,
	"bower_components/iron-flex-layout/index.html": bower_componentsIronFlexLayoutIndexHtml,
	"bower_components/iron-flex-layout/iron-flex-layout-classes.html": bower_componentsIronFlexLayoutIronFlexLayoutClassesHtml,
	"bower_components/iron-flex-layout/iron-flex-layout.html": bower_componentsIronFlexLayoutIronFlexLayoutHtml,
	"bower_components/iron-flex-layout/test/index.html": bower_componentsIronFlexLayoutTestIndexHtml,
	"bower_components/iron-flex-layout/test/iron-flex-layout-classes.html": bower_componentsIronFlexLayoutTestIronFlexLayoutClassesHtml,
	"bower_components/iron-flex-layout/test/iron-flex-layout.html": bower_componentsIronFlexLayoutTestIronFlexLayoutHtml,
	"bower_components/iron-form-element-behavior/.bower.json": bower_componentsIronFormElementBehaviorBowerJson,
	"bower_components/iron-form-element-behavior/.gitignore": bower_componentsIronFormElementBehaviorGitignore,
	"bower_components/iron-form-element-behavior/.travis.yml": bower_componentsIronFormElementBehaviorTravisYml,
	"bower_components/iron-form-element-behavior/CONTRIBUTING.md": bower_componentsIronFormElementBehaviorContributingMd,
	"bower_components/iron-form-element-behavior/README.md": bower_componentsIronFormElementBehaviorReadmeMd,
	"bower_components/iron-form-element-behavior/bower.json": bower_componentsIronFormElementBehaviorBowerJson2,
	"bower_components/iron-form-element-behavior/demo/index.html": bower_componentsIronFormElementBehaviorDemoIndexHtml,
	"bower_components/iron-form-element-behavior/demo/simple-element.html": bower_componentsIronFormElementBehaviorDemoSimpleElementHtml,
	"bower_components/iron-form-element-behavior/demo/simple-form.html": bower_componentsIronFormElementBehaviorDemoSimpleFormHtml,
	"bower_components/iron-form-element-behavior/index.html": bower_componentsIronFormElementBehaviorIndexHtml,
	"bower_components/iron-form-element-behavior/iron-form-element-behavior.html": bower_componentsIronFormElementBehaviorIronFormElementBehaviorHtml,
	"bower_components/iron-form-element-behavior/test/basic.html": bower_componentsIronFormElementBehaviorTestBasicHtml,
	"bower_components/iron-form-element-behavior/test/index.html": bower_componentsIronFormElementBehaviorTestIndexHtml,
	"bower_components/iron-form-element-behavior/test/simple-element.html": bower_componentsIronFormElementBehaviorTestSimpleElementHtml,
	"bower_components/iron-form-element-behavior/test/simple-form.html": bower_componentsIronFormElementBehaviorTestSimpleFormHtml,
	"bower_components/iron-icon/.bower.json": bower_componentsIronIconBowerJson,
	"bower_components/iron-icon/.gitignore": bower_componentsIronIconGitignore,
	"bower_components/iron-icon/README.md": bower_componentsIronIconReadmeMd,
	"bower_components/iron-icon/bower.json": bower_componentsIronIconBowerJson2,
	"bower_components/iron-icon/demo/async.html": bower_componentsIronIconDemoAsyncHtml,
	"bower_components/iron-icon/demo/index.html": bower_componentsIronIconDemoIndexHtml,
	"bower_components/iron-icon/demo/location.png": bower_componentsIronIconDemoLocationPng,
	"bower_components/iron-icon/hero.svg": bower_componentsIronIconHeroSvg,
	"bower_components/iron-icon/index.html": bower_componentsIronIconIndexHtml,
	"bower_components/iron-icon/iron-icon.html": bower_componentsIronIconIronIconHtml,
	"bower_components/iron-icon/test/index.html": bower_componentsIronIconTestIndexHtml,
	"bower_components/iron-icon/test/iron-icon.html": bower_componentsIronIconTestIronIconHtml,
	"bower_components/iron-icons/.bower.json": bower_componentsIronIconsBowerJson,
	"bower_components/iron-icons/.gitignore": bower_componentsIronIconsGitignore,
	"bower_components/iron-icons/.travis.yml": bower_componentsIronIconsTravisYml,
	"bower_components/iron-icons/CONTRIBUTING.md": bower_componentsIronIconsContributingMd,
	"bower_components/iron-icons/README.md": bower_componentsIronIconsReadmeMd,
	"bower_components/iron-icons/av-icons.html": bower_componentsIronIconsAvIconsHtml,
	"bower_components/iron-icons/bower.json": bower_componentsIronIconsBowerJson2,
	"bower_components/iron-icons/communication-icons.html": bower_componentsIronIconsCommunicationIconsHtml,
	"bower_components/iron-icons/demo/index.html": bower_componentsIronIconsDemoIndexHtml,
	"bower_components/iron-icons/device-icons.html": bower_componentsIronIconsDeviceIconsHtml,
	"bower_components/iron-icons/editor-icons.html": bower_componentsIronIconsEditorIconsHtml,
	"bower_components/iron-icons/hardware-icons.html": bower_componentsIronIconsHardwareIconsHtml,
	"bower_components/iron-icons/hero.svg": bower_componentsIronIconsHeroSvg,
	"bower_components/iron-icons/image-icons.html": bower_componentsIronIconsImageIconsHtml,
	"bower_components/iron-icons/index.html": bower_componentsIronIconsIndexHtml,
	"bower_components/iron-icons/iron-icons.html": bower_componentsIronIconsIronIconsHtml,
	"bower_components/iron-icons/maps-icons.html": bower_componentsIronIconsMapsIconsHtml,
	"bower_components/iron-icons/notification-icons.html": bower_componentsIronIconsNotificationIconsHtml,
	"bower_components/iron-icons/places-icons.html": bower_componentsIronIconsPlacesIconsHtml,
	"bower_components/iron-icons/social-icons.html": bower_componentsIronIconsSocialIconsHtml,
	"bower_components/iron-iconset-svg/.bower.json": bower_componentsIronIconsetSvgBowerJson,
	"bower_components/iron-iconset-svg/.gitignore": bower_componentsIronIconsetSvgGitignore,
	"bower_components/iron-iconset-svg/.travis.yml": bower_componentsIronIconsetSvgTravisYml,
	"bower_components/iron-iconset-svg/CONTRIBUTING.md": bower_componentsIronIconsetSvgContributingMd,
	"bower_components/iron-iconset-svg/README.md": bower_componentsIronIconsetSvgReadmeMd,
	"bower_components/iron-iconset-svg/bower.json": bower_componentsIronIconsetSvgBowerJson2,
	"bower_components/iron-iconset-svg/demo/index.html": bower_componentsIronIconsetSvgDemoIndexHtml,
	"bower_components/iron-iconset-svg/demo/svg-sample-icons.html": bower_componentsIronIconsetSvgDemoSvgSampleIconsHtml,
	"bower_components/iron-iconset-svg/index.html": bower_componentsIronIconsetSvgIndexHtml,
	"bower_components/iron-iconset-svg/iron-iconset-svg.html": bower_componentsIronIconsetSvgIronIconsetSvgHtml,
	"bower_components/iron-iconset-svg/test/index.html": bower_componentsIronIconsetSvgTestIndexHtml,
	"bower_components/iron-iconset-svg/test/iron-iconset-svg.html": bower_componentsIronIconsetSvgTestIronIconsetSvgHtml,
	"bower_components/iron-image/.bower.json": bower_componentsIronImageBowerJson,
	"bower_components/iron-image/.gitignore": bower_componentsIronImageGitignore,
	"bower_components/iron-image/.travis.yml": bower_componentsIronImageTravisYml,
	"bower_components/iron-image/CONTRIBUTING.md": bower_componentsIronImageContributingMd,
	"bower_components/iron-image/README.md": bower_componentsIronImageReadmeMd,
	"bower_components/iron-image/bower.json": bower_componentsIronImageBowerJson2,
	"bower_components/iron-image/demo/index.html": bower_componentsIronImageDemoIndexHtml,
	"bower_components/iron-image/demo/loading.png": bower_componentsIronImageDemoLoadingPng,
	"bower_components/iron-image/demo/polymer.svg": bower_componentsIronImageDemoPolymerSvg,
	"bower_components/iron-image/index.html": bower_componentsIronImageIndexHtml,
	"bower_components/iron-image/iron-image.html": bower_componentsIronImageIronImageHtml,
	"bower_components/iron-image/test/index.html": bower_componentsIronImageTestIndexHtml,
	"bower_components/iron-image/test/iron-image.html": bower_componentsIronImageTestIronImageHtml,
	"bower_components/iron-input/.bower.json": bower_componentsIronInputBowerJson,
	"bower_components/iron-input/.github/ISSUE_TEMPLATE.md": bower_componentsIronInputGithubIssue_templateMd,
	"bower_components/iron-input/.gitignore": bower_componentsIronInputGitignore,
	"bower_components/iron-input/.travis.yml": bower_componentsIronInputTravisYml,
	"bower_components/iron-input/CONTRIBUTING.md": bower_componentsIronInputContributingMd,
	"bower_components/iron-input/README.md": bower_componentsIronInputReadmeMd,
	"bower_components/iron-input/bower.json": bower_componentsIronInputBowerJson2,
	"bower_components/iron-input/demo/index.html": bower_componentsIronInputDemoIndexHtml,
	"bower_components/iron-input/hero.svg": bower_componentsIronInputHeroSvg,
	"bower_components/iron-input/index.html": bower_componentsIronInputIndexHtml,
	"bower_components/iron-input/iron-input.html": bower_componentsIronInputIronInputHtml,
	"bower_components/iron-input/test/disabled-input.html": bower_componentsIronInputTestDisabledInputHtml,
	"bower_components/iron-input/test/index.html": bower_componentsIronInputTestIndexHtml,
	"bower_components/iron-input/test/iron-input.html": bower_componentsIronInputTestIronInputHtml,
	"bower_components/iron-input/test/letters-only.html": bower_componentsIronInputTestLettersOnlyHtml,
	"bower_components/iron-media-query/.bower.json": bower_componentsIronMediaQueryBowerJson,
	"bower_components/iron-media-query/.gitignore": bower_componentsIronMediaQueryGitignore,
	"bower_components/iron-media-query/.travis.yml": bower_componentsIronMediaQueryTravisYml,
	"bower_components/iron-media-query/CONTRIBUTING.md": bower_componentsIronMediaQueryContributingMd,
	"bower_components/iron-media-query/README.md": bower_componentsIronMediaQueryReadmeMd,
	"bower_components/iron-media-query/bower.json": bower_componentsIronMediaQueryBowerJson2,
	"bower_components/iron-media-query/demo/index.html": bower_componentsIronMediaQueryDemoIndexHtml,
	"bower_components/iron-media-query/hero.svg": bower_componentsIronMediaQueryHeroSvg,
	"bower_components/iron-media-query/index.html": bower_componentsIronMediaQueryIndexHtml,
	"bower_components/iron-media-query/iron-media-query.html": bower_componentsIronMediaQueryIronMediaQueryHtml,
	"bower_components/iron-media-query/test/basic.html": bower_componentsIronMediaQueryTestBasicHtml,
	"bower_components/iron-media-query/test/index.html": bower_componentsIronMediaQueryTestIndexHtml,
	"bower_components/iron-menu-behavior/.bower.json": bower_componentsIronMenuBehaviorBowerJson,
	"bower_components/iron-menu-behavior/.gitignore": bower_componentsIronMenuBehaviorGitignore,
	"bower_components/iron-menu-behavior/.travis.yml": bower_componentsIronMenuBehaviorTravisYml,
	"bower_components/iron-menu-behavior/CONTRIBUTING.md": bower_componentsIronMenuBehaviorContributingMd,
	"bower_components/iron-menu-behavior/README.md": bower_componentsIronMenuBehaviorReadmeMd,
	"bower_components/iron-menu-behavior/bower.json": bower_componentsIronMenuBehaviorBowerJson2,
	"bower_components/iron-menu-behavior/demo/index.html": bower_componentsIronMenuBehaviorDemoIndexHtml,
	"bower_components/iron-menu-behavior/demo/simple-menu.html": bower_componentsIronMenuBehaviorDemoSimpleMenuHtml,
	"bower_components/iron-menu-behavior/demo/simple-menubar.html": bower_componentsIronMenuBehaviorDemoSimpleMenubarHtml,
	"bower_components/iron-menu-behavior/index.html": bower_componentsIronMenuBehaviorIndexHtml,
	"bower_components/iron-menu-behavior/iron-menu-behavior.html": bower_componentsIronMenuBehaviorIronMenuBehaviorHtml,
	"bower_components/iron-menu-behavior/iron-menubar-behavior.html": bower_componentsIronMenuBehaviorIronMenubarBehaviorHtml,
	"bower_components/iron-menu-behavior/test/index.html": bower_componentsIronMenuBehaviorTestIndexHtml,
	"bower_components/iron-menu-behavior/test/iron-menu-behavior.html": bower_componentsIronMenuBehaviorTestIronMenuBehaviorHtml,
	"bower_components/iron-menu-behavior/test/iron-menubar-behavior.html": bower_componentsIronMenuBehaviorTestIronMenubarBehaviorHtml,
	"bower_components/iron-menu-behavior/test/test-menu.html": bower_componentsIronMenuBehaviorTestTestMenuHtml,
	"bower_components/iron-menu-behavior/test/test-menubar.html": bower_componentsIronMenuBehaviorTestTestMenubarHtml,
	"bower_components/iron-meta/.bower.json": bower_componentsIronMetaBowerJson,
	"bower_components/iron-meta/.gitignore": bower_componentsIronMetaGitignore,
	"bower_components/iron-meta/.travis.yml": bower_componentsIronMetaTravisYml,
	"bower_components/iron-meta/CONTRIBUTING.md": bower_componentsIronMetaContributingMd,
	"bower_components/iron-meta/README.md": bower_componentsIronMetaReadmeMd,
	"bower_components/iron-meta/bower.json": bower_componentsIronMetaBowerJson2,
	"bower_components/iron-meta/demo/index.html": bower_componentsIronMetaDemoIndexHtml,
	"bower_components/iron-meta/hero.svg": bower_componentsIronMetaHeroSvg,
	"bower_components/iron-meta/index.html": bower_componentsIronMetaIndexHtml,
	"bower_components/iron-meta/iron-meta.html": bower_componentsIronMetaIronMetaHtml,
	"bower_components/iron-meta/test/basic.html": bower_componentsIronMetaTestBasicHtml,
	"bower_components/iron-meta/test/index.html": bower_componentsIronMetaTestIndexHtml,
	"bower_components/iron-meta/test/iron-meta.html": bower_componentsIronMetaTestIronMetaHtml,
	"bower_components/iron-overlay-behavior/.bower.json": bower_componentsIronOverlayBehaviorBowerJson,
	"bower_components/iron-overlay-behavior/.github/ISSUE_TEMPLATE.md": bower_componentsIronOverlayBehaviorGithubIssue_templateMd,
	"bower_components/iron-overlay-behavior/.gitignore": bower_componentsIronOverlayBehaviorGitignore,
	"bower_components/iron-overlay-behavior/.travis.yml": bower_componentsIronOverlayBehaviorTravisYml,
	"bower_components/iron-overlay-behavior/CONTRIBUTING.md": bower_componentsIronOverlayBehaviorContributingMd,
	"bower_components/iron-overlay-behavior/README.md": bower_componentsIronOverlayBehaviorReadmeMd,
	"bower_components/iron-overlay-behavior/bower.json": bower_componentsIronOverlayBehaviorBowerJson2,
	"bower_components/iron-overlay-behavior/demo/index.html": bower_componentsIronOverlayBehaviorDemoIndexHtml,
	"bower_components/iron-overlay-behavior/demo/simple-overlay.html": bower_componentsIronOverlayBehaviorDemoSimpleOverlayHtml,
	"bower_components/iron-overlay-behavior/index.html": bower_componentsIronOverlayBehaviorIndexHtml,
	"bower_components/iron-overlay-behavior/iron-focusables-helper.html": bower_componentsIronOverlayBehaviorIronFocusablesHelperHtml,
	"bower_components/iron-overlay-behavior/iron-overlay-backdrop.html": bower_componentsIronOverlayBehaviorIronOverlayBackdropHtml,
	"bower_components/iron-overlay-behavior/iron-overlay-behavior.html": bower_componentsIronOverlayBehaviorIronOverlayBehaviorHtml,
	"bower_components/iron-overlay-behavior/iron-overlay-manager.html": bower_componentsIronOverlayBehaviorIronOverlayManagerHtml,
	"bower_components/iron-overlay-behavior/test/index.html": bower_componentsIronOverlayBehaviorTestIndexHtml,
	"bower_components/iron-overlay-behavior/test/iron-focusables-helper.html": bower_componentsIronOverlayBehaviorTestIronFocusablesHelperHtml,
	"bower_components/iron-overlay-behavior/test/iron-overlay-backdrop.html": bower_componentsIronOverlayBehaviorTestIronOverlayBackdropHtml,
	"bower_components/iron-overlay-behavior/test/iron-overlay-behavior.html": bower_componentsIronOverlayBehaviorTestIronOverlayBehaviorHtml,
	"bower_components/iron-overlay-behavior/test/test-buttons-wrapper.html": bower_componentsIronOverlayBehaviorTestTestButtonsWrapperHtml,
	"bower_components/iron-overlay-behavior/test/test-buttons.html": bower_componentsIronOverlayBehaviorTestTestButtonsHtml,
	"bower_components/iron-overlay-behavior/test/test-menu-button.html": bower_componentsIronOverlayBehaviorTestTestMenuButtonHtml,
	"bower_components/iron-overlay-behavior/test/test-overlay.html": bower_componentsIronOverlayBehaviorTestTestOverlayHtml,
	"bower_components/iron-overlay-behavior/test/test-overlay2.html": bower_componentsIronOverlayBehaviorTestTestOverlay2Html,
	"bower_components/iron-resizable-behavior/.bower.json": bower_componentsIronResizableBehaviorBowerJson,
	"bower_components/iron-resizable-behavior/.gitignore": bower_componentsIronResizableBehaviorGitignore,
	"bower_components/iron-resizable-behavior/.travis.yml": bower_componentsIronResizableBehaviorTravisYml,
	"bower_components/iron-resizable-behavior/CONTRIBUTING.md": bower_componentsIronResizableBehaviorContributingMd,
	"bower_components/iron-resizable-behavior/README.md": bower_componentsIronResizableBehaviorReadmeMd,
	"bower_components/iron-resizable-behavior/bower.json": bower_componentsIronResizableBehaviorBowerJson2,
	"bower_components/iron-resizable-behavior/demo/index.html": bower_componentsIronResizableBehaviorDemoIndexHtml,
	"bower_components/iron-resizable-behavior/demo/src/x-app.html": bower_componentsIronResizableBehaviorDemoSrcXAppHtml,
	"bower_components/iron-resizable-behavior/index.html": bower_componentsIronResizableBehaviorIndexHtml,
	"bower_components/iron-resizable-behavior/iron-resizable-behavior.html": bower_componentsIronResizableBehaviorIronResizableBehaviorHtml,
	"bower_components/iron-resizable-behavior/test/basic.html": bower_componentsIronResizableBehaviorTestBasicHtml,
	"bower_components/iron-resizable-behavior/test/index.html": bower_componentsIronResizableBehaviorTestIndexHtml,
	"bower_components/iron-resizable-behavior/test/iron-resizable-behavior.html": bower_componentsIronResizableBehaviorTestIronResizableBehaviorHtml,
	"bower_components/iron-resizable-behavior/test/test-elements.html": bower_componentsIronResizableBehaviorTestTestElementsHtml,
	"bower_components/iron-selector/.bower.json": bower_componentsIronSelectorBowerJson,
	"bower_components/iron-selector/.gitignore": bower_componentsIronSelectorGitignore,
	"bower_components/iron-selector/.travis.yml": bower_componentsIronSelectorTravisYml,
	"bower_components/iron-selector/CONTRIBUTING.md": bower_componentsIronSelectorContributingMd,
	"bower_components/iron-selector/README.md": bower_componentsIronSelectorReadmeMd,
	"bower_components/iron-selector/bower.json": bower_componentsIronSelectorBowerJson2,
	"bower_components/iron-selector/demo/index.html": bower_componentsIronSelectorDemoIndexHtml,
	"bower_components/iron-selector/index.html": bower_componentsIronSelectorIndexHtml,
	"bower_components/iron-selector/iron-multi-selectable.html": bower_componentsIronSelectorIronMultiSelectableHtml,
	"bower_components/iron-selector/iron-selectable.html": bower_componentsIronSelectorIronSelectableHtml,
	"bower_components/iron-selector/iron-selection.html": bower_componentsIronSelectorIronSelectionHtml,
	"bower_components/iron-selector/iron-selector.html": bower_componentsIronSelectorIronSelectorHtml,
	"bower_components/iron-selector/test/activate-event.html": bower_componentsIronSelectorTestActivateEventHtml,
	"bower_components/iron-selector/test/basic.html": bower_componentsIronSelectorTestBasicHtml,
	"bower_components/iron-selector/test/content-element.html": bower_componentsIronSelectorTestContentElementHtml,
	"bower_components/iron-selector/test/content.html": bower_componentsIronSelectorTestContentHtml,
	"bower_components/iron-selector/test/excluded-local-names.html": bower_componentsIronSelectorTestExcludedLocalNamesHtml,
	"bower_components/iron-selector/test/index.html": bower_componentsIronSelectorTestIndexHtml,
	"bower_components/iron-selector/test/multi.html": bower_componentsIronSelectorTestMultiHtml,
	"bower_components/iron-selector/test/next-previous.html": bower_componentsIronSelectorTestNextPreviousHtml,
	"bower_components/iron-selector/test/numeric-ids.html": bower_componentsIronSelectorTestNumericIdsHtml,
	"bower_components/iron-selector/test/selected-attribute.html": bower_componentsIronSelectorTestSelectedAttributeHtml,
	"bower_components/iron-selector/test/template-repeat.html": bower_componentsIronSelectorTestTemplateRepeatHtml,
	"bower_components/iron-validatable-behavior/.bower.json": bower_componentsIronValidatableBehaviorBowerJson,
	"bower_components/iron-validatable-behavior/.gitignore": bower_componentsIronValidatableBehaviorGitignore,
	"bower_components/iron-validatable-behavior/README.md": bower_componentsIronValidatableBehaviorReadmeMd,
	"bower_components/iron-validatable-behavior/bower.json": bower_componentsIronValidatableBehaviorBowerJson2,
	"bower_components/iron-validatable-behavior/demo/cats-only.html": bower_componentsIronValidatableBehaviorDemoCatsOnlyHtml,
	"bower_components/iron-validatable-behavior/demo/index.html": bower_componentsIronValidatableBehaviorDemoIndexHtml,
	"bower_components/iron-validatable-behavior/demo/validatable-input.html": bower_componentsIronValidatableBehaviorDemoValidatableInputHtml,
	"bower_components/iron-validatable-behavior/index.html": bower_componentsIronValidatableBehaviorIndexHtml,
	"bower_components/iron-validatable-behavior/iron-validatable-behavior.html": bower_componentsIronValidatableBehaviorIronValidatableBehaviorHtml,
	"bower_components/iron-validatable-behavior/test/index.html": bower_componentsIronValidatableBehaviorTestIndexHtml,
	"bower_components/iron-validatable-behavior/test/iron-validatable-behavior.html": bower_componentsIronValidatableBehaviorTestIronValidatableBehaviorHtml,
	"bower_components/iron-validatable-behavior/test/test-validatable.html": bower_componentsIronValidatableBehaviorTestTestValidatableHtml,
	"bower_components/neon-animation/.bower.json": bower_componentsNeonAnimationBowerJson,
	"bower_components/neon-animation/.github/ISSUE_TEMPLATE.md": bower_componentsNeonAnimationGithubIssue_templateMd,
	"bower_components/neon-animation/.gitignore": bower_componentsNeonAnimationGitignore,
	"bower_components/neon-animation/.travis.yml": bower_componentsNeonAnimationTravisYml,
	"bower_components/neon-animation/CONTRIBUTING.md": bower_componentsNeonAnimationContributingMd,
	"bower_components/neon-animation/README.md": bower_componentsNeonAnimationReadmeMd,
	"bower_components/neon-animation/animations/cascaded-animation.html": bower_componentsNeonAnimationAnimationsCascadedAnimationHtml,
	"bower_components/neon-animation/animations/fade-in-animation.html": bower_componentsNeonAnimationAnimationsFadeInAnimationHtml,
	"bower_components/neon-animation/animations/fade-out-animation.html": bower_componentsNeonAnimationAnimationsFadeOutAnimationHtml,
	"bower_components/neon-animation/animations/hero-animation.html": bower_componentsNeonAnimationAnimationsHeroAnimationHtml,
	"bower_components/neon-animation/animations/opaque-animation.html": bower_componentsNeonAnimationAnimationsOpaqueAnimationHtml,
	"bower_components/neon-animation/animations/reverse-ripple-animation.html": bower_componentsNeonAnimationAnimationsReverseRippleAnimationHtml,
	"bower_components/neon-animation/animations/ripple-animation.html": bower_componentsNeonAnimationAnimationsRippleAnimationHtml,
	"bower_components/neon-animation/animations/scale-down-animation.html": bower_componentsNeonAnimationAnimationsScaleDownAnimationHtml,
	"bower_components/neon-animation/animations/scale-up-animation.html": bower_componentsNeonAnimationAnimationsScaleUpAnimationHtml,
	"bower_components/neon-animation/animations/slide-down-animation.html": bower_componentsNeonAnimationAnimationsSlideDownAnimationHtml,
	"bower_components/neon-animation/animations/slide-from-bottom-animation.html": bower_componentsNeonAnimationAnimationsSlideFromBottomAnimationHtml,
	"bower_components/neon-animation/animations/slide-from-left-animation.html": bower_componentsNeonAnimationAnimationsSlideFromLeftAnimationHtml,
	"bower_components/neon-animation/animations/slide-from-right-animation.html": bower_componentsNeonAnimationAnimationsSlideFromRightAnimationHtml,
	"bower_components/neon-animation/animations/slide-from-top-animation.html": bower_componentsNeonAnimationAnimationsSlideFromTopAnimationHtml,
	"bower_components/neon-animation/animations/slide-left-animation.html": bower_componentsNeonAnimationAnimationsSlideLeftAnimationHtml,
	"bower_components/neon-animation/animations/slide-right-animation.html": bower_componentsNeonAnimationAnimationsSlideRightAnimationHtml,
	"bower_components/neon-animation/animations/slide-up-animation.html": bower_componentsNeonAnimationAnimationsSlideUpAnimationHtml,
	"bower_components/neon-animation/animations/transform-animation.html": bower_componentsNeonAnimationAnimationsTransformAnimationHtml,
	"bower_components/neon-animation/bower.json": bower_componentsNeonAnimationBowerJson2,
	"bower_components/neon-animation/demo/card/index.html": bower_componentsNeonAnimationDemoCardIndexHtml,
	"bower_components/neon-animation/demo/card/x-card.html": bower_componentsNeonAnimationDemoCardXCardHtml,
	"bower_components/neon-animation/demo/card/x-cards-list.html": bower_componentsNeonAnimationDemoCardXCardsListHtml,
	"bower_components/neon-animation/demo/declarative/index.html": bower_componentsNeonAnimationDemoDeclarativeIndexHtml,
	"bower_components/neon-animation/demo/doc/index.html": bower_componentsNeonAnimationDemoDocIndexHtml,
	"bower_components/neon-animation/demo/doc/my-animatable.html": bower_componentsNeonAnimationDemoDocMyAnimatableHtml,
	"bower_components/neon-animation/demo/doc/my-dialog.html": bower_componentsNeonAnimationDemoDocMyDialogHtml,
	"bower_components/neon-animation/demo/dropdown/animated-dropdown.html": bower_componentsNeonAnimationDemoDropdownAnimatedDropdownHtml,
	"bower_components/neon-animation/demo/dropdown/index.html": bower_componentsNeonAnimationDemoDropdownIndexHtml,
	"bower_components/neon-animation/demo/grid/animated-grid.html": bower_componentsNeonAnimationDemoGridAnimatedGridHtml,
	"bower_components/neon-animation/demo/grid/fullsize-page-with-card.html": bower_componentsNeonAnimationDemoGridFullsizePageWithCardHtml,
	"bower_components/neon-animation/demo/grid/index.html": bower_componentsNeonAnimationDemoGridIndexHtml,
	"bower_components/neon-animation/demo/index.html": bower_componentsNeonAnimationDemoIndexHtml,
	"bower_components/neon-animation/demo/list/full-view.html": bower_componentsNeonAnimationDemoListFullViewHtml,
	"bower_components/neon-animation/demo/list/index.html": bower_componentsNeonAnimationDemoListIndexHtml,
	"bower_components/neon-animation/demo/list/list-demo.html": bower_componentsNeonAnimationDemoListListDemoHtml,
	"bower_components/neon-animation/demo/list/list-view.html": bower_componentsNeonAnimationDemoListListViewHtml,
	"bower_components/neon-animation/demo/load/animated-grid.html": bower_componentsNeonAnimationDemoLoadAnimatedGridHtml,
	"bower_components/neon-animation/demo/load/full-page.html": bower_componentsNeonAnimationDemoLoadFullPageHtml,
	"bower_components/neon-animation/demo/load/index.html": bower_componentsNeonAnimationDemoLoadIndexHtml,
	"bower_components/neon-animation/demo/reprojection/animated-grid.html": bower_componentsNeonAnimationDemoReprojectionAnimatedGridHtml,
	"bower_components/neon-animation/demo/reprojection/fullsize-page-with-card.html": bower_componentsNeonAnimationDemoReprojectionFullsizePageWithCardHtml,
	"bower_components/neon-animation/demo/reprojection/index.html": bower_componentsNeonAnimationDemoReprojectionIndexHtml,
	"bower_components/neon-animation/demo/reprojection/reprojected-pages.html": bower_componentsNeonAnimationDemoReprojectionReprojectedPagesHtml,
	"bower_components/neon-animation/demo/shared-styles.html": bower_componentsNeonAnimationDemoSharedStylesHtml,
	"bower_components/neon-animation/demo/tiles/circles-page.html": bower_componentsNeonAnimationDemoTilesCirclesPageHtml,
	"bower_components/neon-animation/demo/tiles/index.html": bower_componentsNeonAnimationDemoTilesIndexHtml,
	"bower_components/neon-animation/demo/tiles/squares-page.html": bower_componentsNeonAnimationDemoTilesSquaresPageHtml,
	"bower_components/neon-animation/guides/neon-animation.md": bower_componentsNeonAnimationGuidesNeonAnimationMd,
	"bower_components/neon-animation/index.html": bower_componentsNeonAnimationIndexHtml,
	"bower_components/neon-animation/neon-animatable-behavior.html": bower_componentsNeonAnimationNeonAnimatableBehaviorHtml,
	"bower_components/neon-animation/neon-animatable.html": bower_componentsNeonAnimationNeonAnimatableHtml,
	"bower_components/neon-animation/neon-animated-pages.html": bower_componentsNeonAnimationNeonAnimatedPagesHtml,
	"bower_components/neon-animation/neon-animation-behavior.html": bower_componentsNeonAnimationNeonAnimationBehaviorHtml,
	"bower_components/neon-animation/neon-animation-runner-behavior.html": bower_componentsNeonAnimationNeonAnimationRunnerBehaviorHtml,
	"bower_components/neon-animation/neon-animation.html": bower_componentsNeonAnimationNeonAnimationHtml,
	"bower_components/neon-animation/neon-animations.html": bower_componentsNeonAnimationNeonAnimationsHtml,
	"bower_components/neon-animation/neon-shared-element-animatable-behavior.html": bower_componentsNeonAnimationNeonSharedElementAnimatableBehaviorHtml,
	"bower_components/neon-animation/neon-shared-element-animation-behavior.html": bower_componentsNeonAnimationNeonSharedElementAnimationBehaviorHtml,
	"bower_components/neon-animation/test/index.html": bower_componentsNeonAnimationTestIndexHtml,
	"bower_components/neon-animation/test/neon-animated-pages-descendant-selection.html": bower_componentsNeonAnimationTestNeonAnimatedPagesDescendantSelectionHtml,
	"bower_components/neon-animation/test/neon-animated-pages-lazy.html": bower_componentsNeonAnimationTestNeonAnimatedPagesLazyHtml,
	"bower_components/neon-animation/test/neon-animated-pages.html": bower_componentsNeonAnimationTestNeonAnimatedPagesHtml,
	"bower_components/neon-animation/test/test-resizable-pages.html": bower_componentsNeonAnimationTestTestResizablePagesHtml,
	"bower_components/neon-animation/web-animations.html": bower_componentsNeonAnimationWebAnimationsHtml,
	"bower_components/paper-behaviors/.bower.json": bower_componentsPaperBehaviorsBowerJson,
	"bower_components/paper-behaviors/.gitignore": bower_componentsPaperBehaviorsGitignore,
	"bower_components/paper-behaviors/.travis.yml": bower_componentsPaperBehaviorsTravisYml,
	"bower_components/paper-behaviors/CONTRIBUTING.md": bower_componentsPaperBehaviorsContributingMd,
	"bower_components/paper-behaviors/README.md": bower_componentsPaperBehaviorsReadmeMd,
	"bower_components/paper-behaviors/bower.json": bower_componentsPaperBehaviorsBowerJson2,
	"bower_components/paper-behaviors/demo/index.html": bower_componentsPaperBehaviorsDemoIndexHtml,
	"bower_components/paper-behaviors/demo/paper-button.html": bower_componentsPaperBehaviorsDemoPaperButtonHtml,
	"bower_components/paper-behaviors/demo/paper-radio-button.html": bower_componentsPaperBehaviorsDemoPaperRadioButtonHtml,
	"bower_components/paper-behaviors/index.html": bower_componentsPaperBehaviorsIndexHtml,
	"bower_components/paper-behaviors/paper-button-behavior.html": bower_componentsPaperBehaviorsPaperButtonBehaviorHtml,
	"bower_components/paper-behaviors/paper-checked-element-behavior.html": bower_componentsPaperBehaviorsPaperCheckedElementBehaviorHtml,
	"bower_components/paper-behaviors/paper-inky-focus-behavior.html": bower_componentsPaperBehaviorsPaperInkyFocusBehaviorHtml,
	"bower_components/paper-behaviors/paper-ripple-behavior.html": bower_componentsPaperBehaviorsPaperRippleBehaviorHtml,
	"bower_components/paper-behaviors/test/index.html": bower_componentsPaperBehaviorsTestIndexHtml,
	"bower_components/paper-behaviors/test/paper-button-behavior.html": bower_componentsPaperBehaviorsTestPaperButtonBehaviorHtml,
	"bower_components/paper-behaviors/test/paper-checked-element-behavior.html": bower_componentsPaperBehaviorsTestPaperCheckedElementBehaviorHtml,
	"bower_components/paper-behaviors/test/paper-radio-button-behavior.html": bower_componentsPaperBehaviorsTestPaperRadioButtonBehaviorHtml,
	"bower_components/paper-behaviors/test/paper-ripple-behavior.html": bower_componentsPaperBehaviorsTestPaperRippleBehaviorHtml,
	"bower_components/paper-behaviors/test/shadowed-ripple.html": bower_componentsPaperBehaviorsTestShadowedRippleHtml,
	"bower_components/paper-behaviors/test/test-button.html": bower_componentsPaperBehaviorsTestTestButtonHtml,
	"bower_components/paper-behaviors/test/test-radio-button.html": bower_componentsPaperBehaviorsTestTestRadioButtonHtml,
	"bower_components/paper-button/.bower.json": bower_componentsPaperButtonBowerJson,
	"bower_components/paper-button/.github/ISSUE_TEMPLATE.md": bower_componentsPaperButtonGithubIssue_templateMd,
	"bower_components/paper-button/.gitignore": bower_componentsPaperButtonGitignore,
	"bower_components/paper-button/.travis.yml": bower_componentsPaperButtonTravisYml,
	"bower_components/paper-button/CONTRIBUTING.md": bower_componentsPaperButtonContributingMd,
	"bower_components/paper-button/README.md": bower_componentsPaperButtonReadmeMd,
	"bower_components/paper-button/bower.json": bower_componentsPaperButtonBowerJson2,
	"bower_components/paper-button/demo/index.html": bower_componentsPaperButtonDemoIndexHtml,
	"bower_components/paper-button/index.html": bower_componentsPaperButtonIndexHtml,
	"bower_components/paper-button/paper-button.html": bower_componentsPaperButtonPaperButtonHtml,
	"bower_components/paper-button/test/index.html": bower_componentsPaperButtonTestIndexHtml,
	"bower_components/paper-button/test/paper-button.html": bower_componentsPaperButtonTestPaperButtonHtml,
	"bower_components/paper-card/.bower.json": bower_componentsPaperCardBowerJson,
	"bower_components/paper-card/.gitignore": bower_componentsPaperCardGitignore,
	"bower_components/paper-card/.travis.yml": bower_componentsPaperCardTravisYml,
	"bower_components/paper-card/CONTRIBUTING.md": bower_componentsPaperCardContributingMd,
	"bower_components/paper-card/README.md": bower_componentsPaperCardReadmeMd,
	"bower_components/paper-card/bower.json": bower_componentsPaperCardBowerJson2,
	"bower_components/paper-card/demo/cafe.png": bower_componentsPaperCardDemoCafePng,
	"bower_components/paper-card/demo/donuts.png": bower_componentsPaperCardDemoDonutsPng,
	"bower_components/paper-card/demo/house.png": bower_componentsPaperCardDemoHousePng,
	"bower_components/paper-card/demo/index.html": bower_componentsPaperCardDemoIndexHtml,
	"bower_components/paper-card/demo/travel.png": bower_componentsPaperCardDemoTravelPng,
	"bower_components/paper-card/demo/trip.png": bower_componentsPaperCardDemoTripPng,
	"bower_components/paper-card/index.html": bower_componentsPaperCardIndexHtml,
	"bower_components/paper-card/paper-card.html": bower_componentsPaperCardPaperCardHtml,
	"bower_components/paper-card/test/basic.html": bower_componentsPaperCardTestBasicHtml,
	"bower_components/paper-card/test/index.html": bower_componentsPaperCardTestIndexHtml,
	"bower_components/paper-drawer-panel/.bower.json": bower_componentsPaperDrawerPanelBowerJson,
	"bower_components/paper-drawer-panel/.gitignore": bower_componentsPaperDrawerPanelGitignore,
	"bower_components/paper-drawer-panel/.travis.yml": bower_componentsPaperDrawerPanelTravisYml,
	"bower_components/paper-drawer-panel/CONTRIBUTING.md": bower_componentsPaperDrawerPanelContributingMd,
	"bower_components/paper-drawer-panel/README.md": bower_componentsPaperDrawerPanelReadmeMd,
	"bower_components/paper-drawer-panel/bower.json": bower_componentsPaperDrawerPanelBowerJson2,
	"bower_components/paper-drawer-panel/demo/index.html": bower_componentsPaperDrawerPanelDemoIndexHtml,
	"bower_components/paper-drawer-panel/hero.svg": bower_componentsPaperDrawerPanelHeroSvg,
	"bower_components/paper-drawer-panel/index.html": bower_componentsPaperDrawerPanelIndexHtml,
	"bower_components/paper-drawer-panel/paper-drawer-panel.html": bower_componentsPaperDrawerPanelPaperDrawerPanelHtml,
	"bower_components/paper-drawer-panel/test/index.html": bower_componentsPaperDrawerPanelTestIndexHtml,
	"bower_components/paper-drawer-panel/test/positioning.html": bower_componentsPaperDrawerPanelTestPositioningHtml,
	"bower_components/paper-drawer-panel/test/small-devices.html": bower_componentsPaperDrawerPanelTestSmallDevicesHtml,
	"bower_components/paper-dropdown-menu/.bower.json": bower_componentsPaperDropdownMenuBowerJson,
	"bower_components/paper-dropdown-menu/.github/ISSUE_TEMPLATE.md": bower_componentsPaperDropdownMenuGithubIssue_templateMd,
	"bower_components/paper-dropdown-menu/.gitignore": bower_componentsPaperDropdownMenuGitignore,
	"bower_components/paper-dropdown-menu/.travis.yml": bower_componentsPaperDropdownMenuTravisYml,
	"bower_components/paper-dropdown-menu/CONTRIBUTING.md": bower_componentsPaperDropdownMenuContributingMd,
	"bower_components/paper-dropdown-menu/README.md": bower_componentsPaperDropdownMenuReadmeMd,
	"bower_components/paper-dropdown-menu/bower.json": bower_componentsPaperDropdownMenuBowerJson2,
	"bower_components/paper-dropdown-menu/demo/index.html": bower_componentsPaperDropdownMenuDemoIndexHtml,
	"bower_components/paper-dropdown-menu/index.html": bower_componentsPaperDropdownMenuIndexHtml,
	"bower_components/paper-dropdown-menu/paper-dropdown-menu-icons.html": bower_componentsPaperDropdownMenuPaperDropdownMenuIconsHtml,
	"bower_components/paper-dropdown-menu/paper-dropdown-menu-light.html": bower_componentsPaperDropdownMenuPaperDropdownMenuLightHtml,
	"bower_components/paper-dropdown-menu/paper-dropdown-menu-shared-styles.html": bower_componentsPaperDropdownMenuPaperDropdownMenuSharedStylesHtml,
	"bower_components/paper-dropdown-menu/paper-dropdown-menu.html": bower_componentsPaperDropdownMenuPaperDropdownMenuHtml,
	"bower_components/paper-dropdown-menu/test/index.html": bower_componentsPaperDropdownMenuTestIndexHtml,
	"bower_components/paper-dropdown-menu/test/paper-dropdown-menu-light.html": bower_componentsPaperDropdownMenuTestPaperDropdownMenuLightHtml,
	"bower_components/paper-dropdown-menu/test/paper-dropdown-menu.html": bower_componentsPaperDropdownMenuTestPaperDropdownMenuHtml,
	"bower_components/paper-header-panel/.bower.json": bower_componentsPaperHeaderPanelBowerJson,
	"bower_components/paper-header-panel/.gitignore": bower_componentsPaperHeaderPanelGitignore,
	"bower_components/paper-header-panel/.travis.yml": bower_componentsPaperHeaderPanelTravisYml,
	"bower_components/paper-header-panel/CONTRIBUTING.md": bower_componentsPaperHeaderPanelContributingMd,
	"bower_components/paper-header-panel/README.md": bower_componentsPaperHeaderPanelReadmeMd,
	"bower_components/paper-header-panel/bower.json": bower_componentsPaperHeaderPanelBowerJson2,
	"bower_components/paper-header-panel/demo/index.html": bower_componentsPaperHeaderPanelDemoIndexHtml,
	"bower_components/paper-header-panel/hero.svg": bower_componentsPaperHeaderPanelHeroSvg,
	"bower_components/paper-header-panel/index.html": bower_componentsPaperHeaderPanelIndexHtml,
	"bower_components/paper-header-panel/paper-header-panel.html": bower_componentsPaperHeaderPanelPaperHeaderPanelHtml,
	"bower_components/paper-header-panel/test/basic.html": bower_componentsPaperHeaderPanelTestBasicHtml,
	"bower_components/paper-header-panel/test/index.html": bower_componentsPaperHeaderPanelTestIndexHtml,
	"bower_components/paper-icon-button/.bower.json": bower_componentsPaperIconButtonBowerJson,
	"bower_components/paper-icon-button/.gitignore": bower_componentsPaperIconButtonGitignore,
	"bower_components/paper-icon-button/.travis.yml": bower_componentsPaperIconButtonTravisYml,
	"bower_components/paper-icon-button/CONTRIBUTING.md": bower_componentsPaperIconButtonContributingMd,
	"bower_components/paper-icon-button/README.md": bower_componentsPaperIconButtonReadmeMd,
	"bower_components/paper-icon-button/bower.json": bower_componentsPaperIconButtonBowerJson2,
	"bower_components/paper-icon-button/demo/index.html": bower_componentsPaperIconButtonDemoIndexHtml,
	"bower_components/paper-icon-button/index.html": bower_componentsPaperIconButtonIndexHtml,
	"bower_components/paper-icon-button/paper-icon-button.html": bower_componentsPaperIconButtonPaperIconButtonHtml,
	"bower_components/paper-icon-button/test/a11y.html": bower_componentsPaperIconButtonTestA11yHtml,
	"bower_components/paper-icon-button/test/basic.html": bower_componentsPaperIconButtonTestBasicHtml,
	"bower_components/paper-icon-button/test/index.html": bower_componentsPaperIconButtonTestIndexHtml,
	"bower_components/paper-input/.bower.json": bower_componentsPaperInputBowerJson,
	"bower_components/paper-input/.github/ISSUE_TEMPLATE.md": bower_componentsPaperInputGithubIssue_templateMd,
	"bower_components/paper-input/.gitignore": bower_componentsPaperInputGitignore,
	"bower_components/paper-input/.travis.yml": bower_componentsPaperInputTravisYml,
	"bower_components/paper-input/CONTRIBUTING.md": bower_componentsPaperInputContributingMd,
	"bower_components/paper-input/README.md": bower_componentsPaperInputReadmeMd,
	"bower_components/paper-input/all-imports.html": bower_componentsPaperInputAllImportsHtml,
	"bower_components/paper-input/bower.json": bower_componentsPaperInputBowerJson2,
	"bower_components/paper-input/demo/index.html": bower_componentsPaperInputDemoIndexHtml,
	"bower_components/paper-input/demo/ssn-input.html": bower_componentsPaperInputDemoSsnInputHtml,
	"bower_components/paper-input/demo/ssn-validator.html": bower_componentsPaperInputDemoSsnValidatorHtml,
	"bower_components/paper-input/hero.svg": bower_componentsPaperInputHeroSvg,
	"bower_components/paper-input/index.html": bower_componentsPaperInputIndexHtml,
	"bower_components/paper-input/paper-input-addon-behavior.html": bower_componentsPaperInputPaperInputAddonBehaviorHtml,
	"bower_components/paper-input/paper-input-behavior.html": bower_componentsPaperInputPaperInputBehaviorHtml,
	"bower_components/paper-input/paper-input-char-counter.html": bower_componentsPaperInputPaperInputCharCounterHtml,
	"bower_components/paper-input/paper-input-container.html": bower_componentsPaperInputPaperInputContainerHtml,
	"bower_components/paper-input/paper-input-error.html": bower_componentsPaperInputPaperInputErrorHtml,
	"bower_components/paper-input/paper-input.html": bower_componentsPaperInputPaperInputHtml,
	"bower_components/paper-input/paper-textarea.html": bower_componentsPaperInputPaperTextareaHtml,
	"bower_components/paper-input/test/index.html": bower_componentsPaperInputTestIndexHtml,
	"bower_components/paper-input/test/letters-only.html": bower_componentsPaperInputTestLettersOnlyHtml,
	"bower_components/paper-input/test/paper-input-char-counter.html": bower_componentsPaperInputTestPaperInputCharCounterHtml,
	"bower_components/paper-input/test/paper-input-container.html": bower_componentsPaperInputTestPaperInputContainerHtml,
	"bower_components/paper-input/test/paper-input-error.html": bower_componentsPaperInputTestPaperInputErrorHtml,
	"bower_components/paper-input/test/paper-input.html": bower_componentsPaperInputTestPaperInputHtml,
	"bower_components/paper-input/test/paper-textarea.html": bower_componentsPaperInputTestPaperTextareaHtml,
	"bower_components/paper-item/.bower.json": bower_componentsPaperItemBowerJson,
	"bower_components/paper-item/.gitignore": bower_componentsPaperItemGitignore,
	"bower_components/paper-item/.travis.yml": bower_componentsPaperItemTravisYml,
	"bower_components/paper-item/CONTRIBUTING.md": bower_componentsPaperItemContributingMd,
	"bower_components/paper-item/README.md": bower_componentsPaperItemReadmeMd,
	"bower_components/paper-item/all-imports.html": bower_componentsPaperItemAllImportsHtml,
	"bower_components/paper-item/bower.json": bower_componentsPaperItemBowerJson2,
	"bower_components/paper-item/demo/index.html": bower_componentsPaperItemDemoIndexHtml,
	"bower_components/paper-item/index.html": bower_componentsPaperItemIndexHtml,
	"bower_components/paper-item/paper-icon-item.html": bower_componentsPaperItemPaperIconItemHtml,
	"bower_components/paper-item/paper-item-behavior.html": bower_componentsPaperItemPaperItemBehaviorHtml,
	"bower_components/paper-item/paper-item-body.html": bower_componentsPaperItemPaperItemBodyHtml,
	"bower_components/paper-item/paper-item-shared-styles.html": bower_componentsPaperItemPaperItemSharedStylesHtml,
	"bower_components/paper-item/paper-item.html": bower_componentsPaperItemPaperItemHtml,
	"bower_components/paper-item/test/index.html": bower_componentsPaperItemTestIndexHtml,
	"bower_components/paper-item/test/paper-item.html": bower_componentsPaperItemTestPaperItemHtml,
	"bower_components/paper-material/.bower.json": bower_componentsPaperMaterialBowerJson,
	"bower_components/paper-material/.gitignore": bower_componentsPaperMaterialGitignore,
	"bower_components/paper-material/.travis.yml": bower_componentsPaperMaterialTravisYml,
	"bower_components/paper-material/CONTRIBUTING.md": bower_componentsPaperMaterialContributingMd,
	"bower_components/paper-material/README.md": bower_componentsPaperMaterialReadmeMd,
	"bower_components/paper-material/bower.json": bower_componentsPaperMaterialBowerJson2,
	"bower_components/paper-material/demo/index.html": bower_componentsPaperMaterialDemoIndexHtml,
	"bower_components/paper-material/index.html": bower_componentsPaperMaterialIndexHtml,
	"bower_components/paper-material/paper-material-shared-styles.html": bower_componentsPaperMaterialPaperMaterialSharedStylesHtml,
	"bower_components/paper-material/paper-material.html": bower_componentsPaperMaterialPaperMaterialHtml,
	"bower_components/paper-material/test/index.html": bower_componentsPaperMaterialTestIndexHtml,
	"bower_components/paper-material/test/paper-material.html": bower_componentsPaperMaterialTestPaperMaterialHtml,
	"bower_components/paper-menu-button/.bower.json": bower_componentsPaperMenuButtonBowerJson,
	"bower_components/paper-menu-button/.github/ISSUE_TEMPLATE.md": bower_componentsPaperMenuButtonGithubIssue_templateMd,
	"bower_components/paper-menu-button/.gitignore": bower_componentsPaperMenuButtonGitignore,
	"bower_components/paper-menu-button/.travis.yml": bower_componentsPaperMenuButtonTravisYml,
	"bower_components/paper-menu-button/CONTRIBUTING.md": bower_componentsPaperMenuButtonContributingMd,
	"bower_components/paper-menu-button/README.md": bower_componentsPaperMenuButtonReadmeMd,
	"bower_components/paper-menu-button/bower.json": bower_componentsPaperMenuButtonBowerJson2,
	"bower_components/paper-menu-button/demo/index.html": bower_componentsPaperMenuButtonDemoIndexHtml,
	"bower_components/paper-menu-button/hero.svg": bower_componentsPaperMenuButtonHeroSvg,
	"bower_components/paper-menu-button/index.html": bower_componentsPaperMenuButtonIndexHtml,
	"bower_components/paper-menu-button/paper-menu-button-animations.html": bower_componentsPaperMenuButtonPaperMenuButtonAnimationsHtml,
	"bower_components/paper-menu-button/paper-menu-button.html": bower_componentsPaperMenuButtonPaperMenuButtonHtml,
	"bower_components/paper-menu-button/test/index.html": bower_componentsPaperMenuButtonTestIndexHtml,
	"bower_components/paper-menu-button/test/paper-menu-button.html": bower_componentsPaperMenuButtonTestPaperMenuButtonHtml,
	"bower_components/paper-ripple/.bower.json": bower_componentsPaperRippleBowerJson,
	"bower_components/paper-ripple/.gitignore": bower_componentsPaperRippleGitignore,
	"bower_components/paper-ripple/.travis.yml": bower_componentsPaperRippleTravisYml,
	"bower_components/paper-ripple/CONTRIBUTING.md": bower_componentsPaperRippleContributingMd,
	"bower_components/paper-ripple/README.md": bower_componentsPaperRippleReadmeMd,
	"bower_components/paper-ripple/bower.json": bower_componentsPaperRippleBowerJson2,
	"bower_components/paper-ripple/demo/index.html": bower_componentsPaperRippleDemoIndexHtml,
	"bower_components/paper-ripple/hero.svg": bower_componentsPaperRippleHeroSvg,
	"bower_components/paper-ripple/index.html": bower_componentsPaperRippleIndexHtml,
	"bower_components/paper-ripple/paper-ripple.html": bower_componentsPaperRipplePaperRippleHtml,
	"bower_components/paper-ripple/test/index.html": bower_componentsPaperRippleTestIndexHtml,
	"bower_components/paper-ripple/test/paper-ripple.html": bower_componentsPaperRippleTestPaperRippleHtml,
	"bower_components/paper-styles/.bower.json": bower_componentsPaperStylesBowerJson,
	"bower_components/paper-styles/CONTRIBUTING.md": bower_componentsPaperStylesContributingMd,
	"bower_components/paper-styles/README.md": bower_componentsPaperStylesReadmeMd,
	"bower_components/paper-styles/bower.json": bower_componentsPaperStylesBowerJson2,
	"bower_components/paper-styles/classes/global.html": bower_componentsPaperStylesClassesGlobalHtml,
	"bower_components/paper-styles/classes/shadow-layout.html": bower_componentsPaperStylesClassesShadowLayoutHtml,
	"bower_components/paper-styles/classes/shadow.html": bower_componentsPaperStylesClassesShadowHtml,
	"bower_components/paper-styles/classes/typography.html": bower_componentsPaperStylesClassesTypographyHtml,
	"bower_components/paper-styles/color.html": bower_componentsPaperStylesColorHtml,
	"bower_components/paper-styles/default-theme.html": bower_componentsPaperStylesDefaultThemeHtml,
	"bower_components/paper-styles/demo/index.html": bower_componentsPaperStylesDemoIndexHtml,
	"bower_components/paper-styles/demo-pages.html": bower_componentsPaperStylesDemoPagesHtml,
	"bower_components/paper-styles/demo.css": bower_componentsPaperStylesDemoCss,
	"bower_components/paper-styles/index.html": bower_componentsPaperStylesIndexHtml,
	"bower_components/paper-styles/paper-styles-classes.html": bower_componentsPaperStylesPaperStylesClassesHtml,
	"bower_components/paper-styles/paper-styles.html": bower_componentsPaperStylesPaperStylesHtml,
	"bower_components/paper-styles/shadow.html": bower_componentsPaperStylesShadowHtml,
	"bower_components/paper-styles/typography.html": bower_componentsPaperStylesTypographyHtml,
	"bower_components/paper-tabs/.bower.json": bower_componentsPaperTabsBowerJson,
	"bower_components/paper-tabs/.gitignore": bower_componentsPaperTabsGitignore,
	"bower_components/paper-tabs/.travis.yml": bower_componentsPaperTabsTravisYml,
	"bower_components/paper-tabs/CONTRIBUTING.md": bower_componentsPaperTabsContributingMd,
	"bower_components/paper-tabs/README.md": bower_componentsPaperTabsReadmeMd,
	"bower_components/paper-tabs/bower.json": bower_componentsPaperTabsBowerJson2,
	"bower_components/paper-tabs/demo/index.html": bower_componentsPaperTabsDemoIndexHtml,
	"bower_components/paper-tabs/hero.svg": bower_componentsPaperTabsHeroSvg,
	"bower_components/paper-tabs/index.html": bower_componentsPaperTabsIndexHtml,
	"bower_components/paper-tabs/paper-tab.html": bower_componentsPaperTabsPaperTabHtml,
	"bower_components/paper-tabs/paper-tabs-icons.html": bower_componentsPaperTabsPaperTabsIconsHtml,
	"bower_components/paper-tabs/paper-tabs.html": bower_componentsPaperTabsPaperTabsHtml,
	"bower_components/paper-tabs/test/attr-for-selected.html": bower_componentsPaperTabsTestAttrForSelectedHtml,
	"bower_components/paper-tabs/test/basic.html": bower_componentsPaperTabsTestBasicHtml,
	"bower_components/paper-tabs/test/index.html": bower_componentsPaperTabsTestIndexHtml,
	"bower_components/paper-toolbar/.bower.json": bower_componentsPaperToolbarBowerJson,
	"bower_components/paper-toolbar/.gitignore": bower_componentsPaperToolbarGitignore,
	"bower_components/paper-toolbar/.travis.yml": bower_componentsPaperToolbarTravisYml,
	"bower_components/paper-toolbar/CONTRIBUTING.md": bower_componentsPaperToolbarContributingMd,
	"bower_components/paper-toolbar/README.md": bower_componentsPaperToolbarReadmeMd,
	"bower_components/paper-toolbar/bower.json": bower_componentsPaperToolbarBowerJson2,
	"bower_components/paper-toolbar/demo/index.html": bower_componentsPaperToolbarDemoIndexHtml,
	"bower_components/paper-toolbar/index.html": bower_componentsPaperToolbarIndexHtml,
	"bower_components/paper-toolbar/paper-toolbar.html": bower_componentsPaperToolbarPaperToolbarHtml,
	"bower_components/paper-toolbar/test/index.html": bower_componentsPaperToolbarTestIndexHtml,
	"bower_components/paper-toolbar/test/paper-toolbar.html": bower_componentsPaperToolbarTestPaperToolbarHtml,
	"bower_components/polymer/.bower.json": bower_componentsPolymerBowerJson,
	"bower_components/polymer/LICENSE.txt": bower_componentsPolymerLicenseTxt,
	"bower_components/polymer/bower.json": bower_componentsPolymerBowerJson2,
	"bower_components/polymer/build.log": bower_componentsPolymerBuildLog,
	"bower_components/polymer/polymer-micro.html": bower_componentsPolymerPolymerMicroHtml,
	"bower_components/polymer/polymer-mini.html": bower_componentsPolymerPolymerMiniHtml,
	"bower_components/polymer/polymer.html": bower_componentsPolymerPolymerHtml,
	"bower_components/promise-polyfill/.bower.json": bower_componentsPromisePolyfillBowerJson,
	"bower_components/promise-polyfill/Gruntfile.js": bower_componentsPromisePolyfillGruntfileJs,
	"bower_components/promise-polyfill/LICENSE": bower_componentsPromisePolyfillLicense,
	"bower_components/promise-polyfill/Promise-Statics.js": bower_componentsPromisePolyfillPromiseStaticsJs,
	"bower_components/promise-polyfill/Promise.js": bower_componentsPromisePolyfillPromiseJs,
	"bower_components/promise-polyfill/Promise.min.js": bower_componentsPromisePolyfillPromiseMinJs,
	"bower_components/promise-polyfill/README.md": bower_componentsPromisePolyfillReadmeMd,
	"bower_components/promise-polyfill/bower.json": bower_componentsPromisePolyfillBowerJson2,
	"bower_components/promise-polyfill/package.json": bower_componentsPromisePolyfillPackageJson,
	"bower_components/promise-polyfill/promise-polyfill-lite.html": bower_componentsPromisePolyfillPromisePolyfillLiteHtml,
	"bower_components/promise-polyfill/promise-polyfill.html": bower_componentsPromisePolyfillPromisePolyfillHtml,
	"bower_components/web-animations-js/.bower.json": bower_componentsWebAnimationsJsBowerJson,
	"bower_components/web-animations-js/CONTRIBUTING.md": bower_componentsWebAnimationsJsContributingMd,
	"bower_components/web-animations-js/COPYING": bower_componentsWebAnimationsJsCopying,
	"bower_components/web-animations-js/History.md": bower_componentsWebAnimationsJsHistoryMd,
	"bower_components/web-animations-js/README.md": bower_componentsWebAnimationsJsReadmeMd,
	"bower_components/web-animations-js/bower.json": bower_componentsWebAnimationsJsBowerJson2,
	"bower_components/web-animations-js/web-animations-next-lite.min.js": bower_componentsWebAnimationsJsWebAnimationsNextLiteMinJs,
	"bower_components/web-animations-js/web-animations-next-lite.min.js.map": bower_componentsWebAnimationsJsWebAnimationsNextLiteMinJsMap,
	"bower_components/web-animations-js/web-animations-next.min.js": bower_componentsWebAnimationsJsWebAnimationsNextMinJs,
	"bower_components/web-animations-js/web-animations-next.min.js.map": bower_componentsWebAnimationsJsWebAnimationsNextMinJsMap,
	"bower_components/web-animations-js/web-animations.html": bower_componentsWebAnimationsJsWebAnimationsHtml,
	"bower_components/web-animations-js/web-animations.min.js": bower_componentsWebAnimationsJsWebAnimationsMinJs,
	"bower_components/web-animations-js/web-animations.min.js.map": bower_componentsWebAnimationsJsWebAnimationsMinJsMap,
	"bower_components/webcomponentsjs/.bower.json": bower_componentsWebcomponentsjsBowerJson,
	"bower_components/webcomponentsjs/CustomElements.js": bower_componentsWebcomponentsjsCustomelementsJs,
	"bower_components/webcomponentsjs/CustomElements.min.js": bower_componentsWebcomponentsjsCustomelementsMinJs,
	"bower_components/webcomponentsjs/HTMLImports.js": bower_componentsWebcomponentsjsHtmlimportsJs,
	"bower_components/webcomponentsjs/HTMLImports.min.js": bower_componentsWebcomponentsjsHtmlimportsMinJs,
	"bower_components/webcomponentsjs/MutationObserver.js": bower_componentsWebcomponentsjsMutationobserverJs,
	"bower_components/webcomponentsjs/MutationObserver.min.js": bower_componentsWebcomponentsjsMutationobserverMinJs,
	"bower_components/webcomponentsjs/README.md": bower_componentsWebcomponentsjsReadmeMd,
	"bower_components/webcomponentsjs/ShadowDOM.js": bower_componentsWebcomponentsjsShadowdomJs,
	"bower_components/webcomponentsjs/ShadowDOM.min.js": bower_componentsWebcomponentsjsShadowdomMinJs,
	"bower_components/webcomponentsjs/bower.json": bower_componentsWebcomponentsjsBowerJson2,
	"bower_components/webcomponentsjs/build.log": bower_componentsWebcomponentsjsBuildLog,
	"bower_components/webcomponentsjs/package.json": bower_componentsWebcomponentsjsPackageJson,
	"bower_components/webcomponentsjs/webcomponents-lite.js": bower_componentsWebcomponentsjsWebcomponentsLiteJs,
	"bower_components/webcomponentsjs/webcomponents-lite.min.js": bower_componentsWebcomponentsjsWebcomponentsLiteMinJs,
	"bower_components/webcomponentsjs/webcomponents.js": bower_componentsWebcomponentsjsWebcomponentsJs,
	"bower_components/webcomponentsjs/webcomponents.min.js": bower_componentsWebcomponentsjsWebcomponentsMinJs,
	"pages/alert.html": pagesAlertHtml,
	"pages/index.html": pagesIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"bower_components": &bintree{nil, map[string]*bintree{
		"font-roboto": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsFontRobotoBowerJson, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsFontRobotoReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsFontRobotoBowerJson2, map[string]*bintree{}},
			"roboto.html": &bintree{bower_componentsFontRobotoRobotoHtml, map[string]*bintree{}},
		}},
		"iron-a11y-announcer": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronA11yAnnouncerBowerJson, map[string]*bintree{}},
			".github": &bintree{nil, map[string]*bintree{
				"ISSUE_TEMPLATE.md": &bintree{bower_componentsIronA11yAnnouncerGithubIssue_templateMd, map[string]*bintree{}},
			}},
			".gitignore": &bintree{bower_componentsIronA11yAnnouncerGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronA11yAnnouncerTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronA11yAnnouncerContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronA11yAnnouncerReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronA11yAnnouncerBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronA11yAnnouncerDemoIndexHtml, map[string]*bintree{}},
				"x-announces.html": &bintree{bower_componentsIronA11yAnnouncerDemoXAnnouncesHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsIronA11yAnnouncerIndexHtml, map[string]*bintree{}},
			"iron-a11y-announcer.html": &bintree{bower_componentsIronA11yAnnouncerIronA11yAnnouncerHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronA11yAnnouncerTestIndexHtml, map[string]*bintree{}},
				"iron-a11y-announcer.html": &bintree{bower_componentsIronA11yAnnouncerTestIronA11yAnnouncerHtml, map[string]*bintree{}},
			}},
		}},
		"iron-a11y-keys-behavior": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronA11yKeysBehaviorBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsIronA11yKeysBehaviorGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronA11yKeysBehaviorTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronA11yKeysBehaviorContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronA11yKeysBehaviorReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronA11yKeysBehaviorBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronA11yKeysBehaviorDemoIndexHtml, map[string]*bintree{}},
				"x-key-aware.html": &bintree{bower_componentsIronA11yKeysBehaviorDemoXKeyAwareHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsIronA11yKeysBehaviorIndexHtml, map[string]*bintree{}},
			"iron-a11y-keys-behavior.html": &bintree{bower_componentsIronA11yKeysBehaviorIronA11yKeysBehaviorHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"basic-test.html": &bintree{bower_componentsIronA11yKeysBehaviorTestBasicTestHtml, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsIronA11yKeysBehaviorTestIndexHtml, map[string]*bintree{}},
			}},
		}},
		"iron-ajax": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronAjaxBowerJson, map[string]*bintree{}},
			".github": &bintree{nil, map[string]*bintree{
				"ISSUE_TEMPLATE.md": &bintree{bower_componentsIronAjaxGithubIssue_templateMd, map[string]*bintree{}},
			}},
			".gitignore": &bintree{bower_componentsIronAjaxGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronAjaxTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronAjaxContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronAjaxReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronAjaxBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronAjaxDemoIndexHtml, map[string]*bintree{}},
			}},
			"hero.svg": &bintree{bower_componentsIronAjaxHeroSvg, map[string]*bintree{}},
			"index.html": &bintree{bower_componentsIronAjaxIndexHtml, map[string]*bintree{}},
			"iron-ajax.html": &bintree{bower_componentsIronAjaxIronAjaxHtml, map[string]*bintree{}},
			"iron-request.html": &bintree{bower_componentsIronAjaxIronRequestHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronAjaxTestIndexHtml, map[string]*bintree{}},
				"iron-ajax.html": &bintree{bower_componentsIronAjaxTestIronAjaxHtml, map[string]*bintree{}},
				"iron-request.html": &bintree{bower_componentsIronAjaxTestIronRequestHtml, map[string]*bintree{}},
			}},
		}},
		"iron-autogrow-textarea": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronAutogrowTextareaBowerJson, map[string]*bintree{}},
			".github": &bintree{nil, map[string]*bintree{
				"ISSUE_TEMPLATE.md": &bintree{bower_componentsIronAutogrowTextareaGithubIssue_templateMd, map[string]*bintree{}},
			}},
			".gitignore": &bintree{bower_componentsIronAutogrowTextareaGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronAutogrowTextareaTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronAutogrowTextareaContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronAutogrowTextareaReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronAutogrowTextareaBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronAutogrowTextareaDemoIndexHtml, map[string]*bintree{}},
			}},
			"hero.svg": &bintree{bower_componentsIronAutogrowTextareaHeroSvg, map[string]*bintree{}},
			"index.html": &bintree{bower_componentsIronAutogrowTextareaIndexHtml, map[string]*bintree{}},
			"iron-autogrow-textarea.html": &bintree{bower_componentsIronAutogrowTextareaIronAutogrowTextareaHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"basic.html": &bintree{bower_componentsIronAutogrowTextareaTestBasicHtml, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsIronAutogrowTextareaTestIndexHtml, map[string]*bintree{}},
			}},
		}},
		"iron-behaviors": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronBehaviorsBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsIronBehaviorsGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronBehaviorsTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronBehaviorsContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronBehaviorsReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronBehaviorsBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronBehaviorsDemoIndexHtml, map[string]*bintree{}},
				"simple-button.html": &bintree{bower_componentsIronBehaviorsDemoSimpleButtonHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsIronBehaviorsIndexHtml, map[string]*bintree{}},
			"iron-button-state.html": &bintree{bower_componentsIronBehaviorsIronButtonStateHtml, map[string]*bintree{}},
			"iron-control-state.html": &bintree{bower_componentsIronBehaviorsIronControlStateHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"active-state.html": &bintree{bower_componentsIronBehaviorsTestActiveStateHtml, map[string]*bintree{}},
				"disabled-state.html": &bintree{bower_componentsIronBehaviorsTestDisabledStateHtml, map[string]*bintree{}},
				"focused-state.html": &bintree{bower_componentsIronBehaviorsTestFocusedStateHtml, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsIronBehaviorsTestIndexHtml, map[string]*bintree{}},
				"test-elements.html": &bintree{bower_componentsIronBehaviorsTestTestElementsHtml, map[string]*bintree{}},
			}},
		}},
		"iron-checked-element-behavior": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronCheckedElementBehaviorBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsIronCheckedElementBehaviorGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronCheckedElementBehaviorTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronCheckedElementBehaviorContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronCheckedElementBehaviorReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronCheckedElementBehaviorBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronCheckedElementBehaviorDemoIndexHtml, map[string]*bintree{}},
				"simple-checkbox.html": &bintree{bower_componentsIronCheckedElementBehaviorDemoSimpleCheckboxHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsIronCheckedElementBehaviorIndexHtml, map[string]*bintree{}},
			"iron-checked-element-behavior.html": &bintree{bower_componentsIronCheckedElementBehaviorIronCheckedElementBehaviorHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"basic.html": &bintree{bower_componentsIronCheckedElementBehaviorTestBasicHtml, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsIronCheckedElementBehaviorTestIndexHtml, map[string]*bintree{}},
				"simple-checkbox.html": &bintree{bower_componentsIronCheckedElementBehaviorTestSimpleCheckboxHtml, map[string]*bintree{}},
			}},
		}},
		"iron-dropdown": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronDropdownBowerJson, map[string]*bintree{}},
			".github": &bintree{nil, map[string]*bintree{
				"ISSUE_TEMPLATE.md": &bintree{bower_componentsIronDropdownGithubIssue_templateMd, map[string]*bintree{}},
			}},
			".gitignore": &bintree{bower_componentsIronDropdownGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronDropdownTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronDropdownContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronDropdownReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronDropdownBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"grow-height-animation.html": &bintree{bower_componentsIronDropdownDemoGrowHeightAnimationHtml, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsIronDropdownDemoIndexHtml, map[string]*bintree{}},
				"x-select.html": &bintree{bower_componentsIronDropdownDemoXSelectHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsIronDropdownIndexHtml, map[string]*bintree{}},
			"iron-dropdown-scroll-manager.html": &bintree{bower_componentsIronDropdownIronDropdownScrollManagerHtml, map[string]*bintree{}},
			"iron-dropdown.html": &bintree{bower_componentsIronDropdownIronDropdownHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronDropdownTestIndexHtml, map[string]*bintree{}},
				"iron-dropdown-scroll-manager.html": &bintree{bower_componentsIronDropdownTestIronDropdownScrollManagerHtml, map[string]*bintree{}},
				"iron-dropdown.html": &bintree{bower_componentsIronDropdownTestIronDropdownHtml, map[string]*bintree{}},
				"x-scrollable-element.html": &bintree{bower_componentsIronDropdownTestXScrollableElementHtml, map[string]*bintree{}},
			}},
		}},
		"iron-fit-behavior": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronFitBehaviorBowerJson, map[string]*bintree{}},
			".github": &bintree{nil, map[string]*bintree{
				"ISSUE_TEMPLATE.md": &bintree{bower_componentsIronFitBehaviorGithubIssue_templateMd, map[string]*bintree{}},
			}},
			".gitignore": &bintree{bower_componentsIronFitBehaviorGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronFitBehaviorTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronFitBehaviorContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronFitBehaviorReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronFitBehaviorBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronFitBehaviorDemoIndexHtml, map[string]*bintree{}},
				"simple-fit.html": &bintree{bower_componentsIronFitBehaviorDemoSimpleFitHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsIronFitBehaviorIndexHtml, map[string]*bintree{}},
			"iron-fit-behavior.html": &bintree{bower_componentsIronFitBehaviorIronFitBehaviorHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronFitBehaviorTestIndexHtml, map[string]*bintree{}},
				"iron-fit-behavior.html": &bintree{bower_componentsIronFitBehaviorTestIronFitBehaviorHtml, map[string]*bintree{}},
				"test-fit.html": &bintree{bower_componentsIronFitBehaviorTestTestFitHtml, map[string]*bintree{}},
			}},
		}},
		"iron-flex-layout": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronFlexLayoutBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsIronFlexLayoutGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronFlexLayoutTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronFlexLayoutContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronFlexLayoutReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronFlexLayoutBowerJson2, map[string]*bintree{}},
			"classes": &bintree{nil, map[string]*bintree{
				"iron-flex-layout.html": &bintree{bower_componentsIronFlexLayoutClassesIronFlexLayoutHtml, map[string]*bintree{}},
				"iron-shadow-flex-layout.html": &bintree{bower_componentsIronFlexLayoutClassesIronShadowFlexLayoutHtml, map[string]*bintree{}},
			}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronFlexLayoutDemoIndexHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsIronFlexLayoutIndexHtml, map[string]*bintree{}},
			"iron-flex-layout-classes.html": &bintree{bower_componentsIronFlexLayoutIronFlexLayoutClassesHtml, map[string]*bintree{}},
			"iron-flex-layout.html": &bintree{bower_componentsIronFlexLayoutIronFlexLayoutHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronFlexLayoutTestIndexHtml, map[string]*bintree{}},
				"iron-flex-layout-classes.html": &bintree{bower_componentsIronFlexLayoutTestIronFlexLayoutClassesHtml, map[string]*bintree{}},
				"iron-flex-layout.html": &bintree{bower_componentsIronFlexLayoutTestIronFlexLayoutHtml, map[string]*bintree{}},
			}},
		}},
		"iron-form-element-behavior": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronFormElementBehaviorBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsIronFormElementBehaviorGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronFormElementBehaviorTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronFormElementBehaviorContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronFormElementBehaviorReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronFormElementBehaviorBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronFormElementBehaviorDemoIndexHtml, map[string]*bintree{}},
				"simple-element.html": &bintree{bower_componentsIronFormElementBehaviorDemoSimpleElementHtml, map[string]*bintree{}},
				"simple-form.html": &bintree{bower_componentsIronFormElementBehaviorDemoSimpleFormHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsIronFormElementBehaviorIndexHtml, map[string]*bintree{}},
			"iron-form-element-behavior.html": &bintree{bower_componentsIronFormElementBehaviorIronFormElementBehaviorHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"basic.html": &bintree{bower_componentsIronFormElementBehaviorTestBasicHtml, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsIronFormElementBehaviorTestIndexHtml, map[string]*bintree{}},
				"simple-element.html": &bintree{bower_componentsIronFormElementBehaviorTestSimpleElementHtml, map[string]*bintree{}},
				"simple-form.html": &bintree{bower_componentsIronFormElementBehaviorTestSimpleFormHtml, map[string]*bintree{}},
			}},
		}},
		"iron-icon": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronIconBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsIronIconGitignore, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronIconReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronIconBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"async.html": &bintree{bower_componentsIronIconDemoAsyncHtml, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsIronIconDemoIndexHtml, map[string]*bintree{}},
				"location.png": &bintree{bower_componentsIronIconDemoLocationPng, map[string]*bintree{}},
			}},
			"hero.svg": &bintree{bower_componentsIronIconHeroSvg, map[string]*bintree{}},
			"index.html": &bintree{bower_componentsIronIconIndexHtml, map[string]*bintree{}},
			"iron-icon.html": &bintree{bower_componentsIronIconIronIconHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronIconTestIndexHtml, map[string]*bintree{}},
				"iron-icon.html": &bintree{bower_componentsIronIconTestIronIconHtml, map[string]*bintree{}},
			}},
		}},
		"iron-icons": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronIconsBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsIronIconsGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronIconsTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronIconsContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronIconsReadmeMd, map[string]*bintree{}},
			"av-icons.html": &bintree{bower_componentsIronIconsAvIconsHtml, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronIconsBowerJson2, map[string]*bintree{}},
			"communication-icons.html": &bintree{bower_componentsIronIconsCommunicationIconsHtml, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronIconsDemoIndexHtml, map[string]*bintree{}},
			}},
			"device-icons.html": &bintree{bower_componentsIronIconsDeviceIconsHtml, map[string]*bintree{}},
			"editor-icons.html": &bintree{bower_componentsIronIconsEditorIconsHtml, map[string]*bintree{}},
			"hardware-icons.html": &bintree{bower_componentsIronIconsHardwareIconsHtml, map[string]*bintree{}},
			"hero.svg": &bintree{bower_componentsIronIconsHeroSvg, map[string]*bintree{}},
			"image-icons.html": &bintree{bower_componentsIronIconsImageIconsHtml, map[string]*bintree{}},
			"index.html": &bintree{bower_componentsIronIconsIndexHtml, map[string]*bintree{}},
			"iron-icons.html": &bintree{bower_componentsIronIconsIronIconsHtml, map[string]*bintree{}},
			"maps-icons.html": &bintree{bower_componentsIronIconsMapsIconsHtml, map[string]*bintree{}},
			"notification-icons.html": &bintree{bower_componentsIronIconsNotificationIconsHtml, map[string]*bintree{}},
			"places-icons.html": &bintree{bower_componentsIronIconsPlacesIconsHtml, map[string]*bintree{}},
			"social-icons.html": &bintree{bower_componentsIronIconsSocialIconsHtml, map[string]*bintree{}},
		}},
		"iron-iconset-svg": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronIconsetSvgBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsIronIconsetSvgGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronIconsetSvgTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronIconsetSvgContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronIconsetSvgReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronIconsetSvgBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronIconsetSvgDemoIndexHtml, map[string]*bintree{}},
				"svg-sample-icons.html": &bintree{bower_componentsIronIconsetSvgDemoSvgSampleIconsHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsIronIconsetSvgIndexHtml, map[string]*bintree{}},
			"iron-iconset-svg.html": &bintree{bower_componentsIronIconsetSvgIronIconsetSvgHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronIconsetSvgTestIndexHtml, map[string]*bintree{}},
				"iron-iconset-svg.html": &bintree{bower_componentsIronIconsetSvgTestIronIconsetSvgHtml, map[string]*bintree{}},
			}},
		}},
		"iron-image": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronImageBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsIronImageGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronImageTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronImageContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronImageReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronImageBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronImageDemoIndexHtml, map[string]*bintree{}},
				"loading.png": &bintree{bower_componentsIronImageDemoLoadingPng, map[string]*bintree{}},
				"polymer.svg": &bintree{bower_componentsIronImageDemoPolymerSvg, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsIronImageIndexHtml, map[string]*bintree{}},
			"iron-image.html": &bintree{bower_componentsIronImageIronImageHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronImageTestIndexHtml, map[string]*bintree{}},
				"iron-image.html": &bintree{bower_componentsIronImageTestIronImageHtml, map[string]*bintree{}},
			}},
		}},
		"iron-input": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronInputBowerJson, map[string]*bintree{}},
			".github": &bintree{nil, map[string]*bintree{
				"ISSUE_TEMPLATE.md": &bintree{bower_componentsIronInputGithubIssue_templateMd, map[string]*bintree{}},
			}},
			".gitignore": &bintree{bower_componentsIronInputGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronInputTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronInputContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronInputReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronInputBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronInputDemoIndexHtml, map[string]*bintree{}},
			}},
			"hero.svg": &bintree{bower_componentsIronInputHeroSvg, map[string]*bintree{}},
			"index.html": &bintree{bower_componentsIronInputIndexHtml, map[string]*bintree{}},
			"iron-input.html": &bintree{bower_componentsIronInputIronInputHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"disabled-input.html": &bintree{bower_componentsIronInputTestDisabledInputHtml, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsIronInputTestIndexHtml, map[string]*bintree{}},
				"iron-input.html": &bintree{bower_componentsIronInputTestIronInputHtml, map[string]*bintree{}},
				"letters-only.html": &bintree{bower_componentsIronInputTestLettersOnlyHtml, map[string]*bintree{}},
			}},
		}},
		"iron-media-query": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronMediaQueryBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsIronMediaQueryGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronMediaQueryTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronMediaQueryContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronMediaQueryReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronMediaQueryBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronMediaQueryDemoIndexHtml, map[string]*bintree{}},
			}},
			"hero.svg": &bintree{bower_componentsIronMediaQueryHeroSvg, map[string]*bintree{}},
			"index.html": &bintree{bower_componentsIronMediaQueryIndexHtml, map[string]*bintree{}},
			"iron-media-query.html": &bintree{bower_componentsIronMediaQueryIronMediaQueryHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"basic.html": &bintree{bower_componentsIronMediaQueryTestBasicHtml, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsIronMediaQueryTestIndexHtml, map[string]*bintree{}},
			}},
		}},
		"iron-menu-behavior": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronMenuBehaviorBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsIronMenuBehaviorGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronMenuBehaviorTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronMenuBehaviorContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronMenuBehaviorReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronMenuBehaviorBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronMenuBehaviorDemoIndexHtml, map[string]*bintree{}},
				"simple-menu.html": &bintree{bower_componentsIronMenuBehaviorDemoSimpleMenuHtml, map[string]*bintree{}},
				"simple-menubar.html": &bintree{bower_componentsIronMenuBehaviorDemoSimpleMenubarHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsIronMenuBehaviorIndexHtml, map[string]*bintree{}},
			"iron-menu-behavior.html": &bintree{bower_componentsIronMenuBehaviorIronMenuBehaviorHtml, map[string]*bintree{}},
			"iron-menubar-behavior.html": &bintree{bower_componentsIronMenuBehaviorIronMenubarBehaviorHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronMenuBehaviorTestIndexHtml, map[string]*bintree{}},
				"iron-menu-behavior.html": &bintree{bower_componentsIronMenuBehaviorTestIronMenuBehaviorHtml, map[string]*bintree{}},
				"iron-menubar-behavior.html": &bintree{bower_componentsIronMenuBehaviorTestIronMenubarBehaviorHtml, map[string]*bintree{}},
				"test-menu.html": &bintree{bower_componentsIronMenuBehaviorTestTestMenuHtml, map[string]*bintree{}},
				"test-menubar.html": &bintree{bower_componentsIronMenuBehaviorTestTestMenubarHtml, map[string]*bintree{}},
			}},
		}},
		"iron-meta": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronMetaBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsIronMetaGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronMetaTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronMetaContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronMetaReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronMetaBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronMetaDemoIndexHtml, map[string]*bintree{}},
			}},
			"hero.svg": &bintree{bower_componentsIronMetaHeroSvg, map[string]*bintree{}},
			"index.html": &bintree{bower_componentsIronMetaIndexHtml, map[string]*bintree{}},
			"iron-meta.html": &bintree{bower_componentsIronMetaIronMetaHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"basic.html": &bintree{bower_componentsIronMetaTestBasicHtml, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsIronMetaTestIndexHtml, map[string]*bintree{}},
				"iron-meta.html": &bintree{bower_componentsIronMetaTestIronMetaHtml, map[string]*bintree{}},
			}},
		}},
		"iron-overlay-behavior": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronOverlayBehaviorBowerJson, map[string]*bintree{}},
			".github": &bintree{nil, map[string]*bintree{
				"ISSUE_TEMPLATE.md": &bintree{bower_componentsIronOverlayBehaviorGithubIssue_templateMd, map[string]*bintree{}},
			}},
			".gitignore": &bintree{bower_componentsIronOverlayBehaviorGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronOverlayBehaviorTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronOverlayBehaviorContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronOverlayBehaviorReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronOverlayBehaviorBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronOverlayBehaviorDemoIndexHtml, map[string]*bintree{}},
				"simple-overlay.html": &bintree{bower_componentsIronOverlayBehaviorDemoSimpleOverlayHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsIronOverlayBehaviorIndexHtml, map[string]*bintree{}},
			"iron-focusables-helper.html": &bintree{bower_componentsIronOverlayBehaviorIronFocusablesHelperHtml, map[string]*bintree{}},
			"iron-overlay-backdrop.html": &bintree{bower_componentsIronOverlayBehaviorIronOverlayBackdropHtml, map[string]*bintree{}},
			"iron-overlay-behavior.html": &bintree{bower_componentsIronOverlayBehaviorIronOverlayBehaviorHtml, map[string]*bintree{}},
			"iron-overlay-manager.html": &bintree{bower_componentsIronOverlayBehaviorIronOverlayManagerHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronOverlayBehaviorTestIndexHtml, map[string]*bintree{}},
				"iron-focusables-helper.html": &bintree{bower_componentsIronOverlayBehaviorTestIronFocusablesHelperHtml, map[string]*bintree{}},
				"iron-overlay-backdrop.html": &bintree{bower_componentsIronOverlayBehaviorTestIronOverlayBackdropHtml, map[string]*bintree{}},
				"iron-overlay-behavior.html": &bintree{bower_componentsIronOverlayBehaviorTestIronOverlayBehaviorHtml, map[string]*bintree{}},
				"test-buttons-wrapper.html": &bintree{bower_componentsIronOverlayBehaviorTestTestButtonsWrapperHtml, map[string]*bintree{}},
				"test-buttons.html": &bintree{bower_componentsIronOverlayBehaviorTestTestButtonsHtml, map[string]*bintree{}},
				"test-menu-button.html": &bintree{bower_componentsIronOverlayBehaviorTestTestMenuButtonHtml, map[string]*bintree{}},
				"test-overlay.html": &bintree{bower_componentsIronOverlayBehaviorTestTestOverlayHtml, map[string]*bintree{}},
				"test-overlay2.html": &bintree{bower_componentsIronOverlayBehaviorTestTestOverlay2Html, map[string]*bintree{}},
			}},
		}},
		"iron-resizable-behavior": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronResizableBehaviorBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsIronResizableBehaviorGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronResizableBehaviorTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronResizableBehaviorContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronResizableBehaviorReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronResizableBehaviorBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronResizableBehaviorDemoIndexHtml, map[string]*bintree{}},
				"src": &bintree{nil, map[string]*bintree{
					"x-app.html": &bintree{bower_componentsIronResizableBehaviorDemoSrcXAppHtml, map[string]*bintree{}},
				}},
			}},
			"index.html": &bintree{bower_componentsIronResizableBehaviorIndexHtml, map[string]*bintree{}},
			"iron-resizable-behavior.html": &bintree{bower_componentsIronResizableBehaviorIronResizableBehaviorHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"basic.html": &bintree{bower_componentsIronResizableBehaviorTestBasicHtml, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsIronResizableBehaviorTestIndexHtml, map[string]*bintree{}},
				"iron-resizable-behavior.html": &bintree{bower_componentsIronResizableBehaviorTestIronResizableBehaviorHtml, map[string]*bintree{}},
				"test-elements.html": &bintree{bower_componentsIronResizableBehaviorTestTestElementsHtml, map[string]*bintree{}},
			}},
		}},
		"iron-selector": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronSelectorBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsIronSelectorGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsIronSelectorTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsIronSelectorContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronSelectorReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronSelectorBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronSelectorDemoIndexHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsIronSelectorIndexHtml, map[string]*bintree{}},
			"iron-multi-selectable.html": &bintree{bower_componentsIronSelectorIronMultiSelectableHtml, map[string]*bintree{}},
			"iron-selectable.html": &bintree{bower_componentsIronSelectorIronSelectableHtml, map[string]*bintree{}},
			"iron-selection.html": &bintree{bower_componentsIronSelectorIronSelectionHtml, map[string]*bintree{}},
			"iron-selector.html": &bintree{bower_componentsIronSelectorIronSelectorHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"activate-event.html": &bintree{bower_componentsIronSelectorTestActivateEventHtml, map[string]*bintree{}},
				"basic.html": &bintree{bower_componentsIronSelectorTestBasicHtml, map[string]*bintree{}},
				"content-element.html": &bintree{bower_componentsIronSelectorTestContentElementHtml, map[string]*bintree{}},
				"content.html": &bintree{bower_componentsIronSelectorTestContentHtml, map[string]*bintree{}},
				"excluded-local-names.html": &bintree{bower_componentsIronSelectorTestExcludedLocalNamesHtml, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsIronSelectorTestIndexHtml, map[string]*bintree{}},
				"multi.html": &bintree{bower_componentsIronSelectorTestMultiHtml, map[string]*bintree{}},
				"next-previous.html": &bintree{bower_componentsIronSelectorTestNextPreviousHtml, map[string]*bintree{}},
				"numeric-ids.html": &bintree{bower_componentsIronSelectorTestNumericIdsHtml, map[string]*bintree{}},
				"selected-attribute.html": &bintree{bower_componentsIronSelectorTestSelectedAttributeHtml, map[string]*bintree{}},
				"template-repeat.html": &bintree{bower_componentsIronSelectorTestTemplateRepeatHtml, map[string]*bintree{}},
			}},
		}},
		"iron-validatable-behavior": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsIronValidatableBehaviorBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsIronValidatableBehaviorGitignore, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsIronValidatableBehaviorReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsIronValidatableBehaviorBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"cats-only.html": &bintree{bower_componentsIronValidatableBehaviorDemoCatsOnlyHtml, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsIronValidatableBehaviorDemoIndexHtml, map[string]*bintree{}},
				"validatable-input.html": &bintree{bower_componentsIronValidatableBehaviorDemoValidatableInputHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsIronValidatableBehaviorIndexHtml, map[string]*bintree{}},
			"iron-validatable-behavior.html": &bintree{bower_componentsIronValidatableBehaviorIronValidatableBehaviorHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsIronValidatableBehaviorTestIndexHtml, map[string]*bintree{}},
				"iron-validatable-behavior.html": &bintree{bower_componentsIronValidatableBehaviorTestIronValidatableBehaviorHtml, map[string]*bintree{}},
				"test-validatable.html": &bintree{bower_componentsIronValidatableBehaviorTestTestValidatableHtml, map[string]*bintree{}},
			}},
		}},
		"neon-animation": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsNeonAnimationBowerJson, map[string]*bintree{}},
			".github": &bintree{nil, map[string]*bintree{
				"ISSUE_TEMPLATE.md": &bintree{bower_componentsNeonAnimationGithubIssue_templateMd, map[string]*bintree{}},
			}},
			".gitignore": &bintree{bower_componentsNeonAnimationGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsNeonAnimationTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsNeonAnimationContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsNeonAnimationReadmeMd, map[string]*bintree{}},
			"animations": &bintree{nil, map[string]*bintree{
				"cascaded-animation.html": &bintree{bower_componentsNeonAnimationAnimationsCascadedAnimationHtml, map[string]*bintree{}},
				"fade-in-animation.html": &bintree{bower_componentsNeonAnimationAnimationsFadeInAnimationHtml, map[string]*bintree{}},
				"fade-out-animation.html": &bintree{bower_componentsNeonAnimationAnimationsFadeOutAnimationHtml, map[string]*bintree{}},
				"hero-animation.html": &bintree{bower_componentsNeonAnimationAnimationsHeroAnimationHtml, map[string]*bintree{}},
				"opaque-animation.html": &bintree{bower_componentsNeonAnimationAnimationsOpaqueAnimationHtml, map[string]*bintree{}},
				"reverse-ripple-animation.html": &bintree{bower_componentsNeonAnimationAnimationsReverseRippleAnimationHtml, map[string]*bintree{}},
				"ripple-animation.html": &bintree{bower_componentsNeonAnimationAnimationsRippleAnimationHtml, map[string]*bintree{}},
				"scale-down-animation.html": &bintree{bower_componentsNeonAnimationAnimationsScaleDownAnimationHtml, map[string]*bintree{}},
				"scale-up-animation.html": &bintree{bower_componentsNeonAnimationAnimationsScaleUpAnimationHtml, map[string]*bintree{}},
				"slide-down-animation.html": &bintree{bower_componentsNeonAnimationAnimationsSlideDownAnimationHtml, map[string]*bintree{}},
				"slide-from-bottom-animation.html": &bintree{bower_componentsNeonAnimationAnimationsSlideFromBottomAnimationHtml, map[string]*bintree{}},
				"slide-from-left-animation.html": &bintree{bower_componentsNeonAnimationAnimationsSlideFromLeftAnimationHtml, map[string]*bintree{}},
				"slide-from-right-animation.html": &bintree{bower_componentsNeonAnimationAnimationsSlideFromRightAnimationHtml, map[string]*bintree{}},
				"slide-from-top-animation.html": &bintree{bower_componentsNeonAnimationAnimationsSlideFromTopAnimationHtml, map[string]*bintree{}},
				"slide-left-animation.html": &bintree{bower_componentsNeonAnimationAnimationsSlideLeftAnimationHtml, map[string]*bintree{}},
				"slide-right-animation.html": &bintree{bower_componentsNeonAnimationAnimationsSlideRightAnimationHtml, map[string]*bintree{}},
				"slide-up-animation.html": &bintree{bower_componentsNeonAnimationAnimationsSlideUpAnimationHtml, map[string]*bintree{}},
				"transform-animation.html": &bintree{bower_componentsNeonAnimationAnimationsTransformAnimationHtml, map[string]*bintree{}},
			}},
			"bower.json": &bintree{bower_componentsNeonAnimationBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"card": &bintree{nil, map[string]*bintree{
					"index.html": &bintree{bower_componentsNeonAnimationDemoCardIndexHtml, map[string]*bintree{}},
					"x-card.html": &bintree{bower_componentsNeonAnimationDemoCardXCardHtml, map[string]*bintree{}},
					"x-cards-list.html": &bintree{bower_componentsNeonAnimationDemoCardXCardsListHtml, map[string]*bintree{}},
				}},
				"declarative": &bintree{nil, map[string]*bintree{
					"index.html": &bintree{bower_componentsNeonAnimationDemoDeclarativeIndexHtml, map[string]*bintree{}},
				}},
				"doc": &bintree{nil, map[string]*bintree{
					"index.html": &bintree{bower_componentsNeonAnimationDemoDocIndexHtml, map[string]*bintree{}},
					"my-animatable.html": &bintree{bower_componentsNeonAnimationDemoDocMyAnimatableHtml, map[string]*bintree{}},
					"my-dialog.html": &bintree{bower_componentsNeonAnimationDemoDocMyDialogHtml, map[string]*bintree{}},
				}},
				"dropdown": &bintree{nil, map[string]*bintree{
					"animated-dropdown.html": &bintree{bower_componentsNeonAnimationDemoDropdownAnimatedDropdownHtml, map[string]*bintree{}},
					"index.html": &bintree{bower_componentsNeonAnimationDemoDropdownIndexHtml, map[string]*bintree{}},
				}},
				"grid": &bintree{nil, map[string]*bintree{
					"animated-grid.html": &bintree{bower_componentsNeonAnimationDemoGridAnimatedGridHtml, map[string]*bintree{}},
					"fullsize-page-with-card.html": &bintree{bower_componentsNeonAnimationDemoGridFullsizePageWithCardHtml, map[string]*bintree{}},
					"index.html": &bintree{bower_componentsNeonAnimationDemoGridIndexHtml, map[string]*bintree{}},
				}},
				"index.html": &bintree{bower_componentsNeonAnimationDemoIndexHtml, map[string]*bintree{}},
				"list": &bintree{nil, map[string]*bintree{
					"full-view.html": &bintree{bower_componentsNeonAnimationDemoListFullViewHtml, map[string]*bintree{}},
					"index.html": &bintree{bower_componentsNeonAnimationDemoListIndexHtml, map[string]*bintree{}},
					"list-demo.html": &bintree{bower_componentsNeonAnimationDemoListListDemoHtml, map[string]*bintree{}},
					"list-view.html": &bintree{bower_componentsNeonAnimationDemoListListViewHtml, map[string]*bintree{}},
				}},
				"load": &bintree{nil, map[string]*bintree{
					"animated-grid.html": &bintree{bower_componentsNeonAnimationDemoLoadAnimatedGridHtml, map[string]*bintree{}},
					"full-page.html": &bintree{bower_componentsNeonAnimationDemoLoadFullPageHtml, map[string]*bintree{}},
					"index.html": &bintree{bower_componentsNeonAnimationDemoLoadIndexHtml, map[string]*bintree{}},
				}},
				"reprojection": &bintree{nil, map[string]*bintree{
					"animated-grid.html": &bintree{bower_componentsNeonAnimationDemoReprojectionAnimatedGridHtml, map[string]*bintree{}},
					"fullsize-page-with-card.html": &bintree{bower_componentsNeonAnimationDemoReprojectionFullsizePageWithCardHtml, map[string]*bintree{}},
					"index.html": &bintree{bower_componentsNeonAnimationDemoReprojectionIndexHtml, map[string]*bintree{}},
					"reprojected-pages.html": &bintree{bower_componentsNeonAnimationDemoReprojectionReprojectedPagesHtml, map[string]*bintree{}},
				}},
				"shared-styles.html": &bintree{bower_componentsNeonAnimationDemoSharedStylesHtml, map[string]*bintree{}},
				"tiles": &bintree{nil, map[string]*bintree{
					"circles-page.html": &bintree{bower_componentsNeonAnimationDemoTilesCirclesPageHtml, map[string]*bintree{}},
					"index.html": &bintree{bower_componentsNeonAnimationDemoTilesIndexHtml, map[string]*bintree{}},
					"squares-page.html": &bintree{bower_componentsNeonAnimationDemoTilesSquaresPageHtml, map[string]*bintree{}},
				}},
			}},
			"guides": &bintree{nil, map[string]*bintree{
				"neon-animation.md": &bintree{bower_componentsNeonAnimationGuidesNeonAnimationMd, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsNeonAnimationIndexHtml, map[string]*bintree{}},
			"neon-animatable-behavior.html": &bintree{bower_componentsNeonAnimationNeonAnimatableBehaviorHtml, map[string]*bintree{}},
			"neon-animatable.html": &bintree{bower_componentsNeonAnimationNeonAnimatableHtml, map[string]*bintree{}},
			"neon-animated-pages.html": &bintree{bower_componentsNeonAnimationNeonAnimatedPagesHtml, map[string]*bintree{}},
			"neon-animation-behavior.html": &bintree{bower_componentsNeonAnimationNeonAnimationBehaviorHtml, map[string]*bintree{}},
			"neon-animation-runner-behavior.html": &bintree{bower_componentsNeonAnimationNeonAnimationRunnerBehaviorHtml, map[string]*bintree{}},
			"neon-animation.html": &bintree{bower_componentsNeonAnimationNeonAnimationHtml, map[string]*bintree{}},
			"neon-animations.html": &bintree{bower_componentsNeonAnimationNeonAnimationsHtml, map[string]*bintree{}},
			"neon-shared-element-animatable-behavior.html": &bintree{bower_componentsNeonAnimationNeonSharedElementAnimatableBehaviorHtml, map[string]*bintree{}},
			"neon-shared-element-animation-behavior.html": &bintree{bower_componentsNeonAnimationNeonSharedElementAnimationBehaviorHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsNeonAnimationTestIndexHtml, map[string]*bintree{}},
				"neon-animated-pages-descendant-selection.html": &bintree{bower_componentsNeonAnimationTestNeonAnimatedPagesDescendantSelectionHtml, map[string]*bintree{}},
				"neon-animated-pages-lazy.html": &bintree{bower_componentsNeonAnimationTestNeonAnimatedPagesLazyHtml, map[string]*bintree{}},
				"neon-animated-pages.html": &bintree{bower_componentsNeonAnimationTestNeonAnimatedPagesHtml, map[string]*bintree{}},
				"test-resizable-pages.html": &bintree{bower_componentsNeonAnimationTestTestResizablePagesHtml, map[string]*bintree{}},
			}},
			"web-animations.html": &bintree{bower_componentsNeonAnimationWebAnimationsHtml, map[string]*bintree{}},
		}},
		"paper-behaviors": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsPaperBehaviorsBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsPaperBehaviorsGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsPaperBehaviorsTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsPaperBehaviorsContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsPaperBehaviorsReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsPaperBehaviorsBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperBehaviorsDemoIndexHtml, map[string]*bintree{}},
				"paper-button.html": &bintree{bower_componentsPaperBehaviorsDemoPaperButtonHtml, map[string]*bintree{}},
				"paper-radio-button.html": &bintree{bower_componentsPaperBehaviorsDemoPaperRadioButtonHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsPaperBehaviorsIndexHtml, map[string]*bintree{}},
			"paper-button-behavior.html": &bintree{bower_componentsPaperBehaviorsPaperButtonBehaviorHtml, map[string]*bintree{}},
			"paper-checked-element-behavior.html": &bintree{bower_componentsPaperBehaviorsPaperCheckedElementBehaviorHtml, map[string]*bintree{}},
			"paper-inky-focus-behavior.html": &bintree{bower_componentsPaperBehaviorsPaperInkyFocusBehaviorHtml, map[string]*bintree{}},
			"paper-ripple-behavior.html": &bintree{bower_componentsPaperBehaviorsPaperRippleBehaviorHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperBehaviorsTestIndexHtml, map[string]*bintree{}},
				"paper-button-behavior.html": &bintree{bower_componentsPaperBehaviorsTestPaperButtonBehaviorHtml, map[string]*bintree{}},
				"paper-checked-element-behavior.html": &bintree{bower_componentsPaperBehaviorsTestPaperCheckedElementBehaviorHtml, map[string]*bintree{}},
				"paper-radio-button-behavior.html": &bintree{bower_componentsPaperBehaviorsTestPaperRadioButtonBehaviorHtml, map[string]*bintree{}},
				"paper-ripple-behavior.html": &bintree{bower_componentsPaperBehaviorsTestPaperRippleBehaviorHtml, map[string]*bintree{}},
				"shadowed-ripple.html": &bintree{bower_componentsPaperBehaviorsTestShadowedRippleHtml, map[string]*bintree{}},
				"test-button.html": &bintree{bower_componentsPaperBehaviorsTestTestButtonHtml, map[string]*bintree{}},
				"test-radio-button.html": &bintree{bower_componentsPaperBehaviorsTestTestRadioButtonHtml, map[string]*bintree{}},
			}},
		}},
		"paper-button": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsPaperButtonBowerJson, map[string]*bintree{}},
			".github": &bintree{nil, map[string]*bintree{
				"ISSUE_TEMPLATE.md": &bintree{bower_componentsPaperButtonGithubIssue_templateMd, map[string]*bintree{}},
			}},
			".gitignore": &bintree{bower_componentsPaperButtonGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsPaperButtonTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsPaperButtonContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsPaperButtonReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsPaperButtonBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperButtonDemoIndexHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsPaperButtonIndexHtml, map[string]*bintree{}},
			"paper-button.html": &bintree{bower_componentsPaperButtonPaperButtonHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperButtonTestIndexHtml, map[string]*bintree{}},
				"paper-button.html": &bintree{bower_componentsPaperButtonTestPaperButtonHtml, map[string]*bintree{}},
			}},
		}},
		"paper-card": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsPaperCardBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsPaperCardGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsPaperCardTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsPaperCardContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsPaperCardReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsPaperCardBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"cafe.png": &bintree{bower_componentsPaperCardDemoCafePng, map[string]*bintree{}},
				"donuts.png": &bintree{bower_componentsPaperCardDemoDonutsPng, map[string]*bintree{}},
				"house.png": &bintree{bower_componentsPaperCardDemoHousePng, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsPaperCardDemoIndexHtml, map[string]*bintree{}},
				"travel.png": &bintree{bower_componentsPaperCardDemoTravelPng, map[string]*bintree{}},
				"trip.png": &bintree{bower_componentsPaperCardDemoTripPng, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsPaperCardIndexHtml, map[string]*bintree{}},
			"paper-card.html": &bintree{bower_componentsPaperCardPaperCardHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"basic.html": &bintree{bower_componentsPaperCardTestBasicHtml, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsPaperCardTestIndexHtml, map[string]*bintree{}},
			}},
		}},
		"paper-drawer-panel": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsPaperDrawerPanelBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsPaperDrawerPanelGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsPaperDrawerPanelTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsPaperDrawerPanelContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsPaperDrawerPanelReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsPaperDrawerPanelBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperDrawerPanelDemoIndexHtml, map[string]*bintree{}},
			}},
			"hero.svg": &bintree{bower_componentsPaperDrawerPanelHeroSvg, map[string]*bintree{}},
			"index.html": &bintree{bower_componentsPaperDrawerPanelIndexHtml, map[string]*bintree{}},
			"paper-drawer-panel.html": &bintree{bower_componentsPaperDrawerPanelPaperDrawerPanelHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperDrawerPanelTestIndexHtml, map[string]*bintree{}},
				"positioning.html": &bintree{bower_componentsPaperDrawerPanelTestPositioningHtml, map[string]*bintree{}},
				"small-devices.html": &bintree{bower_componentsPaperDrawerPanelTestSmallDevicesHtml, map[string]*bintree{}},
			}},
		}},
		"paper-dropdown-menu": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsPaperDropdownMenuBowerJson, map[string]*bintree{}},
			".github": &bintree{nil, map[string]*bintree{
				"ISSUE_TEMPLATE.md": &bintree{bower_componentsPaperDropdownMenuGithubIssue_templateMd, map[string]*bintree{}},
			}},
			".gitignore": &bintree{bower_componentsPaperDropdownMenuGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsPaperDropdownMenuTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsPaperDropdownMenuContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsPaperDropdownMenuReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsPaperDropdownMenuBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperDropdownMenuDemoIndexHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsPaperDropdownMenuIndexHtml, map[string]*bintree{}},
			"paper-dropdown-menu-icons.html": &bintree{bower_componentsPaperDropdownMenuPaperDropdownMenuIconsHtml, map[string]*bintree{}},
			"paper-dropdown-menu-light.html": &bintree{bower_componentsPaperDropdownMenuPaperDropdownMenuLightHtml, map[string]*bintree{}},
			"paper-dropdown-menu-shared-styles.html": &bintree{bower_componentsPaperDropdownMenuPaperDropdownMenuSharedStylesHtml, map[string]*bintree{}},
			"paper-dropdown-menu.html": &bintree{bower_componentsPaperDropdownMenuPaperDropdownMenuHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperDropdownMenuTestIndexHtml, map[string]*bintree{}},
				"paper-dropdown-menu-light.html": &bintree{bower_componentsPaperDropdownMenuTestPaperDropdownMenuLightHtml, map[string]*bintree{}},
				"paper-dropdown-menu.html": &bintree{bower_componentsPaperDropdownMenuTestPaperDropdownMenuHtml, map[string]*bintree{}},
			}},
		}},
		"paper-header-panel": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsPaperHeaderPanelBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsPaperHeaderPanelGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsPaperHeaderPanelTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsPaperHeaderPanelContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsPaperHeaderPanelReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsPaperHeaderPanelBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperHeaderPanelDemoIndexHtml, map[string]*bintree{}},
			}},
			"hero.svg": &bintree{bower_componentsPaperHeaderPanelHeroSvg, map[string]*bintree{}},
			"index.html": &bintree{bower_componentsPaperHeaderPanelIndexHtml, map[string]*bintree{}},
			"paper-header-panel.html": &bintree{bower_componentsPaperHeaderPanelPaperHeaderPanelHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"basic.html": &bintree{bower_componentsPaperHeaderPanelTestBasicHtml, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsPaperHeaderPanelTestIndexHtml, map[string]*bintree{}},
			}},
		}},
		"paper-icon-button": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsPaperIconButtonBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsPaperIconButtonGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsPaperIconButtonTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsPaperIconButtonContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsPaperIconButtonReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsPaperIconButtonBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperIconButtonDemoIndexHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsPaperIconButtonIndexHtml, map[string]*bintree{}},
			"paper-icon-button.html": &bintree{bower_componentsPaperIconButtonPaperIconButtonHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"a11y.html": &bintree{bower_componentsPaperIconButtonTestA11yHtml, map[string]*bintree{}},
				"basic.html": &bintree{bower_componentsPaperIconButtonTestBasicHtml, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsPaperIconButtonTestIndexHtml, map[string]*bintree{}},
			}},
		}},
		"paper-input": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsPaperInputBowerJson, map[string]*bintree{}},
			".github": &bintree{nil, map[string]*bintree{
				"ISSUE_TEMPLATE.md": &bintree{bower_componentsPaperInputGithubIssue_templateMd, map[string]*bintree{}},
			}},
			".gitignore": &bintree{bower_componentsPaperInputGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsPaperInputTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsPaperInputContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsPaperInputReadmeMd, map[string]*bintree{}},
			"all-imports.html": &bintree{bower_componentsPaperInputAllImportsHtml, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsPaperInputBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperInputDemoIndexHtml, map[string]*bintree{}},
				"ssn-input.html": &bintree{bower_componentsPaperInputDemoSsnInputHtml, map[string]*bintree{}},
				"ssn-validator.html": &bintree{bower_componentsPaperInputDemoSsnValidatorHtml, map[string]*bintree{}},
			}},
			"hero.svg": &bintree{bower_componentsPaperInputHeroSvg, map[string]*bintree{}},
			"index.html": &bintree{bower_componentsPaperInputIndexHtml, map[string]*bintree{}},
			"paper-input-addon-behavior.html": &bintree{bower_componentsPaperInputPaperInputAddonBehaviorHtml, map[string]*bintree{}},
			"paper-input-behavior.html": &bintree{bower_componentsPaperInputPaperInputBehaviorHtml, map[string]*bintree{}},
			"paper-input-char-counter.html": &bintree{bower_componentsPaperInputPaperInputCharCounterHtml, map[string]*bintree{}},
			"paper-input-container.html": &bintree{bower_componentsPaperInputPaperInputContainerHtml, map[string]*bintree{}},
			"paper-input-error.html": &bintree{bower_componentsPaperInputPaperInputErrorHtml, map[string]*bintree{}},
			"paper-input.html": &bintree{bower_componentsPaperInputPaperInputHtml, map[string]*bintree{}},
			"paper-textarea.html": &bintree{bower_componentsPaperInputPaperTextareaHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperInputTestIndexHtml, map[string]*bintree{}},
				"letters-only.html": &bintree{bower_componentsPaperInputTestLettersOnlyHtml, map[string]*bintree{}},
				"paper-input-char-counter.html": &bintree{bower_componentsPaperInputTestPaperInputCharCounterHtml, map[string]*bintree{}},
				"paper-input-container.html": &bintree{bower_componentsPaperInputTestPaperInputContainerHtml, map[string]*bintree{}},
				"paper-input-error.html": &bintree{bower_componentsPaperInputTestPaperInputErrorHtml, map[string]*bintree{}},
				"paper-input.html": &bintree{bower_componentsPaperInputTestPaperInputHtml, map[string]*bintree{}},
				"paper-textarea.html": &bintree{bower_componentsPaperInputTestPaperTextareaHtml, map[string]*bintree{}},
			}},
		}},
		"paper-item": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsPaperItemBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsPaperItemGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsPaperItemTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsPaperItemContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsPaperItemReadmeMd, map[string]*bintree{}},
			"all-imports.html": &bintree{bower_componentsPaperItemAllImportsHtml, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsPaperItemBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperItemDemoIndexHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsPaperItemIndexHtml, map[string]*bintree{}},
			"paper-icon-item.html": &bintree{bower_componentsPaperItemPaperIconItemHtml, map[string]*bintree{}},
			"paper-item-behavior.html": &bintree{bower_componentsPaperItemPaperItemBehaviorHtml, map[string]*bintree{}},
			"paper-item-body.html": &bintree{bower_componentsPaperItemPaperItemBodyHtml, map[string]*bintree{}},
			"paper-item-shared-styles.html": &bintree{bower_componentsPaperItemPaperItemSharedStylesHtml, map[string]*bintree{}},
			"paper-item.html": &bintree{bower_componentsPaperItemPaperItemHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperItemTestIndexHtml, map[string]*bintree{}},
				"paper-item.html": &bintree{bower_componentsPaperItemTestPaperItemHtml, map[string]*bintree{}},
			}},
		}},
		"paper-material": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsPaperMaterialBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsPaperMaterialGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsPaperMaterialTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsPaperMaterialContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsPaperMaterialReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsPaperMaterialBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperMaterialDemoIndexHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsPaperMaterialIndexHtml, map[string]*bintree{}},
			"paper-material-shared-styles.html": &bintree{bower_componentsPaperMaterialPaperMaterialSharedStylesHtml, map[string]*bintree{}},
			"paper-material.html": &bintree{bower_componentsPaperMaterialPaperMaterialHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperMaterialTestIndexHtml, map[string]*bintree{}},
				"paper-material.html": &bintree{bower_componentsPaperMaterialTestPaperMaterialHtml, map[string]*bintree{}},
			}},
		}},
		"paper-menu-button": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsPaperMenuButtonBowerJson, map[string]*bintree{}},
			".github": &bintree{nil, map[string]*bintree{
				"ISSUE_TEMPLATE.md": &bintree{bower_componentsPaperMenuButtonGithubIssue_templateMd, map[string]*bintree{}},
			}},
			".gitignore": &bintree{bower_componentsPaperMenuButtonGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsPaperMenuButtonTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsPaperMenuButtonContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsPaperMenuButtonReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsPaperMenuButtonBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperMenuButtonDemoIndexHtml, map[string]*bintree{}},
			}},
			"hero.svg": &bintree{bower_componentsPaperMenuButtonHeroSvg, map[string]*bintree{}},
			"index.html": &bintree{bower_componentsPaperMenuButtonIndexHtml, map[string]*bintree{}},
			"paper-menu-button-animations.html": &bintree{bower_componentsPaperMenuButtonPaperMenuButtonAnimationsHtml, map[string]*bintree{}},
			"paper-menu-button.html": &bintree{bower_componentsPaperMenuButtonPaperMenuButtonHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperMenuButtonTestIndexHtml, map[string]*bintree{}},
				"paper-menu-button.html": &bintree{bower_componentsPaperMenuButtonTestPaperMenuButtonHtml, map[string]*bintree{}},
			}},
		}},
		"paper-ripple": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsPaperRippleBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsPaperRippleGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsPaperRippleTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsPaperRippleContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsPaperRippleReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsPaperRippleBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperRippleDemoIndexHtml, map[string]*bintree{}},
			}},
			"hero.svg": &bintree{bower_componentsPaperRippleHeroSvg, map[string]*bintree{}},
			"index.html": &bintree{bower_componentsPaperRippleIndexHtml, map[string]*bintree{}},
			"paper-ripple.html": &bintree{bower_componentsPaperRipplePaperRippleHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperRippleTestIndexHtml, map[string]*bintree{}},
				"paper-ripple.html": &bintree{bower_componentsPaperRippleTestPaperRippleHtml, map[string]*bintree{}},
			}},
		}},
		"paper-styles": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsPaperStylesBowerJson, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsPaperStylesContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsPaperStylesReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsPaperStylesBowerJson2, map[string]*bintree{}},
			"classes": &bintree{nil, map[string]*bintree{
				"global.html": &bintree{bower_componentsPaperStylesClassesGlobalHtml, map[string]*bintree{}},
				"shadow-layout.html": &bintree{bower_componentsPaperStylesClassesShadowLayoutHtml, map[string]*bintree{}},
				"shadow.html": &bintree{bower_componentsPaperStylesClassesShadowHtml, map[string]*bintree{}},
				"typography.html": &bintree{bower_componentsPaperStylesClassesTypographyHtml, map[string]*bintree{}},
			}},
			"color.html": &bintree{bower_componentsPaperStylesColorHtml, map[string]*bintree{}},
			"default-theme.html": &bintree{bower_componentsPaperStylesDefaultThemeHtml, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperStylesDemoIndexHtml, map[string]*bintree{}},
			}},
			"demo-pages.html": &bintree{bower_componentsPaperStylesDemoPagesHtml, map[string]*bintree{}},
			"demo.css": &bintree{bower_componentsPaperStylesDemoCss, map[string]*bintree{}},
			"index.html": &bintree{bower_componentsPaperStylesIndexHtml, map[string]*bintree{}},
			"paper-styles-classes.html": &bintree{bower_componentsPaperStylesPaperStylesClassesHtml, map[string]*bintree{}},
			"paper-styles.html": &bintree{bower_componentsPaperStylesPaperStylesHtml, map[string]*bintree{}},
			"shadow.html": &bintree{bower_componentsPaperStylesShadowHtml, map[string]*bintree{}},
			"typography.html": &bintree{bower_componentsPaperStylesTypographyHtml, map[string]*bintree{}},
		}},
		"paper-tabs": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsPaperTabsBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsPaperTabsGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsPaperTabsTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsPaperTabsContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsPaperTabsReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsPaperTabsBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperTabsDemoIndexHtml, map[string]*bintree{}},
			}},
			"hero.svg": &bintree{bower_componentsPaperTabsHeroSvg, map[string]*bintree{}},
			"index.html": &bintree{bower_componentsPaperTabsIndexHtml, map[string]*bintree{}},
			"paper-tab.html": &bintree{bower_componentsPaperTabsPaperTabHtml, map[string]*bintree{}},
			"paper-tabs-icons.html": &bintree{bower_componentsPaperTabsPaperTabsIconsHtml, map[string]*bintree{}},
			"paper-tabs.html": &bintree{bower_componentsPaperTabsPaperTabsHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"attr-for-selected.html": &bintree{bower_componentsPaperTabsTestAttrForSelectedHtml, map[string]*bintree{}},
				"basic.html": &bintree{bower_componentsPaperTabsTestBasicHtml, map[string]*bintree{}},
				"index.html": &bintree{bower_componentsPaperTabsTestIndexHtml, map[string]*bintree{}},
			}},
		}},
		"paper-toolbar": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsPaperToolbarBowerJson, map[string]*bintree{}},
			".gitignore": &bintree{bower_componentsPaperToolbarGitignore, map[string]*bintree{}},
			".travis.yml": &bintree{bower_componentsPaperToolbarTravisYml, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsPaperToolbarContributingMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsPaperToolbarReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsPaperToolbarBowerJson2, map[string]*bintree{}},
			"demo": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperToolbarDemoIndexHtml, map[string]*bintree{}},
			}},
			"index.html": &bintree{bower_componentsPaperToolbarIndexHtml, map[string]*bintree{}},
			"paper-toolbar.html": &bintree{bower_componentsPaperToolbarPaperToolbarHtml, map[string]*bintree{}},
			"test": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{bower_componentsPaperToolbarTestIndexHtml, map[string]*bintree{}},
				"paper-toolbar.html": &bintree{bower_componentsPaperToolbarTestPaperToolbarHtml, map[string]*bintree{}},
			}},
		}},
		"polymer": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsPolymerBowerJson, map[string]*bintree{}},
			"LICENSE.txt": &bintree{bower_componentsPolymerLicenseTxt, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsPolymerBowerJson2, map[string]*bintree{}},
			"build.log": &bintree{bower_componentsPolymerBuildLog, map[string]*bintree{}},
			"polymer-micro.html": &bintree{bower_componentsPolymerPolymerMicroHtml, map[string]*bintree{}},
			"polymer-mini.html": &bintree{bower_componentsPolymerPolymerMiniHtml, map[string]*bintree{}},
			"polymer.html": &bintree{bower_componentsPolymerPolymerHtml, map[string]*bintree{}},
		}},
		"promise-polyfill": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsPromisePolyfillBowerJson, map[string]*bintree{}},
			"Gruntfile.js": &bintree{bower_componentsPromisePolyfillGruntfileJs, map[string]*bintree{}},
			"LICENSE": &bintree{bower_componentsPromisePolyfillLicense, map[string]*bintree{}},
			"Promise-Statics.js": &bintree{bower_componentsPromisePolyfillPromiseStaticsJs, map[string]*bintree{}},
			"Promise.js": &bintree{bower_componentsPromisePolyfillPromiseJs, map[string]*bintree{}},
			"Promise.min.js": &bintree{bower_componentsPromisePolyfillPromiseMinJs, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsPromisePolyfillReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsPromisePolyfillBowerJson2, map[string]*bintree{}},
			"package.json": &bintree{bower_componentsPromisePolyfillPackageJson, map[string]*bintree{}},
			"promise-polyfill-lite.html": &bintree{bower_componentsPromisePolyfillPromisePolyfillLiteHtml, map[string]*bintree{}},
			"promise-polyfill.html": &bintree{bower_componentsPromisePolyfillPromisePolyfillHtml, map[string]*bintree{}},
		}},
		"web-animations-js": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsWebAnimationsJsBowerJson, map[string]*bintree{}},
			"CONTRIBUTING.md": &bintree{bower_componentsWebAnimationsJsContributingMd, map[string]*bintree{}},
			"COPYING": &bintree{bower_componentsWebAnimationsJsCopying, map[string]*bintree{}},
			"History.md": &bintree{bower_componentsWebAnimationsJsHistoryMd, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsWebAnimationsJsReadmeMd, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsWebAnimationsJsBowerJson2, map[string]*bintree{}},
			"web-animations-next-lite.min.js": &bintree{bower_componentsWebAnimationsJsWebAnimationsNextLiteMinJs, map[string]*bintree{}},
			"web-animations-next-lite.min.js.map": &bintree{bower_componentsWebAnimationsJsWebAnimationsNextLiteMinJsMap, map[string]*bintree{}},
			"web-animations-next.min.js": &bintree{bower_componentsWebAnimationsJsWebAnimationsNextMinJs, map[string]*bintree{}},
			"web-animations-next.min.js.map": &bintree{bower_componentsWebAnimationsJsWebAnimationsNextMinJsMap, map[string]*bintree{}},
			"web-animations.html": &bintree{bower_componentsWebAnimationsJsWebAnimationsHtml, map[string]*bintree{}},
			"web-animations.min.js": &bintree{bower_componentsWebAnimationsJsWebAnimationsMinJs, map[string]*bintree{}},
			"web-animations.min.js.map": &bintree{bower_componentsWebAnimationsJsWebAnimationsMinJsMap, map[string]*bintree{}},
		}},
		"webcomponentsjs": &bintree{nil, map[string]*bintree{
			".bower.json": &bintree{bower_componentsWebcomponentsjsBowerJson, map[string]*bintree{}},
			"CustomElements.js": &bintree{bower_componentsWebcomponentsjsCustomelementsJs, map[string]*bintree{}},
			"CustomElements.min.js": &bintree{bower_componentsWebcomponentsjsCustomelementsMinJs, map[string]*bintree{}},
			"HTMLImports.js": &bintree{bower_componentsWebcomponentsjsHtmlimportsJs, map[string]*bintree{}},
			"HTMLImports.min.js": &bintree{bower_componentsWebcomponentsjsHtmlimportsMinJs, map[string]*bintree{}},
			"MutationObserver.js": &bintree{bower_componentsWebcomponentsjsMutationobserverJs, map[string]*bintree{}},
			"MutationObserver.min.js": &bintree{bower_componentsWebcomponentsjsMutationobserverMinJs, map[string]*bintree{}},
			"README.md": &bintree{bower_componentsWebcomponentsjsReadmeMd, map[string]*bintree{}},
			"ShadowDOM.js": &bintree{bower_componentsWebcomponentsjsShadowdomJs, map[string]*bintree{}},
			"ShadowDOM.min.js": &bintree{bower_componentsWebcomponentsjsShadowdomMinJs, map[string]*bintree{}},
			"bower.json": &bintree{bower_componentsWebcomponentsjsBowerJson2, map[string]*bintree{}},
			"build.log": &bintree{bower_componentsWebcomponentsjsBuildLog, map[string]*bintree{}},
			"package.json": &bintree{bower_componentsWebcomponentsjsPackageJson, map[string]*bintree{}},
			"webcomponents-lite.js": &bintree{bower_componentsWebcomponentsjsWebcomponentsLiteJs, map[string]*bintree{}},
			"webcomponents-lite.min.js": &bintree{bower_componentsWebcomponentsjsWebcomponentsLiteMinJs, map[string]*bintree{}},
			"webcomponents.js": &bintree{bower_componentsWebcomponentsjsWebcomponentsJs, map[string]*bintree{}},
			"webcomponents.min.js": &bintree{bower_componentsWebcomponentsjsWebcomponentsMinJs, map[string]*bintree{}},
		}},
	}},
	"pages": &bintree{nil, map[string]*bintree{
		"alert.html": &bintree{pagesAlertHtml, map[string]*bintree{}},
		"index.html": &bintree{pagesIndexHtml, map[string]*bintree{}},
	}},
	"tmpl": &bintree{nil, map[string]*bintree{
		"clan-errors.html": &bintree{tmplClanErrorsHtml, map[string]*bintree{}},
		"clan-info.html": &bintree{tmplClanInfoHtml, map[string]*bintree{}},
		"test.html": &bintree{tmplTestHtml, map[string]*bintree{}},
		"test.txt": &bintree{tmplTestTxt, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

